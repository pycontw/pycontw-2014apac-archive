[{"description": "Description", "talk_perm": "Don't record my talk", "language": "English", "author": "wenlien1001@gmail.com", "speech_type": "Regular Talk", "tags": "Test, Stanley", "abstract": "Abstract", "additional_info": "Reference", "reviews": [], "id": 107, "duration": "40 mins", "title": "Test from Stanley", "decision": "Undecided", "slide_perm": "Don't publish my slide", "audience_level": "Extreme"}, {"description": "This talk is modeled after a blog post I wrote on my own statically generated blog:\r\n\r\nhttp://nafiulis.me/making-a-static-blog-with-pelican.html\r\n\r\nParts of the talk:\r\n\r\n- Benefits of having a static blog\r\n- Why pelican is a good choice\r\n- Starting with pelican, the initial setup\r\n- Automation tools available\r\n- Themes, and how you can hack them\r\n- How settings work\r\n- Writing Content\r\n- Previewing content\r\n- Using and creating plugins\r\n- Hosting on github pages", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "gamesbrainiac@gmail.com", "speech_type": "Regular Talk", "tags": "Pelican, Static-Site-Generator", "abstract": "Static Site Generators are now used by many developers. If you see a .github.io domain, it means that their site is statically generated and version controlled. What I want to talk about in this lecture is why static blog generators are so popular and so powerful if you want something hackable. I'll talk about pelican, its good parts, its pitfalls as well as some custom suggestions to make your workflow faster.", "additional_info": "http://nafiulis.me/making-a-static-blog-with-pelican.html\r\nhttp://docs.getpelican.com/en/3.5.0/\r\nhttps://www.staticgen.com/", "reviews": [{"comment": "* The provided blog post about the experience in pelican is really detailed with some hints.\r\n* It is not just a step-by-step talk, but with some additional scripting to achieve some tasks. Quite good.\r\n* It might be even great if the author can think about providing some more advanced theme customization.", "reviewer": "drakeguan", "rank": 4}, {"comment": "I like the Pelican framework, it's a good static site generator worth more attention.", "reviewer": "liang2", "rank": 4}, {"comment": "I look the introduction about this package on YouTube. It's really amazing and convenient for people who want to create static webs without (complicated? ) python programming.  ", "reviewer": "yudalin", "rank": 4}], "id": 14, "duration": "40 mins", "title": "Building Static Blogs using Pelican", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "Description:\r\n------------\r\n\r\nAs a researcher using programming as an aid for more than 2 decades, I found the Pyhton (version 3) programming language in 2011, about 4 years ago. At beginning, I just used it to replace Perl which was used to glue some of my research programs in C/C++. Little by little, I have been attracted by the Python language itself more and more. It is so simple, friendly, beautiful, and elegant. It is also so powerful in many aspects. At last, I found it is far more than just as a glue language. It is itself the total solution for my research career. Last year (2014), after 3 years of experience of Python, I successfully implemented a real-time audio spectrogram in Python 3 and gave a talk about it in Pycon APAC 2014.  [https://tw.pycon.org/2014apac/zh/program/45] [https://github.com/renyuanL/realTimeSpectrogram]  [http://youtu.be/bjISlxO93Ns]\r\n\t\r\nOne of the most attractive features of Python (version 3) is that it allows me to use Chinese as identifiers to name variables, functions and classes in the codes. As a learner of English as a second language for more than 3 decades, I have to confess that I am not still as fluent in English as I am in Chinese. This is partially due to the difference of the vocabulary capability of mine in these 2 languages. While programming, I am often struggled in finding a good English word or phrase to name a function or variable. This usually hinders me much from thinking and coding fluently.\r\n\t\r\nIn fact, not only Python (version 3) has such a feature, many modern computer programming languages adopt Unicode as the source coding, such as Java, Ruby, Javascript, or even the new Swift language proposed by Apple Corp last year (2014). This means that programmers can use non-English like Chinese as identifiers. In other words, we can almost directly use Chinese to write programs, except for a small number of keywords, which is usually not a literate problem since those keywords are usually simple, short, and common grammatically functional words in English, such as \u201cfor\u201d, \u201cwhile\u201d, \u201cclass\u201d, \u201cimport\u201d, \u2026, etc. All of a sudden, I thought this would be a key point to make the programming education more widespread globally, especially for those kids in high schools or even those adults who are not fluent (like me) in English as their second language.\r\n\r\nIn this project, we will choose Python-3 programming language for its Unicode source coding, with one of the famous turtle graphic module as an example.  By adding Chinese alias for functions and classes in the module, we will create a Chinese coding environment, which will be compatible with current and future versions of Python. If this has been done, it will really help programming education to more people in Chinese-speaking areas.\r\n\r\nSome previous efforts for similar purpose have been done in Python 2, which is in ASCII source coding. \u201cChinesePython\u201d and \u201czhpy\u201d are two of them. [http://www.chinesepython.org/] [https://code.google.com/p/zhpy/] Compared with these efforts, the major goal of this project is to create a more concise, simpler Chinese Python environment, including a set of 18 translated official sample programs, with a complete program description, and ultimately provides the online help function.\r\n\r\nThe methodology is to dive into the source code of \u201cturtle.py\u201d , a famous module included in the standard library of the official Python distribution. By fully understanding the \u201cturtle\u201d module, we created an accompanied module called \u201cturtle_tc\u201d , where we provided a full list of alias in traditional Chinese for all identifiers used in \u201cturtle\u201d. By this way, as long as the programmer \u201cimport  turtle_tc\u201d, he can use all Chinese names of functions or classes in his/her programs. By providing additional document files, the programmers are also allowed to use on-line help functions, all in traditional Chinese. Here is an example. It is translated from \"yinyang.py\" distributed as a demo program in official python distribution.\r\n\r\nCode Example:\r\n------------\r\n\r\nfrom turtle_tc import * \r\n\r\ndef \u9670(\u534a\u5f91, \u984f\u82721, \u984f\u82722): \r\n    \u7b46\u5bec(3) \r\n    \u984f\u8272(\u9ed1, \u984f\u82721) \r\n    \u958b\u59cb\u586b() \r\n    \u756b\u5713(\u534a\u5f91/2., 180) \r\n    \u756b\u5713(\u534a\u5f91, 180) \r\n    \u5de6\u8f49(180) \r\n    \u756b\u5713(-\u534a\u5f91/2., 180) \r\n    \u7d50\u675f\u586b() \r\n    \u5de6\u8f49(90) \r\n    \u63d0\u7b46() \r\n    \u524d\u9032(\u534a\u5f91*0.35) \r\n    \u53f3\u8f49(90) \r\n    \u4e0b\u7b46() \r\n    \u984f\u8272(\u984f\u82721, \u984f\u82722) \r\n    \u958b\u59cb\u586b() \r\n    \u756b\u5713(\u534a\u5f91*0.15) \r\n    \u7d50\u675f\u586b() \r\n    \u5de6\u8f49(90) \r\n    \u63d0\u7b46() \r\n    \u5f8c\u9000(\u534a\u5f91*0.35) \r\n    \u4e0b\u7b46() \r\n    \u5de6\u8f49(90) \r\n\u3000 \r\ndef \u4e3b\u51fd\u6578(): \r\n    \u91cd\u8a2d() \r\n    \u9670(200, \u9ed1, \u767d) \r\n    \u9670(200, \u767d, \u9ed1) \r\n    \u85cf\u9f9c() \r\n    return \"\u5b8c\u6210\uff01\" \r\n\u3000 \r\nif __name__ == '__main__': \r\n    \u4e3b\u51fd\u6578() \r\n    \u4e3b\u8ff4\u5708() \r\n\r\nHelp online:\r\n------------\r\n\r\n>>> help(\u524d\u9032) \r\nHelp on function \u524d\u9032 in module turtle_tc: \r\n\u524d\u9032(distance) \r\n    \u300e0053  \u4e2d\u6587\u8aaa\u660e\u300f \r\n    \u9f9c\u524d\u9032\u6307\u5b9a\u7684\u8ddd\u96e2\u3002 \r\n            \u5225\u540d: \u524d\u9032 | forward | fd \r\n            \u53c3\u6578: \r\n            \u8ddd\u96e2, distance - \u4e00\u500b\u6578\u5b57(\u6574\u6578\u6216\u6d6e\u9ede\u6578) \r\n            \u9f9c\u524d\u9032\u6307\u5b9a\u7684\u8ddd\u96e2, \u5f80\u9f9c\u7684\u982d\u4e4b\u65b9\u5411\u3002 \r\n            \u793a\u4f8b(\u7269\u4ef6\u540d\u70ba\u300c\u5c0f\u9f9c\u300d\u7684\u5be6\u4f8b): \r\n            >>> from turtle_tc import * \r\n            >>> \u5c0f\u9f9c= \u9f9c\u985e() \r\n            >>> \u5c0f\u9f9c.\u4f4d\u7f6e() \r\n            (0.00,0.00) \r\n            >>> \u5c0f\u9f9c.\u524d\u9032(25) \r\n            >>> \u5c0f\u9f9c.\u4f4d\u7f6e() \r\n            (25.00,0.00) \r\n            >>> \u5c0f\u9f9c.\u524d\u9032(-75) \r\n            >>> \u5c0f\u9f9c.\u4f4d\u7f6e() \r\n            (-50.00,0.00) \r\n\r\nIn this project, we will present the whole set of 18 turtle demo programs in the official python distribution translated into traditional Chinese with a convenient viewer program. With such a initial study, we hope to extend such a task to help teach Python programming to a wider audience. For those who learn reading, writing and math in their native language, usually not English, they can also learn Python programming in such a similar way.\r\n\r\n\r\nKeywords:\r\n-------- \r\nChinese programming, Python, Programming education, Turtle Graphics.", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "renyuan.lyu@gmail.com", "speech_type": "Regular Talk", "tags": "Education, Turtle Graphics, Python 3,  Traditional Chinese, Translation, English as a Second Language,", "abstract": "In this project, a set of 18 turtle demo programs has been translated into traditional Chinese (tc) as an example to show the possibility to write Python code conveniently in non-English language. In such a way, it will improve code clarity and readability for non-native English speakers, according to Python PEP 3131. In personal belief, this will definitely attract more people without English fluency to programming world. This project has been done by providing a full list of tc alias (turtle_tc.py) for the official python turtle module and also a tc document file for on-line help functions. A viewer program is also provided to browse them for convinience. The whole set of programs can be found in github.\r\n\r\n[https://github.com/renyuanL/pythonTurtleInChinese/tree/master/tcExamples]", "additional_info": "Reference:\r\n---------\r\n\r\n[1] The whole set of 18 turtle demo programs\r\nhttps://github.com/renyuanL/pythonTurtleInChinese/tree/master/examples/tcExamples\r\n\r\nDemo on youtube\r\nhttp://youtu.be/sQFKjlxw2mw\r\n\r\n[2] renyuanL/pythonTurtleInChinese\r\nhttps://github.com/renyuanL/pythonTurtleInChinese\r\n\r\n[3] ChinesePython\r\nhttp://www.chinesepython.org/\r\n\r\n[4] Zhpy\r\nhttps://code.google.com/p/zhpy/\r\n\r\n[5] Computer Programming for Everybody\r\nhttps://www.python.org/doc/essays/cp4e/\r\n\r\n[6] PEP 3131 - Supporting Non-ASCII Identifiers\r\nhttps://www.python.org/dev/peps/pep-3131/\r\n", "reviews": [{"comment": "Old topic but still interesting. Recommend to be part of lightning talk.", "reviewer": "program", "rank": 2}, {"comment": "nice work and clear objective, would draw everyone's attention in a lighting show.", "reviewer": "jin", "rank": 1}, {"comment": "I think this topic is not heavy enough obviously, since there is trivial in Python3.\r\nIf there is more about changing keyword as unicode or invisible characters, it will be more fun and more content.  ", "reviewer": "apua", "rank": 1}], "id": 13, "duration": "40 mins", "title": "Python Programming in non-English Language to improve readability for non-native English speakers", "decision": "Rejected", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "\u6709\u7684\u6642\u5019\uff0c\u6211\u5011\u6703\u628a\u6211\u5011\u91cd\u8907\u7684 django \u7a0b\u5f0f\u78bc\u62bd\u51fa\u4f86\u8b8a\u6210 django \u5957\u4ef6\u3002 \u4f46\u662f\u8981\u80fd\u5920\u8b93\u4eba\u65b9\u4fbf\u7684\u91cd\u8907\u4f7f\u7528\uff0c\u537b\u6709\u5f88\u591a\u6280\u5de7\u3002\u9019\u88cf\u6703\u5206\u6790 Django \u5e38\u898b\u7b2c\u4e09\u65b9\u5957\u4ef6\u7684\u88fd\u4f5c\u65b9\u5f0f\u3002", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "tim.yellow@gmail.com", "speech_type": "Regular Talk", "tags": "django", "abstract": "\u6709\u7684\u6642\u5019\uff0c\u6211\u5011\u6703\u628a\u6211\u5011\u91cd\u8907\u7684 django \u7a0b\u5f0f\u78bc\u62bd\u51fa\u4f86\u8b8a\u6210 django \u5957\u4ef6\u3002 \u4f46\u662f\u8981\u80fd\u5920\u8b93\u4eba\u65b9\u4fbf\u7684\u91cd\u8907\u4f7f\u7528\uff0c\u537b\u6709\u5f88\u591a\u6280\u5de7\u3002\u9019\u88cf\u6703\u5206\u6790 Django \u5e38\u898b\u7b2c\u4e09\u65b9\u5957\u4ef6\u7684\u88fd\u4f5c\u65b9\u5f0f\u3002", "additional_info": "https://docs.djangoproject.com/en/1.7/ref/applications/", "reviews": [{"comment": "The abstraction and description is not that enough and attractive, I think.", "reviewer": "drakeguan", "rank": 2}, {"comment": "It feels kind of short and likely to be rejected.", "reviewer": "keitheis", "rank": 1}, {"comment": "Interesting\uff01", "reviewer": "c3h3", "rank": 5}, {"comment": "\u5f88\u96e3\u60f3\u50cf Django \u5957\u4ef6\u65b9\u9762\u7684\u6280\u5de7\u53ef\u4ee5\u6210\u70ba\u4e00\u500b\u592a\u5438\u5f15\u4eba\u7684\u4e3b\u984c\uff0c", "reviewer": "andy", "rank": 1}], "id": 16, "duration": "40 mins", "title": "\u6559\u7df4\uff0c\u6211\u60f3\u5beb  Django app \u7d66\u5927\u5bb6\u7528", "decision": "Rejected", "slide_perm": "CC-BY-NC-SA", "audience_level": "Extreme"}, {"description": "\u4eca\u5e74\u5de5\u4f5c\u4e0a\u9700\u8981\u4e00\u500b\u61c9\u6025\u7684 coloring print function.\r\n\u5728\u67e5\u8a62\u5225\u4eba\u90fd\u6c92\u6709\u505a\u51fa\u6211\u6eff\u610f\u7684\u5de5\u5177\u4e4b\u5f8c, \u81ea\u5df1\u505a\u4e86\u4e00\u500b,\r\n\r\n\u53c3\u8003\u5225\u4eba\u505a\u7684\u5de5\u5177\u4e4b\u5f8c, \u89ba\u5f97\u6211\u53ef\u4ee5\u505a\u66f4\u591a\u5be6\u7528\u8a2d\u8a08\u8207\u53d6\u6368,\r\n\u5728\u91cd\u88fd\u7684\u671f\u9593\u767c\u73fe Python \u7684 doctest, unittest, importing system, run module in CLI, pydoc,\r\n\u9019\u4e9b\u57fa\u672c\u6280\u5de7\u5982\u679c\u638c\u63e1\u4e86, \u80fd\u8b93\u7a0b\u5f0f\u5beb\u5f97\u5f88\u512a\u96c5, \u9867\u53ca\u5f88\u5168\u9762.\r\n\r\n\u60f3\u5728 lightning talk \u5206\u4eab, \u5229\u7528\u9019\u5e7e\u6a23\u5c0f\u6280\u5de7\u4ee4\u64b0\u5beb\u4e00\u4efd\u5c0f\u7a0b\u5f0f\u4ee5\u52a0\u5f37\u54c1\u8cea\u52a0\u901f\u958b\u767c, \u7684\u5fc3\u5f97.\r\n", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "Apua.A.Aa@gmail.com", "speech_type": "Lightning Talk", "tags": "programming", "abstract": "\u4eca\u5e74\u56e0\u5de5\u4f5c\u9700\u6c42\u505a\u4e86\u4e00\u500b\u5c0f\u7a0b\u5f0f\u53eb\u505a \"Color Print\".\r\n\u88fd\u4f5c\u6b64\u5de5\u5177\u6709\u4e00\u4e9b\u5fc3\u5f97\u60f3\u8981\u5206\u4eab.", "additional_info": "Color Print README\r\n    My little project which refers below projects.\r\n    GitHub: https://github.com/apua/colorprint\r\n\r\nColorRex\r\n    A coloring command line tool.\r\n    BitBucket: https://bitbucket.org/linibou/colorex/wiki/Home\r\n\r\nColored\r\n    A module provides coloring functions.\r\n    PyPI: https://pypi.python.org/pypi/colored\r\n\r\nTermColor\r\n    Yet another module provides coloring functions.\r\n    PyPI: https://pypi.python.org/pypi/termcolor", "reviews": [{"comment": "Best practice sharing is always a good topic for lightning talk.", "reviewer": "stanley", "rank": 4}, {"comment": "- Very useful. :p like it.", "reviewer": "AlfredW", "rank": 4}], "id": 28, "duration": "40 mins", "title": "\u958b\u767c\u5c0f\u5de5\u5177\u7684\u5fc3\u5f97", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Extreme"}, {"description": "\u5167\u5bb9\uff1a\r\n\u5c07\u4ee5\u5728 Taipei.py \u7684\u6f14\u8b1b\uff08\u8acb\u898b reference\uff09\u70ba\u90e8\u5206\u57fa\u790e\uff0c \u518d\u52a0\u4e0a\u5be6\u969b\u7684\u7a0b\u5f0f\u78bc\u89e3\u8aaa\uff08or live coding\uff09\u8207\u500b\u4eba\u7684\u4f7f\u7528\u7d93\u9a57\u5206\u4eab\u3002\r\n\r\n\u76ee\u6a19\uff1a\r\n\u8b93\u807d\u773e\u5b78\u6703\u4f7f\u7528 pytest \u7684\u57fa\u672c\u529f\u80fd\uff0c\u53ca\u4e86\u89e3\u57fa\u672c\u7684\u6e2c\u8a66\u6982\u5ff5\r\n\r\n\r\n", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "excusemejoe@gmail.com", "speech_type": "Regular Talk", "tags": "py.test , unittest, testing", "abstract": "Python \u64c1\u6709\u7684 unittest \u6df1\u53d7\u65e9\u671f JUnit \u6e2c\u8a66\u6846\u67b6\u7684\u5f71\u97ff\uff0c\u5145\u65a5\u8457\u4e0d\u592a Pythonic \u7684 API \u8207\u8a2d\u8a08\u3002\u7136\u800c\uff0c\u5728\u8fd1\u5e74 JUnit \u65e9\u5df2\u5927\u91cf\u4f7f\u7528 annotation/fixtures/asertThat ... \u65b0\u5143\u7d20\u6642\uff0c\u96e3\u9053\u6211\u5011\u9084\u5f97\u7e7c\u7e8c\u7528\u820a\u65b9\u6cd5\u5beb\u6e2c\u8a66\u55ce\uff1f\u672c\u6f14\u8b1b\u9664\u4e86\u4ecb\u7d39\u6e2c\u8a66\u795e\u5668 pytest \u7684\u4e3b\u8981\u529f\u80fd\u4ee5\u5916\uff0c\u4ea6\u6703\u5c55\u793a\u5982\u4f55\u5584\u7528 pytest  \u4f86\u64b0\u5beb\u5404\u7a2e\u985e\u578b\u7684\u6e2c\u8a66\uff1aunit testing, integration testing, functional testing\u3002", "additional_info": "http://www.slideshare.net/excusemejoe/pytest-and-friends", "reviews": [{"comment": "According to speaker's given talk in Taipei.py https://www.youtube.com/watch?v=I2unjlSZUC8\r\n\r\nI believed it's interesting.", "reviewer": "keitheis", "rank": 4}, {"comment": "\u6bcf\u4f4d\u7a0b\u5e8f\u54e1\u90fd\u61c9\u8a72\u61c2 unit test \u4e26\u77ad\u89e3\u5982\u4f55\u64cd\u4f5c\uff0c\u6839\u64da\u8b1b\u8005\u63d0\u4f9b\u7684\u53c3\u8003\u8cc7\u6599\u5df2\u8aaa\u660e\u9019\u5834\u6f14\u8b1b\u7684\u53ef\u770b\u6027\u3002", "reviewer": "sosorry", "rank": 5}, {"comment": "Because his talk, let me start learning pytest.\r\nI can't wait to listen his wonderful talk.", "reviewer": "stanley", "rank": 5}, {"comment": "Interesting\uff01", "reviewer": "c3h3", "rank": 5}, {"comment": "Refer to the slide in reference, I think this talk is good, and we have a talk about testing this year.\r\nBut I suggest the \"audience level\" should not be \"introduction\"\r\n.", "reviewer": "apua", "rank": 4}], "id": 83, "duration": "40 mins", "title": "\u5feb\u5feb\u6a02\u6a02\u6210\u70ba Coding Ninja (by pytest)", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "* Encoding: What is it?\r\n* The \u201cstring\u201d abstraction.\r\n* Unicode and UTF (many flavours).\r\n* \u201c-*- coding: utf-8 -*-\u201d\r\n* File encoding v. declared encoding.\r\n* Unicode is not UTF-16, unless you use Notepad.\r\n* str/unicode/bytes, Python 2 and 3.\r\n* Python 3 still does it wrong: OS is bytes-based, but we\u2019re (as Python 3 programmers) outputting strings.\r\n* The \u201cio\u201d module and friends (bytes-based and Unicode-based)\r\n* Maybe you need six?\r\n* Windows! All hail the command prompt! Wadaya mean we use CP950 and Big-5 and Big-5 HKSCS?", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "uranusjr@gmail.com", "speech_type": "Regular Talk", "tags": "python, encoding", "abstract": "This talk is just for you if you ever saw that dreaded \u201cUnicodeEncodeError\u201d when you crawl the web, process some text files, or just want to print some things to your terminal window. What is this error, anyway? I saved my file as \u201cUnicode\u201d already! What does this \u201c# coding: utf-8\u201d thing even mean? I will answer all your questions about text. Everything. Come, and fire at me.", "additional_info": "", "reviews": [{"comment": "* I believe there is always huge demand of a talk about Unicode until the next decade.\r\n* The speaker has good experience at coding :)", "reviewer": "drakeguan", "rank": 5}, {"comment": "I want to buy you a \ud83c\udf7a (beer) and see if any part of our review system fail to deliver :)\r\n\r\nSeriously, a UnicodeError megapack is definitely needed for both beginners and cross-platform developers.\r\nLooking forward to an informative and entertaining talk.", "reviewer": "liang2", "rank": 5}, {"comment": "Unicode \u662f\u5f88\u5bb9\u6613\u88ab\u5ffd\u7565\u7684\u77e5\u8b58\uff0c\u5f88\u591a\u4eba\u90fd\u4ee5\u70ba\u81ea\u5df1\u61c2\uff0c\u537b\u6c92\u6709\u77ad\u89e3\u5168\u8c8c\u3002\u5982\u679c\u8b1b\u8005\u80fd\u5b8c\u6574\u7684\u4ecb\u7d39\uff0c\u76f8\u4fe1\u4e00\u5b9a\u5f88\u7cbe\u5f69\u3002", "reviewer": "sosorry", "rank": 5}, {"comment": "No one is happy to see an error, especially an unicode error. I believe the speaker could turn every frown into a smile.", "reviewer": "jin", "rank": 5}, {"comment": "Definitely a good talk for developers.", "reviewer": "stanley", "rank": 5}, {"comment": "UnicodeEncodeError is the most common error I ran into while crawling the web pages. Actually, I am really curious about this bug.", "reviewer": "yudalin", "rank": 5}], "id": 84, "duration": "40 mins", "title": "UnicodeEncodeError: can't encode character in position 0", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "In this talk, the following topics will be involved\r\n\r\n1. Computational Platform, (What you think what you compute)\r\n2. Web Computation for Dynamical Systems,\r\n3. Data visualisation, (interactivity and animation),\r\n4. Setup of multi-user Python computing Server. ", "talk_perm": "Don't record my talk", "language": "English", "author": "cchuang2009@gmail.com", "speech_type": "SciPy Talk (English Only)", "tags": "IPython notebook, Computations, DyLabIPy", "abstract": "Abstract\r\nTraditionally, the whole scientific workflow usually requires versatile user interface to work with, professional softwares to do computation, analysis, and make data visualization, and office suite for publication. To build up such working environment, it almost requires plenty of resources involved.\r\n\r\nAfter about ten years' development, IPython brought a breathtaking surge in this problem from its first release at 2012. IPython Notebook provides an interactive notebook interface that runs Python codes and generates the output in one's browser; moreover, output with pretty publication formats is also supported.\r\n\r\nIn this study, the project, \"On-line Laboratory for Dynamical Systems On IPython\" (DyLabIPy), will be introduced how to develop ubiquitous on-line Lab for Dynamic systems, with minimal resources but unlimited gains.\r\n\r\nKey Words: IPython Notebook, DyLabIPy", "additional_info": "[IPython]  http://ipython.org\r\n[DyLabIPy] https://github.com/cchuang2009/DyLabIPy", "reviews": [{"comment": "Good to see a practical usage of ipython and development of DyLabIPy.", "reviewer": "yuanchao", "rank": 3}, {"comment": "IPython is definitely an important tool for computationalists.  It is a good way to organize the introduction to IPython notebook with a research project.", "reviewer": "yungyuc", "rank": 4}, {"comment": "Suited to SciPy track. Although the talk is introductory one, it's IPython based development story will contribute to SciPy audience timely.", "reviewer": "whosaysni", "rank": 4}], "id": 15, "duration": "40 mins", "title": "Interactive Python Computing Integration", "decision": "Rejected", "slide_perm": "CC-BY-NC-SA", "audience_level": "Extreme"}, {"description": "Implementation\r\ni have also written a cache based django app which mocks the Hacker News website, ranging from user, comment and stories data. This app uses the HN wrapper. It reduces the amount of code and enhances logic .\r\n\r\nIn the end if I have time, I will also talk about the django implementation of this wrapper.", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "arindampradhan10@gmail.com", "speech_type": "Regular Talk", "tags": "scraping,web,django,gevent,requests", "abstract": "This talk will give an overview about creating a python wrapper for a simple api such as official hacker news json api. The wrapper is a read only client which uses requests and async gevent requests (grequests) to get a single or multiple json responses asynchronously and parse them to the wrapper model .\r\n\r\nWill speak about, how to structure your modules and writing helper functions and will give an overview about how gevent is better than parallel threaded requests.", "additional_info": "https://github.com/arindampradhan/yaaHN - wrapper for the HN API\r\n\r\nhttps://github.com/arindampradhan/mockHN - django app that uses \r\n\r\nhttps://github.com/HackerNews/API - official hacker news json api.", "reviews": [{"comment": "* We need more talks about asynchronous stuff, the mythic but fundamental technique for future development.", "reviewer": "drakeguan", "rank": 5}, {"comment": "Interesting.", "reviewer": "stanley", "rank": 5}, {"comment": "For introduction, I think showing how to make a simple wrapper is a good example.\r\nAnd it talks about coroutine technique, which will remind audience to try it.", "reviewer": "apua", "rank": 4}], "id": 17, "duration": "40 mins", "title": "python wrapping a json api", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "In this talk we discuss about the areas in which machine learning has been applied in Finance. Python has a rich library for machine learning. Common techniques of machine learning in finance include classification, regression and clustering, which belong to the general class of supervised and unsupervised learning. Classification techniques  are used for example in sentiment analysis of financial news and tweets. Clustering has been used in portfolio selection, whilst general regression has been used in various time series analysis. In this talk, we illustrate a simple example of sentiment analysis on financial news and tweets. \r\nLibraries discussed include statsmodel and sci-kit.", "talk_perm": "Don't record my talk", "language": "English", "author": "erictham115@gmail.com", "speech_type": "Regular Talk", "tags": "machine learning", "abstract": "Python has a rich library for machine learning. Common techniques of machine learning in finance include classification, regression and clustering. Classification techniques  are used for example in sentiment analysis of financial news and tweets. Clustering has been used in portfolio selection, whilst general regression has been used in various time series analysis. ", "additional_info": "", "reviews": [{"comment": "* Machine Learning + Finance!", "reviewer": "drakeguan", "rank": 4}, {"comment": "It is interesting to see how sentiment analysis combines with finance. \r\nHowever the description given is rather shallow, which didn't explicitly provide \r\nthe true detail of the method speaker is going to use.", "reviewer": "liang2", "rank": 3}, {"comment": "I believe it is a must talk for programmers who want to work in Wall Street.", "reviewer": "yudalin", "rank": 4}, {"comment": "How could us miss the chance to learning both machine learning and earning money.", "reviewer": "stanley", "rank": 5}], "id": 20, "duration": "40 mins", "title": "Machine learning in Finance using Python", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "I found a small feature that was added in CPython 3.4, then I tried it on my machine, but it suddenly work differently ...", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "wdv4758h@gmail.com", "speech_type": "Lightning Talk", "tags": "CPython, tarfile", "abstract": "student in NCTU,\r\nstart using Vim and write Python since 2012,\r\nlike Open Source,\r\nuse Linux all the day", "additional_info": "* https://docs.python.org/3/library/tarfile.html#command-line-interface\r\n* http://bugs.python.org/issue23421", "reviews": [{"comment": "Nice bug resolved!", "reviewer": "keitheis", "rank": 5}, {"comment": "seems interesting", "reviewer": "jin", "rank": 3}], "id": 23, "duration": "40 mins", "title": "CPython's bug in feature that nobody uses", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "- Intro to SpinPunch and our games\r\n- Requirements for our MMO game engine: big scale, low latency, high availability\r\n- MMO server architecture overview\r\n- Writing an asynchronous HTTP server with Twisted\r\n- Profiling for latency\r\n- Adding WebSockets support\r\n- Optional topic: Cross-server RPC with Twisted AMP protocol\r\n- Optional topic: Domain-specific language for builder games\r\n", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "dmaas@maasdigital.com", "speech_type": "Regular Talk", "tags": "Twisted, Asynchronous, Games", "abstract": "Our Python server drives top MMO strategy games like \"Thunder Run: War of Clans\", with 4 million accounts and over 1,000 concurrent logins. This talk will explain the basic architecture of our server-side software, with special focus on how we use the open-source Twisted library to write high-performance, low-latency network code.\r\n\r\n\u6211\u6703\u8b1b\u4e2d\u6587\uff0c\u5e0c\u671b\u53ef\u4ee5\u7528\u4e2d\u6587\u767c\u8868\u6b64\u6f14\u8b1b", "additional_info": "Our game studio: http://www.spinpunch.com/\r\nOur top game: http://www.thunderrun.com/", "reviews": [{"comment": "* A topic about asynchronous tasks, seldom mentioned in PyCon APAC/Taiwan, with good and real product.\r\n* It's good to see the intro of Twisted to broaden this conference.\r\n* An foreigner giving a lecture in Chinese. What can we expect then?!", "reviewer": "drakeguan", "rank": 5}, {"comment": "Super exciting. Love to see it!", "reviewer": "keitheis", "rank": 5}, {"comment": "Great Use Case. Every one like to listen real case.  very look froward to attend the talk", "reviewer": "tim", "rank": 5}], "id": 25, "duration": "40 mins", "title": "MMO Game Server Design with Twisted Python", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Extreme"}, {"description": "\u81ea\u5f9e\u53bb\u5e74\u6691\u5047\uff0c\u6211\u958b\u59cb\u63a5\u89f8Python\uff0c\u6b63\u5f0f\u5b78\u7fd2\u4e00\u7a2e\u7a0b\u5f0f\u8a9e\u8a00\uff0c\u6211\u767c\u73fePython\u5f88\u7c21\u55ae\u5c31\u53ef\u4ee5\u5b78\u8d77\u4f86\uff0c\u7279\u5225\u662fPython\u88e1\u9762\u6709\u500b turtle \u4f5c\u5716\u529f\u80fd\uff0c\u8207\u6211\u4ee5\u524d\u570b\u4e2d\u6642\u4ee3\u7684Scratch\u7a0b\u5f0f\u6bd4\u8d77\u4f86\uff0c\u66f4\u70ba\u7cbe\u7d30\uff0c\u80fd\u63a7\u5236\u7684\u6771\u897f\u5f88\u591a\uff0c\u597d\u50cf\u6bd4\u8f03\u65b9\u4fbf\u8868\u9054\u66f4\u8907\u96dc\u7684\u4f5c\u5716\u884c\u70ba\u3002\r\n\r\n\u904e\u4e86\u4e0d\u4e45\uff0c\u6211\u4e5f\u6b63\u5f0f\u9032\u5165\u9ad8\u4e2d\uff0c\u6210\u70ba\u9ad8\u4e00\u65b0\u751f\uff0c\u5728\u9ad8\u4e00\u7684\u7269\u7406\u8ab2\u7a0b\u4e2d\uff0c\u91cd\u65b0\u8907\u7fd2\u4e86\u570b\u4e2d\u6642\u4ee3\u5c31\u5b78\u904e\u7684\u725b\u9813\u529b\u5b78\uff0c\u50cf\u662f\u4f4d\u7f6e\u3001\u901f\u5ea6\u3001\u52a0\u901f\u5ea6\u3001\u5713\u5468\u904b\u52d5\u3001\u884c\u661f\u7684\u8ecc\u9053\u904b\u52d5\u7b49\u7b49\u3002\u6709\u4e00\u5929\uff0c\u6211\u7a81\u7136\u6709\u500b\u60f3\u6cd5\uff0c\u662f\u5426\u6211\u53ef\u4ee5\u628aPython\u548c\u7269\u7406\u9023\u5728\u4e00\u8d77\uff0c\u628a\u90a3\u4e9b\u7269\u7406\u5b78\u4e0a\u7684\u904b\u52d5\u73fe\u8c61\uff0c\u81ea\u5df1\u900f\u904e\u96fb\u8166\u7a0b\u5f0f\u628a\u5b83\u5011\u5448\u73fe\u51fa\u4f86\u3002\r\n\r\n\u6211\u5c31\u4ee5\u9ad8\u4e2d\u7269\u7406\u6559\u79d1\u66f8\u70ba\u8d77\u9ede\uff0c\u958b\u59cb\u53c3\u8003\u7db2\u8def\u4e0a\u6709\u95dc\u9019\u4e9b\u7269\u7406\u89c0\u5ff5\u7684\u8aaa\u660e\uff0c\u7279\u5225\u662fwikipedia \u4e0a\u7684\u6587\u7ae0\uff0c\u6574\u7406\u51fa\u4e00\u4e9b\u76f8\u95dc\u77e5\u8b58\uff0c\u6307\u5c0e\u8001\u5e2b\u5354\u52a9\u6211\u5728python\u6a19\u6e96\u51fd\u5f0f\u5eab\u4e2d\u627e\u5230\u4e86 \u4e00\u500b\u7d14\u7528python \u64b0\u5beb\u7684\u7a0b\u5f0f \u201dplanet_and_moon.py\u201d\uff0c\u5c31\u662f\u5728\u505a\u592a\u967d\u3001\u5730\u7403\u3001\u6708\u7403\u7684\u904b\u8f49\uff0c\u6211\u89ba\u5f97\u5f88\u6709\u50f9\u503c\uff0c\u5c31\u628a\u5b83\u7279\u5225\u95b1\u8b80\u6e05\u695a\uff0c\u4e00\u958b\u59cb\u4e0d\u61c2\u7684\u5730\u65b9\u96d6\u7136\u5f88\u591a\uff0c\u7279\u5225\u662f\u6709\u4e9b\u7279\u6b8a\u7684\u9f9c\u4f5c\u5716\u6307\u4ee4\uff0c\u6211\u4e5f\u5f97\u4e00\u4e00\u514b\u670d\uff0c\u9084\u6709\u5e7e\u500b\u8f03\u96e3\u7684Python\u8a9e\u6cd5\uff0c\u50cf\u662f\u300c\u985e\u5225\u300d(class)\u7684\u7528\u6cd5\u4e5f\u9084\u4e0d\u5927\u4e86\u89e3\uff0c\u85c9\u7531\u53c3\u52a0Shally\u8001\u5e2b\u5e36\u9818\u7684\u7a0b\u5f0f\u4ff1\u6a02\u90e8\uff0c\u6211\u6709\u6a5f\u6703\u8207\u5176\u4ed6\u66f4\u53b2\u5bb3\u7684\u4eba\u8acb\u6559\u3001\u8a0e\u8ad6\uff0c\u56e0\u6b64\u5c31\u8d8a\u4f86\u8d8a\u80fd\u7406\u89e3\uff0c\u5f9e\u4e2d\u5b78\u5230\u5f88\u591a\u65b0\u7684\u7a0b\u5f0f\u8a9e\u6cd5\u53ca\u7528\u6cd5\u3002 \u56e0\u6b64\uff0c\u6211\u4e5f\u628a\u9019\u500b\u7a0b\u5f0f\u76f8\u95dc\u7684\u91cd\u9ede\u548c\u539f\u7406\u5728\u6b64\u6574\u7406\u4e00\u4e0b\u4e26\u5448\u73fe\u51fa\u4f86\u3002\r\n\r\n\u63a5\u8457\u6211\u5c31\u5617\u8a66\u81ea\u5df1\u4f86\u5beb\u7a0b\u5f0f\u4e86\uff0c\u6211\u6253\u7b97\u4f9d\u5e8f\u5beb\u51fa\u4ee5\u4e0b\u9019\u5e7e\u7a2e\u904b\u52d5\u7684\u52d5\u756b\u7a0b\u5f0f\uff0c\u5305\u542b\u5e73\u62cb\u904b\u52d5\u3001\u5713\u5468\u904b\u52d5\u3001\u4e8c(\u661f)\u9ad4\u904b\u52d5\u4ee5\u53ca\u4e09(\u661f)\u9ad4\u904b\u52d5\u7b49\u7b49\u3002\u6211\u6703\u5148\u628a\u6211\u5728\u8ab2\u672c\u4e0a\u4ee5\u53ca\u7db2\u8def\u4e0a\u7684\u8cc7\u8a0a\u6574\u7406\u4e0b\u4f86\uff0c\u4e4b\u5f8c\u518d\u5217\u51fa\u6211\u7684\u7a0b\u5f0f\u78bc\uff0c\u6700\u5f8c\u662f\u57f7\u884c\u5b83\u5011\uff0c\u89c0\u770b\u6210\u679c\u3002\r\n\r\n\u4f4d\u7f6e\u3001\u901f\u5ea6\u3001\u52a0\u901f\u5ea6:\r\n\u5e73\u62cb\u904b\u52d5:\r\n\u4e00\u822c\u7684\u4e8c\u7dad\u66f2\u7dda\u904b\u52d5:\r\n\u5713\u5468\u904b\u52d5 (\u542b\u7c21\u8ae7\u904b\u52d5):\r\n\u725b\u9813\u842c\u6709\u5f15\u529b\u5b9a\u5f8b:\r\n\u4e8c\u9ad4\u904b\u52d5:\r\n\u4e09\u9ad4\u904b\u52d5:\r\n\r\n\u6211\u5728\u8001\u5e2b\u7684\u6307\u5c0e\u4e0b\u9010\u4e00\u5b8c\u6210\u70ba\u4ee5\u4e0a\u5404\u7a2e\u904b\u52d5\u64b0\u5bebPython \u7a0b\u5f0f\u78bc\uff0c\u4e26\u5be6\u969b\u904b\u884c\u7121\u8aa4\uff0c\u5f9e\u4e2d\u4e5f\u53ef\u4ee5\u66f4\u6539\u4e00\u4e9b\u53c3\u6578\uff0c\u4f86\u8a66\u73a9\u4e00\u4e0b\uff0c\u6709\u4e9b\u53c3\u6578\u8981\u662f\u8981\u7d93\u904e\u4e00\u6bb5\u6642\u9593\u7684\u5be6\u9a57\uff0c\u624d\u6703\u5f97\u5230\u6bd4\u8f03\u597d\u7684\u904b\u8f49\u6548\u679c\uff0c\u6bcf\u6b21\u6539\u904e\u53c3\u6578\u9084\u9700\u8981\u91cd\u8dd1\u7a0b\u5f0f\uff0c\u96d6\u6709\u4e9b\u4e0d\u4fbf\uff0c\u4f46\u96a8\u5f8c\u80fd\u76f4\u63a5\u770b\u5230\u6539\u8b8a\u5f8c\u7684\u7d50\u679c\uff0c\u89ba\u5f97\u5f88\u6709\u8da3\u3002\r\n\r\n\u76ee\u524d\u6211\u9084\u4e0d\u5927\u6703\u5beb\u5716\u5f62\u4f7f\u7528\u8005\u4ecb\u9762(GUI)\uff0c\u672a\u4f86\u5c07\u671d\u5411\u9019\u65b9\u9762\u4f86\u5b78\u7fd2\u4e00\u4e0b\u3002\u4ee5\u4e0a\u9019\u4e9b\u7a0b\u5f0f\u76ee\u524d\u5148\u4ee5\u9644\u9304\u65b9\u5f0f\u5217\u65bc\u672c\u6587\u5f8c\u9762\u4ee5\u4f9b\u53c3\u8003\uff0c\u57f7\u884c\u7684\u7d50\u679c\u7684\u87a2\u5e55\u622a\u5716\u5982\u4e0b\u3002\u5e0c\u671b\u6709\u6a5f\u6703\u5728 Pycon \u6703\u8b70\u4e0a\u767c\u8868\u9019\u4e9b\u5b78\u7fd2\u6210\u679c\u3002\r\n\r\n\f", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "calvin.lyu@gmail.com", "speech_type": "Regular Talk", "tags": "\u7269\u7406\uff0c\u4f5c\u5716\uff0c\u6559\u80b2", "abstract": "\u5728\u9019\u500b\u5c08\u984c\u7814\u7a76\u4e2d\uff0c\u6211\u5011\u6253\u7b97\u904b\u7528 Python \u4ee5\u53ca \u5176\u9f9c\u4f5c\u5716 (turtle) \u6a21\u7d44\uff0c\u64b0\u5beb\u4e00\u5957\u52d5\u756b\u7a0b\u5f0f\uff0c\u4f86\u8f14\u52a9\u5b78\u7fd2\u9ad8\u4e2d\u968e\u6bb5\u6240\u5b78\u5230\u7684\u725b\u9813\u529b\u5b78\u4e2d\u8207\u904b\u52d5\u6709\u95dc\u7684\u90e8\u5206\uff0c\u5305\u542b\u5e73\u62cb\u904b\u52d5\u3001\u66f2\u7dda\u904b\u52d5\u3001\u5713\u5468\u904b\u52d5\u3001\u4e8c\u9ad4\u904b\u52d5\u4ee5\u53ca\u4e09\u9ad4\u904b\u52d5\u7b49\u7b49\u3002 \r\n", "additional_info": "https://docs.python.org/3.4/library/turtle.html\r\nhttp://zh.wikipedia.org/wiki/\u725b\u9813\u842c\u6709\u5f15\u529b\u5b9a\u5f8b\r\nhttp://zh.wikipedia.org/wiki/\u725b\u9813\u904b\u52d5\u5b9a\u5f8b\r\n http://zh.wikipedia.org/wiki/\u514b\u535c\u52d2\u5b9a\u5f8b\r\n http://zh.wikipedia.org/wiki/\u5e73\u62cb\u904b\u52d5\r\n http://zh.wikipedia.org/wiki/\u66f2\u7dda\u904b\u52d5\r\n http://zh.wikipedia.org/wiki/\u5713\u5468\u904b\u52d5\r\n http://zh.wikipedia.org/wiki/\u7c21\u8ae7\u904b\u52d5\r\n http://zh.wikipedia.org/wiki/\u4e8c\u9ad4\u554f\u984c\r\n http://zh.wikipedia.org/wiki/\u4e09\u9ad4\u554f\u984c\r\n http://zh.wikipedia.org/wiki/\u6df7\u6c8c\u7406\u8ad6 ", "reviews": [{"comment": "- I think the content is insufficient.", "reviewer": "AlfredW", "rank": 1}, {"comment": "\u4e0d\u932f\u7684\u6982\u5ff5\u8207\u65b9\u5411\uff0c\u5982\u679c\u80fd\u66f4\u6df1\u5165\u4ecb\u7d39\u6703\u662f\u5f88\u6709\u610f\u7fa9\u7684\u6f14\u8b1b\u3002\u9069\u5408\u6295 lighting talk\u3002", "reviewer": "sosorry", "rank": 2}, {"comment": " I'm so glad to see our senior high student could self learning Python.\r\nWe should encourage him to give us a talk during lightning talk track.", "reviewer": "stanley", "rank": 2}], "id": 26, "duration": "40 mins", "title": "\u7528 Python Turtle Graphics (\u9f9c\u4f5c\u5716) \u53ca\u52d5\u756b \u4f86\u8f14\u52a9\u5b78\u7fd2 \u725b\u9813\u529b\u5b78 \u53ca\u904b\u52d5\u5b78", "decision": "Rejected", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "\u5148\u5f9e\u904e\u53bb\u7684\u80a1\u5e02\u8cc7\u8a0a, \u914d\u5408\u57fa\u672c\u80a1\u5e02\u6280\u8853\u5206\u6790, \u4ee5\u8cc7\u6599\u56de\u6e2c\u53d6\u5f97\u512a\u826f\u7b56\u7565\r\n\r\n\u4f46\u9019\u90fd\u662f\u4ee5\u904e\u53bb\u8cc7\u6599\u4f86\u63a8\u4f30\u672a\u4f86, \u5fc5\u9700\u8981\u6642\u5e38\u8b8a\u52d5\u7b56\u7565\u4ee5\u53d6\u5f97\u66f4\u597d\u7684\u7e3e\u6548\r\n\r\n\u65b0\u7684\u60f3\u6cd5\u662f\u5f9e\u5927\u81ea\u7136\u7684\u5b9a\u5f8b\u63a8\u6572\u51fa\u53ef\u80fd\u7684\u898f\u5f8b\r\n\r\n\u53ef\u76f4\u63a5\u63a8\u6f14\u672a\u4f86\u8d70\u52e2, \u6700\u7d42\u5c07\u4e0d\u7528\u56de\u6e2c\u8cc7\u6599, \u76f4\u63a5\u9810\u6e2c\u4e0b\u500b\u6708\u751a\u81f3\u4e0b\u5e74\u8d70\u5411\r\n\r\n\u4e26\u53ef\u4ee5\u904b\u7528pycuda\u7b49\u5206\u6563\u5f0f\u904b\u7b97\u52a0\u5feb\u63a8\u6f14\u901f\u5ea6, \u7bc0\u7701\u5927\u91cf\u6642\u9593", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "iampf510@gmail.com", "speech_type": "Regular Talk", "tags": "Python, Future, Distributed, Fuzz", "abstract": "\u904b\u7528\u5206\u6563\u5f0f\u904b\u7b97\u628a\u5f9e\u65e5\u5e38\u751f\u6d3b\u770b\u5230\u7684\u898f\u5f8b\u7d50\u5408\u5df2\u77e5\u8cc7\u8a0a\u63a8\u4f30\u672a\u4f86\u80a1\u5e02\u8d70\u5411\r\n\r\n", "additional_info": "", "reviews": [{"comment": "Too lack of detail, especially the explanation of\u300c\u5927\u81ea\u7136\u7684\u5b9a\u5f8b\u300d. An algorithm without training, that is, without even looking at data, is generally perceived as random guess from certain probabilistic distribution. In this case a reference of technical paper should be provided so we can know how magical this new idea can be.", "reviewer": "liang2", "rank": 1}, {"comment": "\u5f88\u96e3\u5f9e\u8b1b\u8005\u6240\u63d0\u4f9b\u7684\u8cc7\u8a0a\u5224\u65b7\u662f\u5426\u9069\u5408\uff0c\u7121\u6cd5\u7d66\u4e88\u9ad8\u5206\u3002\r\n", "reviewer": "sosorry", "rank": 2}, {"comment": "Can't imagine how good this talk would be by this poorly organized statements.", "reviewer": "drakeguan", "rank": 1}], "id": 19, "duration": "40 mins", "title": "Predict Future", "decision": "Rejected", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "Outline:\r\n\r\n* Introduction to our Scenario\r\n** Task Set: Bit-encoded Stream Transaction\r\n\r\n* Rapid Prototype Assembly in Python\r\n** Assembly Design Pattern\r\n** Mapping Assembly Design Pattern in Python\r\n\r\n* Converting Python to Assembly in a Week?\r\n** Happy \"Typing\" Assembly\r\n** Is Rapid Prototype Wasted?\r\n\r\n* Concluding Remarks\r\n\r\n* Resource\r\n", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "alberthuang314@gmail.com", "speech_type": "Regular Talk", "tags": "embedded", "abstract": "Bit-encoded parser in communication system is not easy to program, and usually written in C. Sometimes for lack of toolchain or reduction of memory footprint, programmers might still need to write it in assembly, and it's definitely not a happy task. The author tries to share his  happy experience on rapid prototyping this kind of parser in Python, and later coded them in assembly running in an embedded processor. ", "additional_info": "", "reviews": [{"comment": "Good topic. I wish I could see more embedded system application with Python.", "reviewer": "sosorry", "rank": 4}, {"comment": "Interesting\uff01", "reviewer": "c3h3", "rank": 4}, {"comment": "Appealing", "reviewer": "yudalin", "rank": 4}], "id": 32, "duration": "40 mins", "title": "Happy rapid prototyping embedded assembly by Python: My Experience", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "A Benchmark report of storage devices or systems is a important thing. Because that may be a key reference for potential customers will ask for before they want to purchase. For a single device is putty easy to do a benchmark. You don't need to consider other impact factors like network bandwidth and cpu. \r\n\r\nThis session will show you what we did and got. ", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "charles0126@gmail.com", "speech_type": "Regular Talk", "tags": "ansible, automation, openstack, swift, cloud, object storage", "abstract": "Using Ansible for OpenStack Swift benchmark\r\n\r\nOutline is here, may be modified in a future.\r\n\r\n* Introduct Openstack Swift\r\n  * What's that?\r\n  * Single Node Swift (SAIO Swift) (http://docs.openstack.org/developer/swift/development_saio.html)\r\n  * Swift Cluster \r\n* Introduce Ansible \r\n  * Why\r\n  * Other tools (Fabric/Slatstack/Chef)\r\n* What's problems and pains\r\n  * Configure multiple swift nodes (swift proxy/object/container servers) without extra packages \r\n  * Deploy/manage multiple benchmark nodes\r\n  * Sweep all data in Swift nodes (Dev Cluster) \r\n  * Run a benchmark test\r\n  * Collecting benchmark result from benchmark nodes and errors from swift nodes\r\n  * Repeat it again, again and again\r\n* Use Ansible\r\n  * Define a cluster and nodes\r\n  * Deploy benchmark nodes\r\n  * Collecting and aggregate result form benchmark node\r\n  * Repeat\r\n* What's next? \r\n  * Move it to Docker?\r\n\r\n", "additional_info": "* https://swiftstack.com/blog/2013/04/18/openstack-summit-benchmarking-swift/\r\n* http://slides.com/charz/pycon2015_purposal (in progress)", "reviews": [{"comment": "Ansible for the first time", "reviewer": "marr", "rank": 4}, {"comment": "Interesting, first time to know Ansible. ", "reviewer": "AlfredW", "rank": 4}, {"comment": "There just should be at least one Ansible talk. Very exciting.", "reviewer": "keitheis", "rank": 5}, {"comment": "I'm looking forward to ansible related talk.", "reviewer": "stanley", "rank": 5}], "id": 12, "duration": "40 mins", "title": "Openstack Swift Benchmark with Ansible", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "* Existed GUI solutions\r\n    - Tkinter.\r\n    - Platform-dependent: Win32 API, Cocoa (via PyObjC), gi (on Ubuntu), etc.\r\n    - Special interpreter implementations: IronPython, Jython.\r\n    - Binding to third-party (fourth-party?) libraries: PyQt and PySide, PyGTK+, etc.\r\n    - Do-it-ourselves: PyGame, Kivy.\r\n* What should it be like:\r\n    - Cross-platform.\r\n    - Write once, install everywhere.\r\n    - Native look-and-feel.\r\n    - Pythonic (sytax-wise and conceptual-wise).\r\n    - \u201cJust works\u201d (no extra libraries and bindings to another language).\r\n* Mayne on the right tracks\r\n    - Pyglet\r\n        - pip-installable (no extra dependencies, no C extensions)\r\n        - Works with Windows, OS X and normal Linux distributions.\r\n        - OpenGL-based.\r\n    - Toga\r\n        - Same API, platform-dependent implementations.\r\n        - pip-installable (uses ctypes)\r\n        - Native UX (because the implementation is native)\r\n* A side issue: Python on mobile\r\n    - Hmm.\r\n    - Mobile platforms need dedicated UIs.\r\n    - Toga has primitive progress.\r\n* Looking forward: What can we do? (Well, you can always contribute.)", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "uranusjr@gmail.com", "speech_type": "Regular Talk", "tags": "gui, desktop, mobile", "abstract": "Python is a great programming language suitable for a wide variety of purposes. Among all these exciting things, however, there is one area with which Python is not great: GUI applications. In this talk, we will first take a look at existed solutions for GUI programming in Python, comparing their characteristics and features. We will then discuss how GUI programming with Python should be done in an ideal world, and what can be done (or is being done) to take us one step closer to our ideal.", "additional_info": "Pyglet: http://www.pyglet.org\r\nToga: http://pybee.org/toga/", "reviews": [{"comment": "- A future topic can fit our theme. \r\n- Now, only few people talk about GUI framework and its future, but it's useful for those who like to write tools or who just starts learning python.", "reviewer": "AlfredW", "rank": 4}, {"comment": "I like the future.", "reviewer": "keitheis", "rank": 5}, {"comment": "Although the current trend of IT is all about Web, the GUI is still the dominating the desktop devices worldwide. As one of the most popular programming languages in the world, Python should provide a solution like others.", "reviewer": "yudalin", "rank": 3}, {"comment": "I think the GUI is always a very interesting topic. It's also a nice issue which role does GUI  play when the mobile become more and more popular. Look forward to your sharing.", "reviewer": "Yen", "rank": 4}], "id": 18, "duration": "40 mins", "title": "The Future of GUI Programming with Python", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "This talk covers how object detection techniques are applied to discover face-like structures and pseudo-artificial structures from high resolution satellite images of Mars and other planets with python scientific tools.\r\n\r\n1. Face-like structure detection with haar-like feature based method\r\nIn order to detect face-like structures, conventional haar-like feature based detection techniques are applied. We make use of OpenCV-Python bindings with multiple pre-trained cascades, which include frontal face cascades and an anime face cascade.\r\n\r\n2. Pseudo-artificial structure detection with deep learning\r\nDeep learning has become increasingly popular due to its success in the field of visual recognition. We make use of deep convolutional neural networks with a framework called Caffe (http://caffe.berkeleyvision.org/) to detect Pseudo-artificial structures.\r\n\r\n3. About Us\r\nMarsface Project was started as a part of the International Space Apps Challenge organized by NASA (https://2015.spaceappschallenge.org/). In 2014, we were selected as a winner of Microsoft Azure for Research Award program (http://research.microsoft.com/en-us/projects/azure/) and have been offered a large amount of computing power to perform the detection tasks on the cloud platform.", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "atelierhide@yahoo.co.jp", "speech_type": "SciPy Talk (English Only)", "tags": "Object Detection, Machine Learning, Deep Learning", "abstract": "The discovery of \"Face on Mars\" by NASA in 1976 has attracted widespread popular and scientific interest over the past few decades. In this project, we apply various object detection techniques, such as conventional haar-like feature based methods and state-of-the-art deep learning methods, in order to detect such pseudo-artificial structures on Mars and other planets. The scientific Python ecosystem plays a crucial role in the exploration.", "additional_info": "Project Website: http://marproject.org/index2.html\r\n\r\nProject Video: https://youtu.be/rwoW6U7GiYY\r\n\r\nFace on Moon South Pole on Wikipedia: http://en.wikipedia.org/wiki/Face_on_Moon_South_Pole\r\n\r\nPaper: https://ipsj.ixsq.nii.ac.jp/ej/index.php?active_action=repository_view_main_item_detail&page_id=13&block_id=8&item_id=102962&item_no=1\r\n\r\nTwitter: @marsfaceproject", "reviews": [{"comment": "Interesting \"entertainment computing\" project. (as declared in the japanese article) I'm interested in knowing how to define a face or an artificial object. Also what are the training samples.", "reviewer": "yuanchao", "rank": 4}, {"comment": "Python has been a popular tool for driving image recognition applications.  I would be curious how the project utilizes the Azure computing power.", "reviewer": "yungyuc", "rank": 4}, {"comment": "Fits as a SciPy talk. Solving fun topic with large scale computing platform. Relevance to Python seems to be limited to use of OpenCV bindings. ", "reviewer": "whosaysni", "rank": 4}], "id": 71, "duration": "40 mins", "title": "Marsface Project: Detecting Pseudo-artificial Structures on Mars", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "1) Keep it simple \r\nA Environment of development becomes increasingly popular with docker. We already know a lot projects of container like docker, vagrant and SaaS or PaaS Services like Google AppEngine, AWS cloud, and Heroku.\r\n\"Keep it simple by REST API on Backend Service\", How could we do this?\r\nWe would like to know what a environment of development use and what a SaaS Serivce use.\r\nAre you wish to set up for these platform?\r\n\r\nThis session will be shown if you use a Mac OS X and compare pros and cons in detail.\r\nIt will explained why the docker are useful for this. furthermore, we already know the docker-py project.\r\nHow it different docker-py and boot2docker, VMwareManager tools. We will describe the differences between.\r\n\r\n2) Web Development Stack :\r\nIt will be shown a Sample Project with Django and Docker and describe the Architecture of sample project.\r\nFor Froentend, We use a AngularJS, and use a Django and MongoDB for Backend. \r\nThis demo has a simple Shopping site. ", "talk_perm": "Don't record my talk", "language": "English", "author": "byungwook.ahn@gmail.com", "speech_type": "Regular Talk", "tags": "Docker Python Django AngularJS", "abstract": "An Environment of development becomes increasingly popular with docker. We already know a lot projects of container like docker, vagrant and SaaS or PaaS Services like Google AppEngine, AWS cloud, and Heroku.\r\nIt will be shown a Sample Project using Django and Docker, and environment of Development for this. We will explain the Architecture of sample project. At the end, it will be proved to be a fast and easy solution to set up our development environment.", "additional_info": "https://www.docker.com/\r\nhttps://github.com/docker/docker-py\r\nhttps://pypi.python.org/pypi/docker-py\r\n", "reviews": [{"comment": "Not sure about the mixed topics will work.", "reviewer": "keitheis", "rank": 1}, {"comment": "This topic should be presented in meetup, because it needs more time to explain the detail. ", "reviewer": "sosorry", "rank": 2}, {"comment": "- I didn't find any special.", "reviewer": "AlfredW", "rank": 2}], "id": 35, "duration": "40 mins", "title": "Keep it Simple, Web Development Stack ", "decision": "Rejected", "slide_perm": "Don't publish my slide", "audience_level": "Introduction"}, {"description": "\u672c\u6b21\u8ddf\u5927\u5bb6\u5206\u4eab\u4e00\u4e0b\u904b\u7528Google Cloud\u4e0a\u6211\u5011\u6240\u5efa\u7f6e\u7684\u4e00\u5957\u958b\u767c\u6d41\u7a0b\uff0c\u5e0c\u671b\u900f\u904e\u9019\u500b\u6d41\u7a0b\u5927\u91cf\u964d\u4f4e\u958b\u767c\u4e0a\u91cd\u65b0\u90e8\u7f72\u8207\u7dad\u904b\u7684\u4e00\u4e9b\u91cd\u8907\u6027\u9ad8\u7684\u52d5\u4f5c\uff0c\u52a0\u901f\u6574\u9ad4\u5728\u958b\u767c\u4e0a\u7684\u901f\u5ea6\u3002", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "cage@mitac.com.tw", "speech_type": "Regular Talk", "tags": "GCP, GAE, Python", "abstract": "AppEngine\uff0cGoogler\u7684\u958b\u767c\u6a21\u5f0f\uff1bContainer\uff0cGoogler\u6240\u6709\u904b\u884c\u7684\u74b0\u5883\uff0cGoogler\u5927\u91cf\u904b\u7528Container\u5e36\u4f86\u8a31\u591a\u67b6\u69cb\u90e8\u7f72\u7684\u65b9\u4fbf\u6027\u3002", "additional_info": "- https://cloud.google.com/appengine/docs/managed-vms/ (Managed VMs - Google App Engine \u2014 Google Cloud Platform)\r\n- https://www.youtube.com/watch?v=VyuRMkHwRTo (DevFest GDG Paris - Boost your App Engine app using Managed VMs technology - YouTube)\r\n- https://www.youtube.com/watch?v=_IeIrQFIyyU (Google Cloud Platform Live: Managed VMs Demo - YouTube)", "reviews": [{"comment": "Not sure about the specificity insight of GCP and GAE due to short description.", "reviewer": "keitheis", "rank": 2}, {"comment": "Description is too short. I'm not sure what will be covered in this talk\r\n.", "reviewer": "andy", "rank": 1}, {"comment": "Didn`t see any about Python", "reviewer": "apua", "rank": 0}], "id": 40, "duration": "40 mins", "title": "Google Managed VMs - DevOps\u5982\u4f55\u5728\u64cd\u63a7\u6027\u8207\u4fbf\u5229\u6027\u4e4b\u9593\u53d6\u5f97\u5f7c\u6b64\u7684\u512a\u52e2", "decision": "Rejected", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "Outline (draft)\r\n\r\n- What is GIL[1]?\r\n  - Why GIL?\r\n    - Giant Lock[2]\r\n    - Other implementations: fine-grained lock[3], lock-free[4]\r\n  - What are GIL protected for?\r\n    - Interpreter state, python thread state, reference count, ...\r\n- What is the problem with GIL under MP architecture?[1]\r\n  - Some people are working on how to remove the lock.  Very difficult task.[5][6][7]\r\n=> We need to learn how to live along with GIL.\r\n\r\n- Brainless Solution: multi-process\r\n  - Use money to let you shut up.\r\n  - Example: multiprocessing[8], pp[9], pyCSP[10] (distributed computing)\r\n\r\n- Use Python/C extension to \"leave\" interpreter\r\n  - Especially suitable on CPU-bound tasks.\r\n  - Example: Cython[11], pyrex[12]\r\n\r\n- Coroutine (cooperative computing)\r\n  - Only applicable on IO-bound tasks.\r\n  - Example: pyev[13], greenlet, gevent[14]\r\n\r\n- An interpreter per thread\r\n  - Put interpreter context into Thread Local Storage?\r\n  - Sub-interpreter", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "penvirus@gmail.com", "speech_type": "Regular Talk", "tags": "multi-threading, performance, parallel computing", "abstract": "In order to achieve high throughput, we usually execute independent tasks simultaneously in a process through leveraging multi-threaded technology.  The tasks are truly parallel because multi-processor and hyper-threading technologies are quite mature in modern x86 CPU.  While thing happens within CPython, the behavior will not be what we think.  The talk addresses on CPython limitation of parallelism and enumerates some common practices to evade the seal.", "additional_info": "[1]: https://wiki.python.org/moin/GlobalInterpreterLock\r\n[2]: http://en.wikipedia.org/wiki/Giant_lock\r\n[3]: http://en.wikipedia.org/wiki/Fine-grained_locking\r\n[4]: http://en.wikipedia.org/wiki/Non-blocking_algorithm\r\n[5]: https://docs.python.org/2/faq/library.html#can-t-we-get-rid-of-the-global-interpreter-lock\r\n[6]: http://www.artima.com/weblogs/viewpost.jsp?thread=214235\r\n[7]: http://dabeaz.blogspot.tw/2011/08/inside-look-at-gil-removal-patch-of.html\r\n[8]: https://docs.python.org/2/library/multiprocessing.html\r\n[9]: http://www.parallelpython.com/\r\n[10]: https://code.google.com/p/pycsp/\r\n[11]: http://cython.org/\r\n[12]: http://www.cosc.canterbury.ac.nz/greg.ewing/python/Pyrex/\r\n[13]: https://code.google.com/p/pyev/\r\n[14]: http://www.gevent.org/", "reviews": [{"comment": "* It's an introduction-level talk? can't believe it.\r\n* Well-prepared agenda and references. It saves us time to study those essays.", "reviewer": "drakeguan", "rank": 5}, {"comment": "Great context, but hard for the python beginners.", "reviewer": "yudalin", "rank": 4}, {"comment": "It's a great topic and hard to believe just an introduction level.", "reviewer": "stanley", "rank": 5}], "id": 41, "duration": "40 mins", "title": "Global Interpreter Lock: Episode I - Break the Seal", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "ceph \u63d0\u4f9b\u4e00\u500b\u514d\u8cbb\u81ea\u7531\uff0cexabyte\uff0cscalable,  fault tolerant \u7684\u5132\u5b58\u7cfb\u7d71\uff0c\u63d0\u4f9b\u7269\u4ef6\uff0c\u6a94\u6848\uff0c\u5340\u584a\u5132\u5b58\u529f\u80fd\u3002ceph \u4e5f\u662f openstack \u71b1\u9580\u7684\u5132\u5b58\u9078\u9805\u4e4b\u4e00\u3002\u9019\u6b21\u6f14\u8b1b\uff0c\u6703\u4ecb\u7d39 ceph \uff0ccrush \u6f14\u7b97\u6cd5\u4ecb\u7d39\uff0cceph \u904b\u4f5c\u65b9\u5f0f\uff0c\u4ee5\u53ca\u5982\u4f55\u7528\u900f\u904e python \u4f7f\u7528 ceph \u8207 openstack \u5982\u4f55\u61c9\u7528 ceph\u3002", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "kjellytw@gmail.com", "speech_type": "Regular Talk", "tags": "storage", "abstract": "# storage system \u7c21\u4ecb\r\n# \u7c21\u4ecb ceph\r\n# ceph \u904b\u4f5c\u65b9\u5f0f\r\n# rados \u4ecb\u7d39\r\n# rbd \u4ecb\u7d39\r\n# \u5feb\u901f\u4f48\u7f72\u55ae\u6a5f\u7248 ceph\r\n# \u5982\u4f55\u5229\u7528 python \u9023\u63a5 ceph", "additional_info": "", "reviews": [{"comment": "Ceph is also used by Firefox to collect crash reports. I'm very looking forward for this interesting issue.", "reviewer": "keitheis", "rank": 4}, {"comment": "The package should be interesting but the abstract and description is a little bit weak. I cannot guarantee the quality of this proposal from them. Let's cross our fingers.", "reviewer": "drakeguan", "rank": 3}, {"comment": "Look interesting.", "reviewer": "liang2", "rank": 4}, {"comment": "We should have some topics related to OpenStack :)\r\nIt is one of our silver sponsor", "reviewer": "lucemia", "rank": 5}], "id": 37, "duration": "40 mins", "title": "ceph \u4ecb\u7d39", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "fuse \u8b93\u4f60\u53ef\u4ee5\u5728 userspace \u4e0b\u5beb\u4e00\u500b linux \u6a94\u6848\u7cfb\u7d71\u3002\u900f\u904e llfuse \u7684 python library\uff0c\u4f60\u53ef\u4ee5\u7528 python \u505a\u4e00\u500b\u5b8c\u6574\u7684 linux \u6a94\u6848\u7cfb\u7d71\u3002\u6700\u5f8c\u6703\u4ecb\u7d39 fuse \u7684\u61c9\u7528\u6848\u4f8b\u3002", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "kjellytw@gmail.com", "speech_type": "Regular Talk", "tags": "filesystm", "abstract": "1. fuse \u4ecb\u7d39\r\n2. \u793a\u7bc4\u5982\u4f55\u7528 python + llfuse \u5beb\u4e00\u500b\u6a94\u6848\u7cfb\u7d71\r\n3. fuse \u7684\u61c9\u7528\r\n", "additional_info": "", "reviews": [{"comment": "\u7528 Python \u53cafuse \u5beb\u6a94\u6848\u7cfb\u7d71\u5f88\u76f4\u63a5\u7c21\u55ae\u3002\r\n\u7531\u65bc Abstract \u548c Description \u592a\u904e\u7c21\u7565\uff0c\u4e0d\u6e05\u695a\u61c9\u7528\u662f\u5426\u6709\u8da3\u4ee5\u53ca\u662f\u5426\u6703\u66f4\u6df1\u5165\u63a2\u8a0e\u3002", "reviewer": "tjw", "rank": 3}, {"comment": "- \u611f\u89ba\u662f\u7c21\u55ae\u7684\u4ecb\u7d39", "reviewer": "AlfredW", "rank": 2}, {"comment": "I think there is a talk about FUSE in PyCon is good, but it seems there will only demo and a few application and not talk about what is FUSE, why using FUSE, how it bring benefit", "reviewer": "apua", "rank": 2}], "id": 38, "duration": "40 mins", "title": "\u81ea\u5df1\u7684\u7684\u6a94\u6848\u7cfb\u7d71\u81ea\u5df1\u5beb - fuse \u4ecb\u7d39", "decision": "Rejected", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "\u5167\u5bb9\u9664\u4e86\u5217\u51fa\u7528 IPython Notebook \u53d6\u4ee3 Slides \u7684\u512a\u7f3a\u9ede\u5916\uff0c\u5c07\u6703\u5305\u542b\u5c55\u793a\u5be6\u969b\u5229\u7528 IPython \u4f86\u6f14\u8b1b\u53ca\u6559\u5b78\u7684\u7d93\u9a57\uff0c\u9084\u6709\u500b\u7a2e\u53ef\u80fd\u7684\u5c55\u73fe\u65b9\u5f0f\u793a\u7bc4\u3002", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "tzerjen@gmail.com", "speech_type": "Regular Talk", "tags": "IPython notebook, presentation, education", "abstract": "\u4ecb\u7d39\u5229\u7528 IPython notebook \u4f86\u8b93\u7c21\u5831\u66f4\u52a0\u6709\u4e92\u52d5\u6027\u7684\u7d93\u9a57\u3002\u8b93 Demo \u8207\u526a\u5831\u6d41\u7a0b\u5408\u800c\u70ba\u4e00\uff0c\u5229\u7528 IPython notebook \u7684\u4e92\u52d5\u7279\u6027\uff0c\u5373\u6642\u7684\u8b93\u5167\u5bb9\u5448\u73fe\uff0c\u6bcf\u4e00\u6b21\u90fd\u80fd\u5448\u73fe\u6700\u65b0\u7684\u8cc7\u8a0a\u3002\r\n\u7528 Python code \u53d6\u4ee3 Pseudo Code\r\n\u5c07\u5be6\u969b\u7684\u57f7\u884c\u7d50\u679c\u8996\u89ba\u5316\u9010\u6b65\u5448\u73fe\uff0c\u800c\u4e0d\u662f\u4e8b\u5148\u5f04\u597d\u756b\u597d\u7684\u6a21\u64ec\u7d50\u679c\u3002", "additional_info": "", "reviews": [{"comment": "Should be fun and informative by my experience on Wei's talks. Also, IPython is 3.0 now.", "reviewer": "keitheis", "rank": 4}, {"comment": "a very practical experience sharing for IPython heavy user, like me. ", "reviewer": "jin", "rank": 5}, {"comment": "Impressive and Useful! Interactive reading experience.", "reviewer": "yudalin", "rank": 4}, {"comment": "iPython is a power tool and worth to promote it.", "reviewer": "stanley", "rank": 5}], "id": 42, "duration": "40 mins", "title": "\u5229\u7528 IPython Notebook \u4f86\u4e92\u52d5\u7c21\u5831\u8207\u6559\u5b78", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "The Mega Python Tutorial", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "uranusjr@gmail.com", "speech_type": "Tutorial", "tags": "python", "abstract": "The Mega Python Tutorial", "additional_info": "http://www.codecademy.com/en/tracks/python\r\nhttps://speakerdeck.com/mosky/programming-with-python-basic\r\nhttp://tutorial.djangogirls.org/en/python_introduction/README.html", "reviews": [{"comment": "\u63cf\u5beb\u592a\u904e\u7c21\u7565\uff0c\u4e0d\u904e\u76f8\u4fe1\u8b1b\u8005\u80fd\u8655\u7406\u597d\u9019\u500b tutorial\u3002Recording Perm \u70ba CC-BY-NC-SA \u52a0\u5206\u3002", "reviewer": "tjw", "rank": 4}, {"comment": "\u5148\u9644\u4e0a\u5f8c\u4f86\u6574\u7406\u51fa\u4f86\u7684\u65b0\u7a3f\u5b50:\r\n\r\n## \u8ab2\u7a0b\u7c21\u4ecb\r\n\r\n\u4e0d\u8ad6\u4f60\u662f\u5426\u5df2\u7d93\u6703\u5beb\u7a0b\u5f0f\uff0cPython \u90fd\u662f\u8b93\u4f60\u63d0\u9ad8\u81ea\u8eab\u80fd\u529b\u7684\u7d55\u4f73\u5de5\u5177\uff01\r\n\r\n\u7531\u65bc Python \u5728\u8a2d\u8a08\u521d\u671f\uff0c\u4fbf\u91dd\u5c0d\u975e\u5c08\u696d\u7a0b\u5f0f\u8a2d\u8a08\u5e2b\u7684\u5b78\u7fd2\u800c\u898f\u5283\u8a9e\u6cd5\uff0c\u56e0\u6b64\u5341\u5206\u6ce8\u91cd\u7a0b\u5f0f\u78bc\u672c\u8eab\u6613\u5b78\u3001\u6613\u8b80\u3001\u6e05\u6670\u7b49\u7279\u6027\u3002\u9019\u4e5f\u4f7f\u5f97 Python \u5728\u8fd1\u5e74\u4f86\uff0c\u9010\u6f38\u88ab\u5ee3\u6cdb\u4f5c\u70ba\u300c\u7b2c\u4e00\u500b\u7a0b\u5f0f\u8a9e\u8a00\u300d\u6559\u6388\uff0c\u8b93\u7b2c\u4e00\u6b21\u63a5\u89f8\u7a0b\u5f0f\u7684\u4eba\uff0c\u53ef\u4ee5\u907f\u514d\u88ab\u592a\u591a\u8a9e\u6cd5\u898f\u5247\u5206\u5fc3\uff0c\u5c08\u6ce8\u65bc\u7a0b\u5f0f\u7684\u6982\u5ff5\u672c\u8eab\u3002\r\n\r\n\u5c0d\u65bc\u5df2\u6709\u7a0b\u5f0f\u8a2d\u8a08\u7d93\u9a57\u7684\u4eba\u800c\u8a00\uff0cPython \u4e5f\u53ef\u4ee5\u662f\u4e00\u500b\u5f37\u5927\u7684\u52a9\u529b\u3002Python \u5728\u57fa\u672c\u8a9e\u6cd5\u4e4b\u4e0a\uff0c\u898f\u5283\u4e86\u975e\u5e38\u8c50\u5bcc\u7684\u6a19\u6e96\u51fd\u5f0f\u5eab\uff0c\u4e14\u7d93\u904e\u591a\u5e74\u7684\u958b\u767c\u8207\u4fee\u6b63\uff0c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u9054\u6210\u3001\u7c21\u5316\u8a31\u591a\u4efb\u52d9\u3002\u9019\u7a2e\u300cbatteries included\u300d\u7684\u7279\u6027\uff0c\u8b93\u7a0b\u5f0f\u8a2d\u8a08\u5e2b\u53ea\u9700\u8981\u64c1\u6709 Python\uff0c\u5c31\u53ef\u4ee5\u8fc5\u901f\u3001\u7c21\u55ae\u7684\u5b8c\u6210\u5404\u7a2e\u65e5\u5e38\u5de5\u4f5c\uff0c\u800c\u4e0d\u9700\u6295\u5165\u904e\u591a\u7cbe\u529b\u64b0\u5beb\u3001\u7ba1\u7406\u5be6\u4f5c\u57fa\u790e\u529f\u80fd\u6240\u9700\u7684\u7a0b\u5f0f\u78bc\u3002\u800c\u5c0d\u65bc\u7a0d\u5fae\u5c08\u9580\u7684\u61c9\u7528\uff0cPython \u4e5f\u63d0\u4f9b\u4e86\u7ba1\u7406\u7b2c\u4e09\u65b9\u5957\u4ef6\u7684\u6a5f\u5236\u300cpip\u300d\uff0c\u8b93\u4f7f\u7528\u8005\u80fd\u5920\u8f15\u9b06\u53d6\u5f97\u8d85\u904e\u4e94\u842c\u500b\u51fd\u5f0f\u5eab\uff0c\u8db3\u4ee5\u61c9\u4ed8\u7d55\u5927\u591a\u6578\u7684\u7a0b\u5f0f\u8a2d\u8a08\u9700\u6c42\u3002\r\n\r\n\u4f46 Python \u4e5f\u4e0d\u53ea\u662f\u4e00\u500b\u7528\u4f86\u64b0\u5beb\u5c0f\u5de5\u5177\u7684\u7c21\u55ae\u8a9e\u8a00\u3002\u8a31\u591a\u5927\u3001\u4e2d\u578b\u5c08\u6848\u4e2d\uff0c\u90fd\u5341\u5206\u5927\u91cf\u7684\u4f7f\u7528 Python\uff0c\u5c24\u5176\u5728\u7db2\u9801\u4f3a\u670d\u5668\u7aef\u958b\u767c\u4e0a\uff0c\u96a8\u8457 WSGI \u4ecb\u9762\u88ab\u5ee3\u6cdb\u61c9\u7528\uff0c\u8d8a\u4f86\u8d8a\u591a\u7db2\u7ad9\u958b\u59cb\u9078\u64c7\u4ee5 Python \u5efa\u69cb\u3002\u5728 Python \u4e0d\u8db3\u4ee5\u55ae\u7368\u61c9\u4ed8\u9700\u6c42\u7684\u60c5\u6cc1\u4e0b\uff0cPython \u4e5f\u63d0\u4f9b\u4e86\u8207 C\u3001C++\u3001\u751a\u81f3 C# \u6216\u8005 Java \u7a0b\u5f0f\u6e9d\u901a\u7684\u4ecb\u9762\u3002\r\n\r\n## \u9069\u5408\u5c0d\u8c61\r\n\r\n\u9019\u500b\u8ab2\u7a0b\u6700\u9069\u5408\u5df2\u7d93\u6709\u4e00\u9ede\u9ede\u7a0b\u5f0f\u7d93\u9a57\u7684\u4eba\uff1b\u6211\u5011\u6703\u5728\u9019\u500b\u8ab2\u7a0b\u4e2d\uff0c\u9010\u6b65\u4e86\u89e3 Python \u7684\u5404\u7a2e\u7279\u6027\uff0c\u8b93\u4f60\u5b8c\u6574\u767c\u63ee Python \u7684\u529f\u80fd\uff0c\u5b8c\u6210\u7a0b\u5f0f\u8a2d\u8a08\u6642\u6703\u9047\u5230\u7684\u554f\u984c\u3002\u4f46\u5373\u4f7f\u4f60\u6c92\u6709\u592a\u591a\u7a0b\u5f0f\u7d93\u9a57\uff0c\u4e5f\u80fd\u5920\u5728\u9019\u500b\u8ab2\u7a0b\u4e2d\u5b78\u5230\u57fa\u672c\u7684 Python \u6280\u80fd\uff0c\u662f\u5165\u9580\u7a0b\u5f0f\u8a2d\u8a08\u7684\u597d\u65b9\u6cd5\u3002\r\n\r\n## \u8ab2\u7a0b\u5927\u7db1\r\n\r\n* Python \u76f4\u8b6f\u5668\u57fa\u790e\r\n* \u57fa\u672c\u578b\u5225\u3001\u7269\u4ef6\u3001\u8b8a\u6578\r\n* \u51fd\u5f0f\r\n* \u4f8b\u5916\u8655\u7406\r\n* Python \u7a0b\u5f0f\u98a8\u683c\u6307\u5357\uff1aPEP 8\r\n* \u5167\u5efa\u51fd\u5f0f\u8207\u51fd\u5f0f\u5eab\r\n* \u5982\u4f55\u4f7f\u7528\u7b2c\u4e09\u65b9\u51fd\u5f0f\u5eab\r\n\r\n## \u6ce8\u610f\u4e8b\u9805\r\n\r\n\u70ba\u4e86\u8ab2\u7a0b\u9806\u66a2\uff0c\u6559\u5b78\u7576\u5929\u5c07\u6703\u5047\u8a2d\u4f60\u5df2\u7d93\u5c07 Python \u5b89\u88dd\u5b8c\u6210\u3002\u82e5\u4f60\u64c1\u6709\u81ea\u5df1\u7684\u7b46\u8a18\u578b\u96fb\u8166\uff0c\u6211\u5011\u5f37\u70c8\u5efa\u8b70\u53ef\u4ee5\u5148\u5728\u4e0a\u9762\u5b89\u88dd Python 3.4.3\uff0c\u4e26\u5728\u6559\u5b78\u7576\u5929\u651c\u5e36\u81f3\u8ab2\u5802\u4e0a\u4f7f\u7528\u3002\u9019\u6a23\u53ef\u4ee5\u4fdd\u8b49\u4f60\u672a\u4f86\u80fd\u5920\u5728\u81ea\u5df1\u7684\u96fb\u8166\u4e0a\uff0c\u7e7c\u7e8c\u4f7f\u7528\u76f8\u540c\u7684\u74b0\u5883\uff0c\u6216\u8005\u4e5f\u53ef\u4ee5\u7d93\u7531\u9019\u6b21\u7d93\u9a57\uff0c\u4e86\u89e3\u672a\u4f86\u5982\u4f55\u5728\u5176\u4ed6\u96fb\u8166\u4e0a\u5efa\u69cb\u540c\u6a23\u7684\u74b0\u5883\u3002\r\n\r\n\u5982\u679c\u4f60\u6c92\u6709\u7b46\u8a18\u578b\u96fb\u8166\uff0c\u6559\u5b78\u7576\u5929\u5c07\u6703\u63d0\u4f9b\u5df2\u7d93\u5b89\u88dd Python \u7684\u684c\u4e0a\u578b\u96fb\u8166\u3002\u96d6\u7136\u5982\u6b64\uff0c\u6211\u5011\u540c\u6a23\u5e0c\u671b\u4f60\u540c\u6a23\u80fd\u5728\u81ea\u5df1\u7684\u96fb\u8166\u4e0a\u5148\u5b8c\u6210\u5b89\u88dd Python 3.4.3\u3002\u9019\u6a23\u5b50\uff0c\u5982\u679c\u5728\u5b89\u88dd\u6216\u8a2d\u5b9a\u4e0a\u9047\u5230\u554f\u984c\uff0c\u6211\u5011\u4e5f\u53ef\u4ee5\u5728\u8ab2\u7a0b\u7576\u5929\u5354\u52a9\u6392\u9664\uff0c\u8b93\u4f60\u80fd\u5920\u5728\u672a\u4f86\u4f7f\u7528\u3002\r\n\r\n\u6ce8\u610f\uff1a\u672c\u6559\u5b78\u5c07\u4f7f\u7528 Python 3 \u9032\u884c\u3002\u5373\u4f7f\u5df2\u7d93\u5b89\u88dd Python 2\uff0c\u4e5f\u8acb\u9ebb\u7169\u53e6\u5916\u6309\u7167\u6559\u5b78\u5b89\u88dd\u6b64\u7248\u672c\u3002\r\n\r\nPython 3.4.3 \u5b89\u88dd\u6559\u5b78\uff1ahttps://gist.github.com/uranusjr/6fa2770a8c8651192e93", "reviewer": "marr", "rank": 4}], "id": 43, "duration": "Whole Day", "title": "Python Tutorial", "decision": "Accepted", "slide_perm": "Don't publish my slide", "audience_level": "Introduction"}, {"description": ">Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.\r\n\r\n-- Brian W. Kernighan has written in his book \"The Elements of Programming Style\".\r\n\r\nAlmost everybody who has fought any strange and mysterious bug will agree with that. But what help us to overcome this challenge? These are our helpers - debugging tools, that are commonly known as debuggers. Everybody know about them and many use constantly. But how are they actually implemented?\r\n\r\nIn the talk we will look inside a Python debugger used by modern Python IDEs like PyCharm and Pydev and learn about it's internals.\r\n\r\nWe start by learning what means of code tracing are provided by Python standard library and will try to implement a simple command-line debugger from scratch.\r\n\r\nThen we proceed to a full fledged debugger and will think a bit about it's architecture and how it can be implemented.\r\n\r\nAfter that we will focus on some interesting features:\r\n\r\nDebugging of multiple processes We have seen how to debug multithreaded code. But what about multiple processes? How can we deal with that? We will learn that it is easy.\r\n\r\nDebugging of Python code is ok. But what if we work with Django or Jinja2 templates and want to debug them too? We will learn how can be debugger extended to allow doing that.\r\n\r\nAttaching to a process We can launch a process in debug mode. But what if we need to attach to already running process? That is also possible and we will see how.\r\n\r\nIn the end we will look where to find the sources of the real debuggers and how to contribute if we want to do that. \r\n\r\n\r\n\r\n\r\n", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "trofimov.dmitry@gmail.com", "speech_type": "Regular Talk", "tags": "Python, debugger, IDE, Django, developer tools", "abstract": "This talk will explain how to implement a debugger for Python. We'll start with simple command line debugger, then look how it is implemented in modern IDEs like PyCharm and Pydev. Then we go further in the details and uncover the tricks used to implement some interesting features like multiprocess debugging, debugging of Django and Jinja2 templates and attaching to a launched Python process. ", "additional_info": "This is the debugger project I will be talking about: https://github.com/fabioz/PyDev.Debugger\r\n\r\n", "reviews": [{"comment": "I generally like this topic, and description seems to be written thoroughly. ", "reviewer": "tjw", "rank": 4}, {"comment": "It's very exciting to hear the maintainer of PyDev and LiClipse to talk about debug.", "reviewer": "keitheis", "rank": 5}, {"comment": "As for me, debugging is as three times as hard as writing the code. So a professional way of debugging is really appealing.", "reviewer": "yudalin", "rank": 4}], "id": 39, "duration": "40 mins", "title": "Python Debugger Uncovered", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Extreme"}, {"description": "\u5f9e\u6700\u57fa\u790e\u7684\u4e00\u822c\u7db2\u9801\u6293\u53d6\u6280\u5de7\u5230Ajax\u9801\u9762\u7684\u6293\u53d6\u6280\u5de7", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "iampf510@gmail.com", "speech_type": "Lightning Talk", "tags": "Python, Crawler", "abstract": "\u8b1b\u4e00\u4e9b\u5e73\u5e38\u5728\u505a\u7db2\u9801\u722c\u87f2\u6642\u7684\u5c0f\u6280\u5de7", "additional_info": "", "reviews": [{"comment": "Seems to be ok as a lightning talk", "reviewer": "tjw", "rank": 4}], "id": 44, "duration": "40 mins", "title": "\u7db2\u9801\u722c\u87f2\u7531\u6dfa\u5165\u6dfa", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "This session would conver the following topics:\r\n1. The features of MySQL Fabric\r\n2. MySQL Fabric architecture\r\n3. The procedures using MySQL Fabric to support manage MySQL server farm\r\n4. How MySQL Fabric supports high availablity by auto confiure replication and auto failover\r\n5. How MySQL supports scalability by auto sharding data across multiple MySQL database\r\n6. The road map and next steps", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "tu.ivan@gmail.com", "speech_type": "Regular Talk", "tags": "MySQL Fabric ", "abstract": "MySQL Fabric is the latest GPL product that offered by MySQL develop team, it is a extensible framework developed by Python that manages farms of MySQL Servers. Two primary features have been implemented - High Availability (HA) and scaling out using data sharding. MySQL Fabric also provides server provisioning using cloud frameworks such as OpenStack. By join this session the audience would knows how to create highly scalable, highly available and resilient database service with MySQL Fabric", "additional_info": "\r\nhttp://voicefromoldsoul.blogspot.jp/2014/08/mysql-fabric.html\r\nhttp://voicefromoldsoul.blogspot.jp/2014/07/mysql-fabric.html", "reviews": [{"comment": "* I'm not MySQL expert such that I can't evaluate the value and future of MySQL Fabric.", "reviewer": "drakeguan", "rank": 3}, {"comment": "The interesting point to me is to see how Python is used in MySQL Fabric by its design and implement.", "reviewer": "keitheis", "rank": 3}, {"comment": "MySQL Fabric is for grouping database servers to be a server farm. It use the concept of \"data shading\" to replicate data to different server group to make sure the data has HA. Any programmer using MySQL to be their core database system is recommend to has the concept of MySQL Fabric.", "reviewer": "stanley", "rank": 3}, {"comment": "Looks like it will not talk about Python, but just written in Python.\r\nFurthermore, it doesn`t desire to describe the technique and how it works.", "reviewer": "apua", "rank": 1}], "id": 45, "duration": "40 mins", "title": "MySQL Fabric, next generation application transplant high scalable and fault tourant solution", "decision": "Rejected", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": " - Reasons and problems of using multiple IaaS providers\r\nSince country regulations play an important role in IaaS services, hosting worldwide cloud services inevitably result in running the service on different IaaS providers.\r\n\r\nHowever, running cloud services across IaaS providers would involve dealing with different IaaS structure, utilities and API. This could get things complicated and messy when the service scale grows large. Service operation team requires new generation automation tools to help service managements.\r\n\r\n - Why Ccloud\r\nA well-designed automation cloud service deployment tool not only increases the efficiency of deployments and maintenances, but also significantly reduces the chances of human error.\r\n\r\nTraditionally, server management relies on IT automation tools such as Ansible or Salt to help reduce performing routine jobs during server deployment. They work well when parallel run batches of commands on virtual machines from one IaaS provider. But the script complexity would dramatically increase when virtual machines from different IaaS providers joined.\r\n\r\nMoreover, different IaaS providers tend to build their unique management utilities. This introduces additional effort when operation team intends to monitor and maintain services. After surveyed different solutions, we decided to build our own utility, which provides a universal interface across different IaaS provider.\r\n\r\n - What Ccloud does\r\nThe Ccloud covers most of the frequently used functionally for maintaining cloud services, from cluster deployment to virtual machine status check and service update.\r\n\r\nTaking the advantage of \u2018glue language\u2019 property of Python, the Ccloud runs the utilities from different IaaS providers, and return a clean and universal user interface to the service management team. The users can easily define the clusters they need in a Json formatted configuration file. The Ccloud will then translate the commands from users to the specified IaaS provider utilities.\r\n\r\n - CLI (command line interface) vs SDK (software development kits)\r\nIaaS providers usually support both CLI and SDK for automation tools developments. After trying on both of them for a while, we consider using SDL would be a better choice. The advantage of using CLI is that it came with built-in basic input verification that would prevent some human errors. But these verifications came with the cost of longer execution time. Eventually, we decided to implement the input verification by our own to maximize the efficiency of the Ccloud.\r\n", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "sean_hsueh@htc.com", "speech_type": "Regular Talk", "tags": "IaaS, Cloud service, Deployment", "abstract": "With the scope of cloud services grow from local to worldwide, the need of hosting cloud services across IaaS providers emerged. This brings new challenges to cloud services monitor and managements. The Ccloud is our solution to provide a unified user interface for cloud service managements across IaaS providers. Moreover, the Ccloud serves as an automation service management utility that greatly improves the efficiency and minimizes the possible operation errors.", "additional_info": "OUTLINE\r\n1.\tIntro (8 min)\r\n    - Who we are\r\n    - Why run across IaaS providers\r\n2.\tWhy Ccloud (10 min)\r\n    - Importance of cloud service management automation tools\r\n    - Shortage of traditional cloud service management automation tools\r\n    - Purpose of Ccloud\r\n3.\tWhat Ccloud provides (15 min)\r\n    - The structure of Ccloud\r\n    - Define the cluster in the configuration files\r\n    - Functionalists provided by Ccloud\r\n4.\tUsing CLI or SDK? (5 min)\r\n5.\tQ&A (7 min)\r\n", "reviews": [{"comment": "Kind of sponsor demo talk. Maybe fine if it's a conference sponsor.", "reviewer": "keitheis", "rank": 1}, {"comment": "Seems like a talk for product demo.", "reviewer": "andy", "rank": 1}, {"comment": "cCloud is a product but a technique, and it looks like no technique about Python there.", "reviewer": "apua", "rank": 0}], "id": 46, "duration": "40 mins", "title": "Dealing with cloudy days: managing cloud services across IaaS providers in Python", "decision": "Rejected", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "Introduce pyirrlicht, the Python binding of the Irrlicht 3D rendering engine.", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "fieliapm@gmail.com", "speech_type": "Lightning Talk", "tags": "game, realtime_3d_rendering", "abstract": "Python becomes more stronger in many domains. However it lost some supporting in game development community. Boo will be removed from Unity. Most of active game frameworks, 3D rendering engines, and game development solutions is based on C++, don't offer Python binding. If we want to develop a modern game, what should we use?\r\nTo develop game in Python, we might hear Cocos2d already. But its 3D rendering is not highly customable even if it support 3D rendering in recent version. Fortunately, we can also use pyirrlicht, the Python binding of the famous Irrlicht rendering engine. If we want to make game we developed looks better, I think the elegant structure and rich feature of the Irrlicht framework will become solid stepstone for every Python game developer.", "additional_info": "http://irrlicht.sourceforge.net/\r\nhttp://sourceforge.net/projects/pir/", "reviews": [{"comment": "* I'm always interested to know the multimedia work done by Python.", "reviewer": "drakeguan", "rank": 3}, {"comment": "Game development is one of my favorite topic, with Python!", "reviewer": "keitheis", "rank": 4}, {"comment": "Game engine looks nice.", "reviewer": "liang2", "rank": 3}, {"comment": "Programming a game with Python?! Sounds great.", "reviewer": "yudalin", "rank": 4}, {"comment": "Sounds a very special topic in PyCon. Will you demo some  3D application? Look forward to your project!", "reviewer": "Yen", "rank": 4}, {"comment": "According to abstract and description, I didn`t see how speaker will describe pyirrlicht and Irrlicht. It makes my worry about quality of the talk.", "reviewer": "apua", "rank": 2}, {"comment": "3D game, sounds interesting.", "reviewer": "stanley", "rank": 4}], "id": 21, "duration": "40 mins", "title": "Show your game development idea with pyirrlicht", "decision": "Rejected", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "\u5927\u7db1:\r\nA. \u6578\u4f4d\u8a0a\u865f\u8655\u7406\u7c21\u4ecb\uff08\u4e00\u5c0f\u6642\uff09\r\n    1. \u6578\u4f4d\u8a0a\u865f\u7684\u61c9\u7528\r\n    2. \u7528 NumPy \u4f86\u8868\u793a\u8a0a\u865f\r\n    3. Digital frequency\r\n    4. \u53d6\u6a23\u4ee5\u53ca\u5be6\u969b\u7684\u983b\u7387\r\n    5. \u96dc\u8a0a\u3001\u5e73\u5747\u8a0a\u865f\u4ee5\u53ca dB \u662f\u600e\u9ebc\u56de\u4e8b\r\nB. Digital sequences and operations\uff08\u4e00\u5c0f\u6642\uff09\r\n    1. Convolution \u8207 auto correlation\r\n    2. Moving average filter\r\n    3. \u6578\u4f4d\u8a0a\u865f\u904b\u7b97\u8868\u793a\u6cd5\r\n    4. z transform\r\n        a. \u70ba\u4ec0\u9ebc\u8981\u6709\u5404\u7a2e transform? \uff08\u975e\u5e38\u91cd\u8981\uff09\r\n        b. z transform \u57fa\u790e\r\n        c. \u7cfb\u7d71\u7a69\u5b9a\u5ea6\r\n    5. \u56de\u6388\u4ee5\u53ca\u4ed6\u7684\u91cd\u8981\u6027\r\n    6. \u56e0\u679c\u7cfb\u7d71(Causal systems)\r\nC. DFT\uff08\u5169\u5c0f\u6642\uff09\r\n    1. \u70ba\u4ec0\u9ebc\u53c8\u8981\u6709\u500b\u4e0d\u540c\u7684 transform?\r\n    2. DFT \u7684\u904b\u4f5c\u539f\u7406\uff0c\u4ee5 8-point DFT \u70ba\u4f8b\r\n    3. DFT \u4e00\u4e9b\u91cd\u8981\u7684\u6027\u8cea\r\n    4. DFT \u8207 DCT\uff08\u5728\u5f71\u50cf\u8655\u7406\u6709\u7528\u5230\uff09 \u7684\u95dc\u4fc2\r\nD. FFT\uff08\u4e00\u5c0f\u6642\uff09\r\n    1. FFT \u8207 DFT \u7684\u95dc\u4fc2\r\n    2. \u5728 SciPy \u4e2d\u4f7f\u7528 FFT/FFTW\r\nE. SciPy \u5728\u8a0a\u865f\u8655\u7406\u4e0a\u7684\u529f\u80fd\uff08\u534a\u5c0f\u6642\uff09\r\n    1. lfilter\r\n    2. filter design tool\r\n    3. Summarize FFT, again\r\nF. \u9032\u968e\u529f\u80fd\uff08optional\uff0c\u4f9d\u8ab2\u7a0b\u9032\u5ea6\u800c\u6c7a\u5b9a\uff09\r\n    1. PID filter \u4ee5\u53ca\u81ea\u52d5\u63a7\u5236\u7684\u61c9\u7528\r\n    2. Interpolation: linear, cubic, sinc\r\n    3. Hilbert transform\r\n    4. Wiener filter\r\n", "talk_perm": "Don't record my talk", "language": "Mandarin", "author": "alberthuang314@gmail.com", "speech_type": "Tutorial", "tags": "dsp,scipy,IoT", "abstract": "\u5728\u9019\u500b IoT \u8208\u8d77\u7684\u6642\u4ee3\uff0c\u7a0b\u5f0f\u8a2d\u8a08\u5e2b\u8ddf\u5916\u754c\u5be6\u9ad4\u4e16\u754c\u9023\u63a5\u7684\u9700\u6c42\u5927\u5e45\u589e\u52a0\uff0c\u8209\u51e1\u5404\u5f0f\u5404\u6a23\u7684\u611f\u6e2c\u5668\u3001\u901a\u8a0a\u3001\u8a9e\u97f3\u8655\u7406\u3001\u566a\u97f3\u6d88\u9664\u3001\u6a5f\u5668\u4eba\u81ea\u52d5\u63a7\u5236\u3001\u56db\u8ef8\u98db\u884c\u5668\u7b49\u7b49\uff0c\u90fd\u6709\u6578\u4f4d\u8a0a\u865f\u7684\u57fa\u790e\u5728\u88e1\u9762\uff0c\u7136\u800c\u4e00\u822c\u5b78\u6821\u7684\u8ab2\u7a0b\u8981\u4e0a\u4e00\u6574\u500b\u5b78\u671f\uff0c\u5c0d\u65bc\u5be6\u52d9\u4e0a\u9700\u8981\u4f7f\u7528\u6578\u4f4d\u8a0a\u865f\u8655\u7406\u7684\u4eba\u54e1\u4f86\u8aaa\uff0c\u82b1\u8cbb\u592a\u9577\u6642\u9593\u5efa\u7acb\u89c0\u5ff5\uff0c\u8b1b\u8005\u4ee5\u4ed6\u8cc7\u8a0a\u5de5\u7a0b\u7814\u7a76\u6240\u7562\u696d\uff0c\u96a8\u5f8c\u5728\u901a\u8a0a IC \u7684 DSP \u90e8\u9580\u4efb\u8077\u516b\u5e74\u7684\u7d93\u9a57\u8ddf CS \u9818\u57df\u6216\u5176\u4ed6\u975e\u7406\u5de5\u9818\u57df\u7684\u4eba\u5206\u4eab\u5b78\u7fd2\u7d93\u9a57\uff0c\u672c\u8ab2\u7a0b\u8457\u91cd\u5728\u5982\u4f55\u7528\u8996\u89ba\u5316\u7684\u65b9\u5f0f\u5efa\u7acb\u76f4\u89c0\uff0c\u4e26\u4e14\u7528 Python NumPy/SciPy \u7576\u4f5c\u7bc4\u4f8b\u8b93\u5b78\u54e1\u9664\u4e86\u5728\u8ab2\u5802\u5438\u6536\u4e4b\u5916\uff0c\u56de\u53bb\u9084\u53ef\u4ee5\u64cd\u4f5c\u7bc4\u4f8b\uff0c\u4ee5\u5efa\u7acb\u66f4\u6df1\u523b\u7684\u89c0\u5ff5\uff0c\u6e1b\u7de9\u5b78\u7fd2\u66f2\u7dda\uff0c\u9032\u800c\u80fd\u5be6\u969b\u61c9\u7528\u6578\u4f4d\u8a0a\u865f\u8655\u7406\u6280\u5de7\u3002", "additional_info": "This tutorial could be in English or Mandarin. ", "reviews": [{"comment": "Let's do it.", "reviewer": "marr", "rank": 5}, {"comment": "Seems to be really well prepared.", "reviewer": "tjw", "rank": 5}, {"comment": "\u8c50\u5bcc\u4e14\u5438\u5f15\u4eba\u7684\u5927\u7db1\uff0c\u6211\u600e\u9ebc\u53ef\u80fd\u6703\u932f\u904e\u9019\u5834 tutorial \u5462\uff1f", "reviewer": "sosorry", "rank": 5}, {"comment": "Digital Python is all time interesting.", "reviewer": "keitheis", "rank": 5}, {"comment": "Nice!", "reviewer": "c3h3", "rank": 5}], "id": 31, "duration": "Whole Day", "title": "\u7528 Python \u5b78\u7fd2\u6578\u4f4d\u8a0a\u865f\u8655\u7406", "decision": "Accepted", "slide_perm": "Don't publish my slide", "audience_level": "Introduction"}, {"description": "There will be three topics in the talk: (1) static map applications, (2) interactive map applications, and (3) real time Google Earth applications.\r\n\r\nIn the first topic, the use of python with Google Static Maps API to create static map images will be demonstrated.  By embedding the center and marker locations as query strings in the url, a static image will be created and returned on request.\r\n\r\nIn the second topic, Flask-GoogleMaps and Folium will be introduced to create interactive map applications.  Flask-GoogleMaps is an extension for Flask micro-framework to simplify the creation of interactive maps, and Folium is a python package used to generate HTML files with leaflet.js embedded for manipulating OpenStreetMap. \r\n\r\nIn the last topic, the markup language for geospatial information called Keyhole Markup Language will be introduced.  The network link concept of KML will be elaborated.  A real time Google Earth application with randomly generated coordinates will be demonstrated to conclude the talk.", "talk_perm": "Don't record my talk", "language": "English", "author": "victorgau@gmail.com", "speech_type": "Regular Talk", "tags": "Google Maps, Google Earth, OpenStreetMap", "abstract": "When it comes to creating map applications, javascript is always the first choice among different languages.  Little do people know that it is actually very easy to create map applications by using Python.  In this talk, three topics will be covered: (1) static map applications, (2) interactive map applications, and (3) real time Google Earth applications.  In the first topic, I will demonstrate how to use python with Google Static Maps API to create static map images.  After that, Flask-GoogleMaps and Folium will be introduced to create interactive map applications.  Finally, I will demonstrate how to use python to create real time Google Earth applications.", "additional_info": "1.Google Static Maps API (https://developers.google.com/maps/documentation/staticmaps/?hl=zh-tw)\r\n2.Flask-GoogleMaps (https://github.com/rochacbruno/Flask-GoogleMaps)\r\n3.Folium (http://folium.readthedocs.org/en/latest/)\r\n4.KML (Keyhole Markup Language) (https://developers.google.com/kml/)\r\n5.Python CGIHTTPServer (https://docs.python.org/2/library/cgihttpserver.html)\r\n6.Google Earth (https://www.google.com/earth/)", "reviews": [{"comment": "It's interesting to see the Google Maps, Google Earth, OpenStreetMap, and Flask-GoogleMaps in PyCon.", "reviewer": "keitheis", "rank": 4}, {"comment": "Interesting topic.", "reviewer": "stanley", "rank": 4}, {"comment": "I think it is much about Google API and less about Python. Though it is still a good example to connect tools within Python", "reviewer": "apua", "rank": 2}, {"comment": "looks fine", "reviewer": "tjw", "rank": 4}], "id": 63, "duration": "40 mins", "title": "Easy Map Applications Using Python", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "Scrapy is a open source python web scraping framework. It can extract structured data to simply the data extraction process during web scraping, and it provides some other features which provides a good web scraping tool for python developers.\r\n\r\nSammy started to write his first web scraper in 2000 in perl, and switched to PHP in 2003 and then Python in 2008. In this talk, Sammy will introduce scrapy and demonstrate how to use its XPath selector to extract data from web sites, and store data with its built-in outputs as well as Django web framework.\r\n\r\nSammy released some open source projects to extract different data to promote open data movements in Hong Kong, for examples. weather data, air quality data.", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "sammy@sammy.hk", "speech_type": "Regular Talk", "tags": "scrapy, web, scraping", "abstract": "Scrapy is a open source python web scraping framework. It can extract structured data to simply the data extraction process during web scraping, and it provides some other features which provides a good web scraping tool for python developers.", "additional_info": "Scrapy: http://scrapy.org\r\nSammy Fung's GitHub: https://github.com/sammyfung", "reviews": [{"comment": "Lack of originality and the subject are well explored by similar talks of\r\nprevious PyCons.", "reviewer": "liang2", "rank": 2}, {"comment": "Just like a one-page official tutorial?", "reviewer": "drakeguan", "rank": 1}, {"comment": "It looks like a example code on the official web page", "reviewer": "yudalin", "rank": 2}], "id": 49, "duration": "40 mins", "title": "Scrapy: web scraping framework in python", "decision": "Rejected", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "The talk will be from a beginner's perspective in Python and listing out all the habits that was picked up along the way. The talk will then give a beginner's perspective on Django and how learning and programming Django forced me to rethink my methods of programming in Python and how to implement things correctly. \r\n\r\nIt will be a journey on how one goes about to learn about Django and how it benefits in improving programming in general.", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "rahman@marimore.co.jp", "speech_type": "Regular Talk", "tags": "django, learning, beginner", "abstract": "The talk is basically for beginners by a beginner in Django. It will start with the journey in Python and how along the way bad habits start to form and influence the style of programming.\r\n\r\nThen it will be about the first journey into Django, and how programming in Django forces the bad habit to be fixed just to make it work.", "additional_info": "Learning Python the Hard Way", "reviews": [{"comment": "Might be interesting.", "reviewer": "drakeguan", "rank": 2}, {"comment": "It would be more suitable to give us his sharing in lightning talk.", "reviewer": "stanley", "rank": 2}, {"comment": "May be more suitable in lightning talk.", "reviewer": "andy", "rank": 2}], "id": 67, "duration": "40 mins", "title": "How Django fixed my bad Python habits", "decision": "Rejected", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "Using Python, I have developed a program that aids in the analysis of packet data for Deep Packet Inspection. Deep Packet Inspection is a process mainly used in network security to ensure integrity of network data sent across the network. Deep Packet Inspection is used to pre-empt and prevent malicious data from being transmitted over a network in order to ensure the security of the organization. ", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "lee.yangpeng@dhs.sg", "speech_type": "Lightning Talk", "tags": "network security, packets, protocols", "abstract": "Almost everybody in the world, including ourselves, is connected by the Internet; we are connected to the Internet at home, at work, and even on our mobile phones. In a commercial setting, network security is particularly important, in order to prevent threats such as commercial espionage and malware infection of the network. In order to monitor a network for security purposes, a process known as Deep Packet Inspection is applied. This is a method of establishing baseline behaviour for the network so that anomalous behaviour can be detected. However, there are two challenges to performing Deep Packet Inspection effectively. The first is to obtain the specifications of the protocols involved in the network. It is difficult to perform Deep Packet Inspection on proprietary protocols with no public documentation. The second challenge is the problem of scale; it is difficult to incorporate knowledge of the large variety of protocols in a typical network setting, especially when they are not even known prior to deployment.\r\n\r\nI developed and evaluated Analytics, a tool that can help in the analysis of packet data for Deep Packet Inspection. Analytics is a library consisting of functions that support manual analysis. Analytics attempts to discover constants, enumeration fields, and strings among packet data; it also provides visualization to aid analysts. My experiments show that Analytics has an average accuracy in detecting constants of 76.8% and an average accuracy in detecting enumeration fields of 88.6%. Analytics is applicable to analyzing network environments with proprietary or unknown protocols.\r\n\r\nFrom my talk, audience can learn about the importance of network security and how a network can be compromised by malicious software (malware). Left unhindered, these malware can destroy an organization by committing commercial espionage, leak company secrets, or control the computers connected to the network to perform illegal activities. Audience can also benefit from my talk by learning about Deep Packet Inspection, a common process used in large organizations to maintain network security and prevent the transfer or malicious data through a network. Experts in the field can appreciate the tool, 'Analytics', that I have made in Python with the main application in aiding Deep Packet Inspection. I will also compare my product with other similar tools used industrially to provide a more insightful talk and keep it relevant.", "additional_info": "Hello everyone! I'm a 16-year-old student in Dunman High School, Singapore! I've learned C++ when I was 13-years-old and Python when I was 15. I have participated in a number of Computing/Technology competitions in Singapore recently, including National Olympiad of Informatics(NOI), Google Code-in, and Google Code Jam. Currently I am studying A-level Computing in school. I have a Python project that was done during my free time with experienced mentors that I would like to share with you! :)\r\n\r\nThis project is currently shortlisted for the Finals of SSEF (Singapore Science & Engineering Fair) 2015, and pending acceptance into IEEE and Pycon SG", "reviews": [{"comment": "Nice Talk!", "reviewer": "c3h3", "rank": 5}], "id": 51, "duration": "40 mins", "title": "Network Security and Analysis system with Python ", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "Using Python, I have developed a program that aids in the analysis of packet data for Deep Packet Inspection. Deep Packet Inspection is a process mainly used in network security to ensure integrity of network data sent across the network. Deep Packet Inspection is used to pre-empt and prevent malicious data from being transmitted over a network in order to ensure the security of the organization. ", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "lee.yangpeng@dhs.sg", "speech_type": "Regular Talk", "tags": "network security, packets, protocols", "abstract": "Almost everybody in the world, including ourselves, is connected by the Internet; we are connected to the Internet at home, at work, and even on our mobile phones. In a commercial setting, network security is particularly important, in order to prevent threats such as commercial espionage and malware infection of the network. In order to monitor a network for security purposes, a process known as Deep Packet Inspection is applied. This is a method of establishing baseline behaviour for the network so that anomalous behaviour can be detected. However, there are two challenges to performing Deep Packet Inspection effectively. The first is to obtain the specifications of the protocols involved in the network. It is difficult to perform Deep Packet Inspection on proprietary protocols with no public documentation. The second challenge is the problem of scale; it is difficult to incorporate knowledge of the large variety of protocols in a typical network setting, especially when they are not even known prior to deployment.\r\n\r\nI developed and evaluated Analytics, a tool that can help in the analysis of packet data for Deep Packet Inspection. Analytics is a library consisting of functions that support manual analysis. Analytics attempts to discover constants, enumeration fields, and strings among packet data; it also provides visualization to aid analysts. My experiments show that Analytics has an average accuracy in detecting constants of 76.8% and an average accuracy in detecting enumeration fields of 88.6%. Analytics is applicable to analyzing network environments with proprietary or unknown protocols.\r\n\r\nFrom my talk, audience can learn about the importance of network security and how a network can be compromised by malicious software (malware). Left unhindered, these malware can destroy an organization by committing commercial espionage, leak company secrets, or control the computers connected to the network to perform illegal activities. Audience can also benefit from my talk by learning about Deep Packet Inspection, a common process used in large organizations to maintain network security and prevent the transfer or malicious data through a network. Experts in the field can appreciate the tool, 'Analytics', that I have made in Python with the main application in aiding Deep Packet Inspection. I will also compare my product with other similar tools used industrially to provide a more insightful talk and keep it relevant.", "additional_info": "Hello everyone! I'm a 16-year-old student in Dunman High School, Singapore! I've learned C++ when I was 13-years-old and Python when I was 15. I have participated in a number of Computing/Technology competitions in Singapore recently, including National Olympiad of Informatics(NOI), Google Code-in, and Google Code Jam. Currently I am studying A-level Computing in school. I have a Python project that was done during my free time with experienced mentors that I would like to share with you! :)\r\n\r\nThis project is currently shortlisted for the Finals of SSEF (Singapore Science & Engineering Fair) 2015, and pending acceptance into IEEE and Pycon SG", "reviews": [{"comment": "It seems serious and detail (according to the abstract PDF) given by a young student from Singapore.", "reviewer": "keitheis", "rank": 3}, {"comment": "definitely can not say no to the topic, but she/he did this project all by herself/himself ???!!! ", "reviewer": "jin", "rank": 3}, {"comment": "Young and talent speaker. But I thought the deep packet inspection is not the emerging technology.", "reviewer": "sosorry", "rank": 3}, {"comment": "It's seldom to hear network security application by Python.\r\nIt should be fun~", "reviewer": "stanley", "rank": 5}, {"comment": "Really want to know this genius.", "reviewer": "yudalin", "rank": 4}, {"comment": "cool", "reviewer": "tjw", "rank": 4}], "id": 52, "duration": "40 mins", "title": "Network Security and Analysis system with Python ", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "I'll provide typical use cases of the API (as our CLI uses our API).\r\nSo its not just running commands but also showing the internals of the CLI and how it calls our API. I'll see if its possible to add even some information what happens on our back-end.", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "thomas.kuiper@gandi.net", "speech_type": "Regular Talk", "tags": "domain names, virtual machines, paas", "abstract": "Written in Python, Gandi CLI is an open source command line tool to interface with Gandi's APIs. It can be used to create and manage hosting instances (Gandi IaaS and PaaS), generate and manage SSL certificates, manage domain names and their zones, as well as all other domain name-related Gandi services (such as Gandimail, Gandisite).\r\nGandi's API is provided free of charge.", "additional_info": "http://cli.gandi.net/\r\nhttp://doc.rpc.gandi.net/\r\nhttps://github.com/Gandi/gandi.cli/", "reviews": [], "id": 108, "duration": "40 mins", "title": "Gandi CLI", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "Sphinx provides a internationalization (i18n) feature.\r\nIf you translate some sphinx document without using the i18n feature, you need to rewrite original document source files. But this approach has three problems:\r\n\r\n1. You must be careful to maintain reStructuredText structure.\r\n2. It's hard to divide translation tasks for a number of volunteer translators.\r\n3. It's hard to pursue the upstream document source that is frequently updated.\r\n\r\nAnd so, sphinx i18n feature will support our translation.\r\nSince Sphinx supports extracting/injecting gettext format translation catalog, you can use helpful tools/services easily that provide translation support features like a translation memory, recommending similar translation, glossary and auto-translation.\r\nBy using such translation support services, document translation with Sphinx can be carried out as follows:\r\n\r\n1. You can translate for each paragraphs (Sphinx will output gettext msgid for paragraphs).\r\n2. You can translate more than one person at the same time.\r\n3. You can use helpful translation support features.\r\n\r\nIf you use such a service, volunteers are more likely to participate in the translation.\r\nSphinx-users.jp team built a translation flow with using sphinx and the transifex service.\r\nIn addition, we have automated the entire process using the drone.io service.\r\n\r\nAs a result of this,\r\n(A) translation source entries on the transifex will be updated automatically when original documentation is changed.\r\n(B) translated document page will be updated when each entries is translated on the transifex.\r\nIn this session, I'll explain 3 things; (1) entier process to translate sphinx docs. (2) automation mechanism for the process. (3) tips, tricks and traps for wrinting docs and translating.\r\n\r\nTarget:\r\n\r\n- Who want to translate documentation written by sphinx into local language \r\n- Who want to forcus to translation\r\n- Who need translation contributors and manage them easily\r\n\r\nOutline:\r\n\r\n* Self introduction (2 min)\r\n\r\n* Sphinx introduction (2 min)\r\n\r\n  * What is Sphinx?\r\n  * Sphinx examples\r\n\r\n* How do you translate Sphinx documentation? (5 min)\r\n\r\n  * Rewriting source files\r\n  * ...\r\n\r\n* Sphinx i18n feature (5 min)\r\n\r\n  * make pot files by using \"make gettext\"\r\n  * translate pot files into po files\r\n  * build a translated document by using translated gettext catalogs\r\n\r\n* Automated translation process with several services (10 min)\r\n\r\n  * github push web hook invoke drone.io\r\n  * drone.io executes \"make gettext\" and uploads pot files to transifex\r\n  * transifex translation\r\n  * transifex invoke web hook drone.io\r\n  * drone.io executes \"make html\" with using po files and deploy html files\r\n\r\n* tips, tricks, traps (10 min)\r\n", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "shimizukawa@gmail.com", "speech_type": "Regular Talk", "tags": "sphinx, documentation, translation, internationalization, i18n, ", "abstract": "Sphinx can extract paragraphs from sphinx document and store them into gettext format translation catalog files.\r\nGettext format translation catalog is easy to translate from one language to other languages.\r\nAlso Sphinx support internationalization by using such catalog files.\r\nYou can use your favolite editors or services to translate your sphinx docs.\r\nIn this session, I'll explain 3 things; (1) entier process to translate sphinx docs. (2) automation mechanism for the process. (3) tips, tricks and traps for wrinting docs and translating.\r\n", "additional_info": "- http://sphinx-doc.org/intl.html\r\n- http://docs.sphinx-users.jp/intl.html\r\n- https://drone.io/bitbucket.org/shimizukawa/sphinx-doc13\r\n", "reviews": [{"comment": "Description is very detailed, seems to be well prepared. Wondering how well this approach works. ", "reviewer": "tjw", "rank": 4}, {"comment": "* Getting involved in world-wide open-source project is the must-to-promote topic all the time!\r\n* Documentation is hard to usual developers, but we all know it means something in your coding life.\r\n* I think there is always a need to talk about Sphinx and documentation until we are fully surrounded by well-doced projects.", "reviewer": "drakeguan", "rank": 5}, {"comment": "Great and useful! Really looking forward this talk!", "reviewer": "yudalin", "rank": 4}, {"comment": "We should always encourage the audience to contribute themselves to  open source project.\r\nAnd sphinx is also a good project.", "reviewer": "stanley", "rank": 4}, {"comment": "Special~ It will be a good example of making sphinx add-on", "reviewer": "apua", "rank": 4}], "id": 50, "duration": "40 mins", "title": "Easy contributable internationalizatoin process with Sphinx", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "Outline (draft)\r\n\r\n- What is ZoneIDAProc?\r\n  - Linux proc[1]\r\n  - VFS[2]\r\n  - FUSE[3]\r\n- IDAProc\r\n  - Linux proc-like\r\n    - Example: read customized data\r\n    - Example: read/write internal variable\r\n    - Example: expose all interested symbols\r\n  - Instrumentation[4]\r\n    - Example: attach to a live python process and inject code\r\n    - Race condition", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "penvirus@gmail.com", "speech_type": "Regular Talk", "tags": "Linux", "abstract": "ZoneIDAProc provides an easy way to export Linux proc-like interface for python program.  It is intuitive and convenient for showing process internal data; even expose a complex computation.  The talk focuses on demonstrating the magic of ZoneIDA and how it increases your program's versatility.", "additional_info": "[1]: http://www.tldp.org/LDP/Linux-Filesystem-Hierarchy/html/proc.html\r\n[2]: http://en.wikipedia.org/wiki/Virtual_file_system\r\n[3]: http://fuse.sourceforge.net/\r\n[4]: http://en.wikipedia.org/wiki/Instrumentation_%28computer_programming%29", "reviews": [{"comment": "- it's dll/code injection for python process, and you can manipulate other process.\r\n- Little geek. It's security topic.", "reviewer": "AlfredW", "rank": 4}, {"comment": "I think it is a good tool for profiling and hacking.  look forward to benefit all our attendee ", "reviewer": "tim", "rank": 3}, {"comment": "Consider the draft, I think the talk will give a good introduction and demo.\r\nIt is not a hot topic, but about secure, so I think it is important and useful.", "reviewer": "apua", "rank": 4}, {"comment": "It should be awsome.", "reviewer": "stanley", "rank": 5}], "id": 53, "duration": "40 mins", "title": "ZoneIDAProc: Instrumentation-based Dynamic Accessing", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "We utilized 16 networked Raspberry Pi B+s (a credit card-sized computer) and camera modules to construct RPyScan. The cameras will be set up equidistant to the object to capture multiple overlapping photos (http://go.dhs.sg/scannerdiagram). To construct the camera mounts on which the Raspberry Pi rests on, we use 3D modeling and 3D printing to efficiently improve on our initial prototype. A Python script (http://go.dhs.sg/pythonscript) takes multiple photos simultaneously and uploads them to Autodesk Recap 360 which detects the identical points of adjacent photographs and stitches them together into a 3D model. Further editing and improvement of the 3D model can be made manually for better results using 3D modeling software such as MeshLab and Project Momento.\r\n\r\nAdvantages and Possible Applications\r\n\r\nCost\r\nRPyScan is relatively cost-effective at about $1600 and most components are easily accessible from online retailers. (For comprehensive cost schedule and purchasing sources, please refer to 3D scanner cost file: http://go.dhs.sg/costsheet). Most professional scanners can cost in the range $10,000 - $50,000.  \r\n\r\nSpeed\r\nRPyScan snaps photos simultaneously and sends the pictures to the computer within seconds. Hence, it can even capture fidgeting objects (e.g. babies) while most other scanners are not able to.\r\n\r\nHigh Resolution\r\nRPyScan creates high resolution colored 3D models with 120,000+* vertices and 250,000+* faces (*calculations based on our initial prototype).\r\n\r\nScalability & Scanning Size\r\nRPyScan is scalable which allows you to control the quality and dimensions of the 3D model. For example, to increase the size of area scanned, you can add more camera modules easily. Currently, RPyScan can scan an area of about 2m * 2m.\r\n\r\n\r\nApplications\r\nFigurines \r\nRPyScan can be used to create 3D models to be printed as figurines. Since the time required for scanning is less than 1 second, it can be used to capture images of children or pets which have a tendency to move during scanning.\r\n\r\nE-commerce\r\nFor e-commerce, retailers can scan their products and upload the 3D models online. This allows customers to better visualize the product. This is especially true in the case of clothing, where users can try a virtual 'fitting' to check if the size fits.  \r\n\r\nArchaeology\r\nArchaeologists can make use of RPyScan to scan 3D models of artifacts for research or preservation purposes.\r\n\r\nAnimation\r\nWe can add a skeleton to the 3D model which will allow animation studios to construct animations for films!\r\n\r\nPresentation outline\r\n1.Brief introduction of 3D scanning \r\n2.Current technologies\r\n3.Importance and applications\r\n4.Hardware and software implementation of RPyScan\r\n5.Hardware (setup, costs, etc.)\r\n6.Software \r\n7.Challenges\r\n8.Advantages and possible applications\r\n9.Demo\r\n10.Further plans / call for collaboration / Q&A\r\n\r\n\r\nAbout Melvin, Le Xuan and Hannie\r\nWe are students from Dunman High School, Singapore. We have learnt Python for the past few months to one plus year since we studied Computing as an A-level subject. We learnt about the theoretical and algorithmic aspects of computer science (e.g. data structures and searching) and applied this knowledge to practical (Google App Engine) Python projects.\r\n\r\nMelvin is really enthusiastic and passionate about everything related to technology. He loves software and hardware equally. He is currently the chairperson of his school's Infocomm Club and has attained many national and international accolades such as Singapore Management University's InnovateIT and Information Technology Standards Committee's CodeXtremeApps hackathon school category, where he dabbled in home automation and created Internet-connected chairs and cookers prototypes. He also represented Singapore in the APICTA (Asia Pacific ICT Alliance) Awards and was pivotal in encouraging his school mates to contribute towards open source projects where Dunman High was recognized as the top participating school in Google Code-in 2014. When he is not studying, you can find him in his home 'lab' working on his IoT projects. In his free time, he plays video games and fantasizes about owning an Occulus Rift, and also coaches badminton to young kids.  \r\n\r\n\r\nLe Xuan is a budding Computing student who is ever excited to learn more about technology. Though he is relatively new in this area, his huge fascination with gadgets and devices motivates him to consistently find out more about how they work. He frequently creates various kinds of programs as part of this hobby, and can sometimes be found tinkering with pieces of machinery, thinking about how they might be improved. As part of his school curriculum, he has created a web application in celebration of Singapore\u2019s 50th birthday (SG50) using Google App Engine and Python, took part in Google Code-in 2014 and the 2015 IDA National JC Coding Championship, and attended a number of related seminars and talks. He is interested in delving deeper into the areas of virtual reality and artificial intelligence. Besides Computing, he plays the piano and the French horn, enjoys playing video games for leisure, and recently picked up sports to be more active.\r\n\r\nHannie shows a strong interest in both hardware and software. She has a strong determination to learn new things and is not afraid of hard work. In the short few months since she started learning Computing, she created a web application using Python for SG50 and has participated in events such as Google Code-in 2014 and the 2015 National JC and HS Coding Championships. She actively engages herself in infocomm programmes such as an SMU Panel Discussion on \u201cCreating the Future through Computing\u201d and \u201cThe Science Behind Thoughts\u201d conducted by A Star Research Institute of High Performance Computing (IHPC). In the foreseeable future, she hopes to explore emerging technologies such as projected keyboards. Besides Computer Science, she has a passion for classical music and plays the Piano, Violin and Viola. She also enjoys sports such as Volleyball and Archery. ", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "foo.mawqing.melvin@dhs.sg", "speech_type": "Regular Talk", "tags": "Raspberry Pi, 3D scanner", "abstract": "With the advent of low cost 3D printers, there is an increasing demand for 3D technology in many diverse fields. However, 3D printing requires a 3D model as input, usually modeled in a computer. But why should we tediously create a model from scratch, when we can simply scan the objects and modify them? In this project, we present RPyScan, an effective and low cost DIY 3D scanner which makes use of photogrammetry to infer depth information from photos. With enough points, this will create a 3D model of the scanned object. This is in contrast to most 3D scanners on the market, which makes use of RGBD (Depth) and lasers.", "additional_info": "", "reviews": [{"comment": "I'm excited to see the demo! The description is so well explained that I don't know how to make further expectation.", "reviewer": "liang2", "rank": 5}, {"comment": "RPi, Python, and 3D Printer are so much fun!", "reviewer": "keitheis", "rank": 5}, {"comment": "cool and interesting projects.", "reviewer": "tjw", "rank": 5}, {"comment": "It's the era of Open Source and Maker.", "reviewer": "yudalin", "rank": 5}], "id": 56, "duration": "40 mins", "title": "RPyScan", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "\u8ab0\u9069\u5408\u53c3\u52a0\u672c\u5de5\u4f5c\u574a\uff1a\r\n1. \u6703\u57fa\u672cPython\u8a9e\u6cd5\r\n2. \u6703\u57fa\u672cHtml\r\n\r\n\u8ab0\u4e0d\u9069\u5408\u53c3\u52a0\u672c\u5de5\u4f5c\u574a\uff1a\r\n1. Flask\u8001\u624b\r\n2. \u60f3\u5b78\u7fd2\u6700\u65b0Html5\u7db2\u9801\u6280\u8853\r\n3. \u60f3\u5b78\u7fd2\u6700\u9177\u70abJavascript\u6280\u8853\uff0c\u5982Angular, react...\r\n\r\n\u8ab2\u7a0b\u5927\u7db1\uff1a\r\n1. \"Hello world!\" with Flask\r\n2. Template Engine: Jinja2\r\n3. Connect to DB: Flask-SQLAlchemy\r\n4. Deploy to real server", "talk_perm": "Don't record my talk", "language": "Mandarin", "author": "theonlin@gogolook.com", "speech_type": "Workshop", "tags": "web, flask", "abstract": "Flask\u662f\u4e00\u500b\u7528Python\u958b\u767c\u7684\u7db2\u9801\u5fae\u6846\u67b6(microframework)\uff0c\u6613\u65bc\u5b78\u7fd2\u4e26\u64c1\u6709\u826f\u597d\u7684\u67b6\u69cb\u8a2d\u8a08\uff0c\u975e\u5e38\u9069\u5408\u521d\u5b78\u8005\u525b\u63a5\u89f8Web\u7684\u4eba\u5b78\u7fd2\uff0c\u672c\u5de5\u4f5c\u574a\u4e3b\u8981\u76ee\u6a19\u662f\u5e0c\u671b\u80fd\u5728\u4e09\u5c0f\u6642\u7684\u6642\u9593\u5167\uff0c\u85c9\u8457\u624b\u628a\u624b\u6559\u5b78\u7684\u65b9\u5f0f\uff0c\u5e36\u9818\u4f7f\u7528\u8005\u958b\u767c\u51fa\u4e00\u500b\u57fa\u672c\u7684Web\u7db2\u7ad9\u3002", "additional_info": "Flask:\r\nhttp://flask.pocoo.org/\r\n\r\nJinja2:\r\nhttp://jinja.pocoo.org/docs/dev/\r\n\r\nFlask-SQLAlchemy:\r\nhttps://pythonhosted.org/Flask-SQLAlchemy/\r\n\r\n", "reviews": [{"comment": "Good fit for a half day workshop.", "reviewer": "marr", "rank": 5}, {"comment": "* I think we, as attendees in PyCon APAC, deserve some sort of web application tutorial.\r\n* The proposed agenda looks a little bit too simple.", "reviewer": "drakeguan", "rank": 2}], "id": 57, "duration": "Half Day", "title": "Build your own website with Flask", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "", "talk_perm": "Don't record my talk", "language": "Mandarin", "author": "michael.peng@vpon.com", "speech_type": "Lightning Talk", "tags": "data mining", "abstract": "Vpon is a leading mobile advertising company in Taiwan, with hundreds of millions of data from mobile apps everyday. In this short talk we will introduce the real-time data mining framework used in our DSP and SSP systems, including modules for CTR prediction, performance tracking, bid price optimization, mobile traffic prediction and anomaly detection. Performance, robustness and adaptivity are key design goals of this system. Our system can improve advertising performance (such as click-through rates) by adapting to mobile traffic changes in real-time.", "additional_info": "", "reviews": [], "id": 109, "duration": "40 mins", "title": "Real-Time Data Mining Framework for Mobile Advertising at Vpon", "decision": "Accepted", "slide_perm": "Don't publish my slide", "audience_level": "Introduction"}, {"description": "In this talk, we put emphasis on the anticheating analysis of the mobile advertisement clicking with the aid of the powerful python language", "talk_perm": "Don't record my talk", "language": "Mandarin", "author": "james.hsu@vpon.com", "speech_type": "Regular Talk", "tags": "fraud detection", "abstract": "As a leading big data ad technology with leading mobile advertising platform in Taiwan, Vpon receives hundred millions of data from mobile Apps everyday. In this unbounded data sea, our goal is to reduce the complexity of data, to find the valuable patterns or information, and to make the appropriate judgement using this information. In this talk, we put emphasis on the anticheating analysis of the mobile advertisement clicking with the aid of the powerful python language. Such development of techniques not only enables us to efficiently detect the distinctive patterns and anomalies of the advertising traffic, but also improves the overall quality of the mobile advertisement. Ultimately, it can help us to construct important indices and models for data mining in the mobile network.\r\n", "additional_info": "", "reviews": [], "id": 110, "duration": "40 mins", "title": "Click Fraud Detection in the Mobile Advertising Using Python", "decision": "Accepted", "slide_perm": "Don't publish my slide", "audience_level": "Introduction"}, {"description": "A. \u74b0\u5883\u8a2d\u5b9a\uff080.5 \u5c0f\u6642\uff09\r\n    1. \u4f7f\u7528 Serial + WiFi\r\n    2. \u4f7f\u7528 VNC \u548c X-Forwarding\r\nB. Raspberry Pi Camera\u7c21\u4ecb\uff081 \u5c0f\u6642\uff09\r\n    1. \u6a19\u6e96 Camera \u548c NoIR Camera \u4ecb\u7d39\r\n    2. Camera \u61c9\u7528\u4ecb\u7d39\r\n    3. Camera \u6539\u88dd\u5957\u4ef6\u4ecb\u7d39\r\n    4. Camera \u5b89\u88dd\u8207\u8a2d\u5b9a\r\nC. \u57fa\u790e Camera \u4f7f\u7528 \uff082 \u5c0f\u6642\uff09\r\n    1. \u7528 Python \u63a7\u5236\r\n    2. \u624b\u6a5f\u63a7\u5236\u8207\u7db2\u8def\u4e32\u6d41\r\n    3. \u9031\u908a\u786c\u9ad4\u8207 Camera \u7684\u4e92\u52d5\r\n    4. \u4e32\u63a5\u7db2\u8def\u670d\u52d9\r\nD. \u9032\u968e Camera \u4f7f\u7528 (2.5 \u5c0f\u6642)\r\n    1. \u5f71\u50cf\u8655\u7406\u539f\u7406\r\n    2. \u6587\u5b57\u8fa8\u8b58\r\n    3. \u4eba\u81c9\u8fa8\u8b58\u8207\u8ffd\u8e64", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "sorry702@gmail.com", "speech_type": "Workshop", "tags": "Raspberry Pi, Python, Picamera, OpenCV", "abstract": "\u672c\u6b21\u5de5\u4f5c\u574a\u6703\u4ecb\u7d39\u8207\u4f7f\u7528 Raspberry Pi Camera\uff0c\u4e26\u4ee5 Python \u5be6\u505a\u5404\u7a2e\u61c9\u7528\u3002", "additional_info": "", "reviews": [{"comment": "So we need to prepare separate days and rooms for both Pi workshops.", "reviewer": "marr", "rank": 5}, {"comment": "I love this topic. It's impeccable.", "reviewer": "stanley", "rank": 5}, {"comment": "Experienced speaker, teacher, and attractive PRi with Python.", "reviewer": "keitheis", "rank": 5}, {"comment": "looks fine.", "reviewer": "tjw", "rank": 4}, {"comment": "interesting!", "reviewer": "jin", "rank": 5}], "id": 59, "duration": "Whole Day", "title": "Raspberry Pi Camera + Python \u5de5\u4f5c\u574a", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "      \u8fd1\u5e74\u4f86\u8a9e\u97f3\u5408\u6210\u6280\u8853\u9010\u6f38\u767c\u5c55\u6210\u719f\u88ab\u61c9\u7528\u65bc\u8a31\u591a\u7684\u5e73\u53f0\u4e0a\u5982Apple\u7684SIRI\uff0cGoogle\u7684TRANSLATE\u751a\u81f3\u5229\u7528\u5728\u8a31\u591a\u8a9e\u8a00\u7684\u5b78\u7fd2\u4e0a\uff0c\u5176\u4e3b\u8981\u76ee\u7684\u662f\u91dd\u5c0d\u4f7f\u7528\u8005\u6240\u9700\u7684\u6587\u5b57\u5167\u5bb9\u63d0\u4f9b\u6240\u9700\u8981\u7684\u8a9e\u97f3\u5167\u5bb9\u3002\r\n\t\u96d6\u8457\u667a\u6167\u578b\u624b\u6a5f\u53ca\u5e73\u677f\u96fb\u8166\u7684\u666e\u53ca\u8a31\u4eba\u5011\u7684\u95b1\u8b80\u7fd2\u6163\u4e5f\u9010\u6f38\u7684\u906d\u5230\u6539\u8b8a\uff0c\u6709\u9451\u65bc\u50b3\u7d71\u7684\u7d19\u672c\u66f8\u592a\u91cd\uff0c\u592a\u5360\u7a7a\u9593\uff0c\u88fd\u9020\u904e\u7a0b\u780d\u4f10\u6a39\u6728\u6703\u9020\u6210\u5168\u7403\u6696\u5316\uff0c\u651c\u5e36\u4e99\u662f\u4e0d\u4fbf\uff0c\u65bc\u662f\u6f38\u6f38\u6709\u4e86\u628a\u79d1\u6280\u548c\u66f8\u672c\u7d50\u5408\u518d\u4e00\u8d77\u7684\u69cb\u60f3\uff0c\u56e0\u800c\u50ac\u751f\u4e86\u96fb\u5b50\u66f8\u7684\u7522\u751f\u3002\u5176\u512a\u52e2\u5177\u6709\u651c\u5e36\u65b9\u4fbf\uff0c\u6e1b\u5c11\u6c61\u67d3\u7b49\uff0c\u4eba\u5011\u95b1\u8b80\u7684\u5e73\u53f0\u7531\u4e00\u822c\u7684\u66f8\u7c4d\u9010\u6f38\u8f49\u79fb\u5230\u667a\u6167\u578b\u88dd\u7f6e\u4e0a\u3002\u70ba\u4e86\u514b\u670d\u904b\u7528\u884c\u52d5\u884c\u667a\u6167\u88dd\u7f6e\u95b1\u8b80\u96fb\u5b50\u66f8\u6642\u7684\u4e0d\u4fbf\uff0c\u4f8b\u5982:\u5b57\u9ad4\u592a\u5c0f\u6240\u9020\u6210\u7684\u95b1\u8b80\u4e0d\u4fbf\u6642\u3002\u904b\u7528\u8a9e\u97f3\u5408\u6210\u7684\u6280\u8853\u5c07\u6587\u5b57\u7684\u5167\u5bb9\u5408\u6210\u51fa\u8a9e\u97f3\u4e26\u5c07\u8a9e\u97f3\u53ca\u6587\u5b57\u505a\u7d50\u5408\u4f86\u8f14\u52a9\u4f7f\u7528\u8005\u4f86\u95b1\u8b80\u96fb\u5b50\u66f8\u7684\u5167\u5bb9\u3002\r\n\t\u672c\u7cfb\u7d71\u4e3b\u8981\u662f\u85c9\u52a9\u65bcGoogle\u7684\u8a9e\u97f3\u5408\u6210\u7684API\u4f86\u5e6b\u52a9\u6211\u5011\u5c07\u6587\u5b57\u7684\u5167\u5bb9\u8f49\u63db\u6210\u8a9e\u97f3\uff0c\u518d\u904b\u7528\u8a9e\u97f3\u7d50\u5408\u6587\u5b57\u53ca\u914d\u5408\u4e0a\u6587\u5b57\u80cc\u666f\u7684\u8b8a\u5316\u4f86\u8868\u9054\u51fa\u540c\u6b65\u5316\u7684\u6548\u679c\u3002\u5176\u7a0b\u5f0f\u57f7\u884c\u6d41\u7a0b\u70ba:\r\n\r\nStep1. \u6e96\u5099\u4e00\u500b\u6587\u5b57\u6a94(txt)\u3002 \r\nStep2. \u5c07\u6587\u5b57\u6a94\u7684\u5167\u5bb9\u505a\u6587\u5b57\u5206\u6790\u3002\r\nStep3. \u7d93\u7531\u6587\u5b57\u5206\u6790\u5f8c\u5c07\u6587\u7ae0\u5167\u7684\u6bcf\u500b\u5b57\u7d66\u5206\u5272\u51fa\u4f86\u3002 \r\nStep4. \u5c07\u6bcf\u500b\u5b57\u4e0a\u50b3\u81f3Google\u7684 API\u5408\u6210\u8a9e\u97f3\u3002\r\nStep5. \u7d50\u5408\u8a9e\u97f3\u53ca\u6587\u5b57\u53ca\u914d\u5408\u4e0a\u6587\u5b57\u80cc\u666f\u7684\u8b8a\u5316\u4f86\u8868\u9054\u51fa\u540c\u6b65\u5316\u7684\u6548\u679c\u3002\r\n\u4ee5\u4e0a\u6b65\u9a5f\uff0c\u5716\u793a\u65bc\u4e0b\u5217\u7db2\u5740:\r\nhttp://goo.gl/guxp0U\r\n       \u70ba\u4e86\u9054\u5230\u8a9e\u97f3\u6210\u540c\u6b65\u7684\u6548\u679c\u6211\u5011\u5fc5\u9808\u5148\u53bb\u6c42\u51fa\u6bcf\u500b\u5b57\u5728\u8a9e\u97f3\u4e2d\u7684\u767c\u97f3\u4f4d\u7f6e\uff0c\u5728\u6b64\u6211\u5011\u904b\u7528\u4e86pygame.mixer.music.get_pos( )\u4f86\u64f7\u53d6\u51fa\u8a9e\u97f3\u4e2d\u6bcf\u500b\u65b7\u9ede\u767c\u751f\u7684\u4f4d\u7f6e\u3002\u4e26\u904b\u7528\u5f9egoogle\u53d6\u5f97\u6bcf\u500b\u5b57\u7684byte\u6578\uff0c\u4f86\u4f30\u6e2c\u6bcf\u500b\u5b57\u5728\u8a9e\u97f3\u8a0a\u865f\u4e2d\u7684\u8d77\u59cb\u4f4d\u7f6e\u53ca\u7d50\u675f\u4f4d\u7f6e\uff0c\u4f86\u63a8\u7b97\u8a9e\u97f3\u7684\u767c\u97f3\u958b\u59cb\u6642\u9593\u53ca\u767c\u97f3\u7d50\u675f\u6642\u9593\uff0c\u5176\u4f30\u6e2c\u7684\u516c\u5f0f\u70ba:\r\n\r\nBytes of Posi occur  = Posi/Length*sumT\r\n\r\nPos:\u904b\u7528pygame.mixer.music.get_pos( )\u6240\u53d6\u5f97\u8a9e\u97f3\u4e2d\u7684\u65b7\u9ede(\u55ae\u4f4d:ms)\u3002\r\nLength:\u904b\u7528mutagen\u6240\u53d6\u51fa\u8a9e\u97f3\u7684\u7e3d\u9577(\u55ae\u4f4d:s)\u3002\r\nsumT:\u5c07\u6240\u6709\u6587\u5b57\u7684byte\u505a\u76f8\u52a0\u53d6\u5f97\u8a9e\u97f3\u6a94\u6848\u7684\u5927\u5c0f\u3002\r\n\r\n      \u7d93\u7531\u4e0a\u8ff0\u7684\u516c\u5f0f\uff0c\u6211\u5011\u53ef\u4ee5\u8f15\u6613\u5730\u6c42\u51fa\u6587\u7ae0\u4e2d\u6bcf\u500b\u5b57\u548c\u5b57\u4e4b\u9593\u505c\u9813\u767c\u751f\u7684\u6642\u9593\u9ede\uff0c\u53ca\u6bcf\u500b\u5b57\u7684\u8a9e\u97f3\u8a0a\u865f\u5728\u6574\u6bb5\u8a9e\u97f3\u4e2d\u7684\u7b2c\u5e7e\u500bbyte\u5230\u7b2c\u5e7e\u7684byte\u3002\u904b\u7528\u525b\u624d\u7684\u7d50\u679c\u4f86\u505a\u5224\u65b7\u7576\u516c\u5f0f\uff0c\u7b97\u51fa\u7684\u7d50\u679c\u5927\u65bc\u8a9e\u97f3\u8a0a\u865f\u8d77\u59cb\u4f4d\u7f6e\u6216\u5c0f\u65bc\u8a9e\u97f3\u8a0a\u865f\u7d50\u675f\u4f4d\u7f6e\u6642\u5247\u5c07\u6587\u5b57\u505a\u7279\u6b8a\u7684\u80cc\u666f\u8655\u7406\u3002\r\n\r\n      \u6709\u4e86\u6bcf\u500b\u5b57\u5728\u8072\u97f3\u8a0a\u865f\u4e2d\u7684\u8d77\u59cb\u4f4d\u7f6e\u53ca\u7d50\u675f\u4f4d\u7f6e\u5f8c\uff0c\u63a5\u4e0b\u4f86\u6211\u5011\u5fc5\u9808\u53bb\u53d6\u5f97\u87a2\u5e55\u756b\u9762\u4e2d\u6bcf\u500b\u6587\u5b57\u7684\u4f4d\u7f6e\u3002\r\n\u5176\u641c\u5c0b\u6587\u5b57\u4f4d\u7f6e\u7684\u6d41\u7a0b\u70ba:\r\n\r\nStep1. \u8a2d\u5b9a\u958b\u59cb\u641c\u5c0b\u7684\u4f4d\u7f6e\u70ba1.0\u5176\u4e2d1.0\u76841\u70ba\u6587\u5b57\u5728\u756b\u9762\u4e0a\u7684X\u5ea7\u6a19\uff0c1.0\u76840\u70ba\u6587\u5b57\u5728\u756b\u9762\u4e0a\u7684Y\u5ea7\u6a19\u3002\r\nStep2. \u5728\u87a2\u5e55\u756b\u9762\u4e2d\u63d2\u5165\u6211\u5011\u6240\u8981\u95b1\u8b80\u7684\u6587\u5b57\u5167\u5bb9\u3002\r\nStep3. \u5728\u6bcf\u6b21\u63d2\u5165\u6587\u5b57\u6642\u8a08\u7b97\u6bcf\u500b\u6587\u5b57\u662f\u7531\u591a\u5c11\u5b57\u5143\u6240\u69cb\u6210\u4f8b\u5982:\u82f1\u6587\u5b57word(\u5305\u542b4\u500b\u5b57\u5143)\u3001\u82f1\u6587\u5b57get(\u5305\u542b3\u500b\u5b57\u5143)\u7b49\u3002\r\nStep4. \u63d2\u5165\u6587\u5b57\u5f8c\u5f9e\u756b\u9762\u4f4d\u57401.0\u958b\u59cb\u641c\u5c0b\u6587\u5b57\u5728\u756b\u9762\u4e2d\u7684\u958b\u59cb\u4f4d\u7f6e\u3002\r\nStep5. \u5c07\u641c\u5c0b\u5230\u756b\u9762\u4e2d\u7684\u6587\u5b57\u8d77\u59cb\u4f4d\u5740\u548c\u6587\u5b57\u5b57\u5143\u505a\u52a0\u7e3d\u4f86\u7522\u751f\u6587\u5b57\u5728\u756b\u9762\u4e2d\u7684\u7d50\u675f\u4f4d\u7f6e\u3002\r\n\u4ee5\u4e0a\u6b65\u9a5f\uff0c\u5716\u793a\u65bc\u4e0b\u5217\u7db2\u5740:\r\nhttp://goo.gl/eutmtE\r\n\u6709\u4e86\u6587\u5b57\u5728\u756b\u9762\u4e2d\u7684\u8d77\u59cb\u4f4d\u7f6e\u548c\u7d50\u675f\u4f4d\u7f6e\u5f8c\u904b\u7528\u80cc\u666f\u9ad8\u4eae\u7684\u65b9\u5f0f\u5c07\u6587\u5b57\u986f\u793a\u51fa\u4f86\u3002\r\n\u5716\u793a\u65bc\u4e0b\u5217\u7db2\u5740:\r\nhttp://goo.gl/9OMDxS\r\n\u8a9e\u97f3\u548c\u6587\u5b57\u540c\u6b65\u5316\u7684\u904e\u7a0b\u70ba:\r\nStep1. \u63d2\u5165\u6587\u5b57\u65bc\u756b\u9762\u4e2d\u3002 \r\nStep2. \u641c\u5c0b\u756b\u9762\u4e2d\u6bcf\u500b\u6587\u5b57\u5728\u756b\u9762\u4e2d\u7684\u8d77\u59cb\u4f4d\u7f6e\u53ca\u7d50\u675f\u4f4d\u7f6e\u3002\r\nStep3. \u64ad\u653e\u6587\u5b57\u7684\u8a9e\u97f3\u5167\u5bb9\u3002\r\nStep4. \u64f7\u53d6\u8a9e\u97f3\u5167\u7684\u65b7\u9ede\u3002\r\nStep5. \u4ee5\u65b7\u9ede\u505a\u5224\u65b7\u3002\r\nStep6. \u7576\u65b7\u9ede\u7684\u4f4d\u7f6e\u5927\u65bc\u8a9e\u97f3\u8a0a\u865f\u8d77\u59cb\u4f4d\u7f6e\u6216\u5c0f\u65bc\u8a9e\u97f3\u8a0a\u865f\u7d50\u675f\u4f4d\u7f6e\u5247\u986f\u793a\u51fa\u6587\u5b57\u9ad8\u4eae\u7684\u80cc\u666f\uff0c\u7576\u65b7\u9ede\u7684\u4f4d\u7f6e\u5c0f\u65bc\u8a9e\u97f3\u8a0a\u865f\u8d77\u59cb\u4f4d\u7f6e\u6216\u5927\u65bc\u8a9e\u97f3\u8a0a\u865f\u7d50\u675f\u4f4d\u7f6e\u5247\u7e7c\u7e8c\u4fdd\u6301\u539f\u59cb\u7684\u6587\u5b57\u72c0\u614b\u3002\r\n\u4ee5\u4e0a\u6b65\u9a5f\uff0c\u5716\u793a\u65bc\u4e0b\u5217\u7db2\u5740:\r\nhttp://goo.gl/B2oNsZ\r\n\u7a0b\u5f0f\u5c55\u793a\u5f71\u7247\u7db2\u5740:\r\nhttps://www.youtube.com/watch?v=0EVeE42qBxU&feature=youtu.be\r\n\u66f4\u52a0\u8a73\u7d30\u4ecb\u7d39\u65bc\u4e0b\u5217\u7db2\u5740:\r\nhttp://changchaokai.blogspot.tw/\r\n\r\n\u2003\r\n", "talk_perm": "Don't record my talk", "language": "Mandarin", "author": "aw.81761109@gmail.com", "speech_type": "Regular Talk", "tags": "\u8a9e\u97f3\u5408\u6210\u3001\u8a9e\u97f3\u540c\u6b65\u6709\u8072\u66f8", "abstract": "\u672c\u7cfb\u7d71\u4e3b\u8981\u662f\u85c9\u52a9\u65bcGoogle\u7684\u8a9e\u97f3\u5408\u6210\u7684API\uff0c\u4f86\u5e6b\u52a9\u6211\u5011\u5c07\u6587\u5b57\u7684\u5167\u5bb9\u8f49\u63db\u6210\u8a9e\u97f3\uff0c\u518d\u904b\u7528\u8a9e\u97f3\u7d50\u5408\u6587\u5b57\uff0c\u642d\u914d\u4e0a\u6587\u5b57\u80cc\u666f\u7684\u8b8a\u5316\u4f86\u8868\u9054\u51fa\u540c\u6b65\u5316\u7684\u6548\u679c\u3002\u64f7\u53d6\u51fa\u8a9e\u97f3\u4e2d\u6bcf\u500b\u65b7\u9ede\u767c\u751f\u7684\u4f4d\u7f6e\uff0c\u8207\u6bcf\u500b\u5b57\u5728\u8a9e\u97f3\u8a0a\u865f\u4e2d\u7684\u8d77\u59cb\u4f4d\u7f6e\u53ca\u7d50\u675f\u4f4d\u7f6e\uff0c\u4f86\u63a8\u7b97\u8a9e\u97f3\u7684\u767c\u97f3\u958b\u59cb\u6642\u9593\u53ca\u767c\u97f3\u7d50\u675f\u6642\u9593\u4f86\u505a\u5224\u65b7\uff0c\u518d\u53d6\u5f97\u87a2\u5e55\u756b\u9762\u4e2d\u6bcf\u500b\u6587\u5b57\u7684\u4f4d\u7f6e\u904b\u7528\u80cc\u666f\u9ad8\u4eae\u7684\u65b9\u5f0f\u5c07\u6587\u5b57\u986f\u793a\u51fa\u4f86\u3002\r\nAbstract(PDF)\u65bc\u4e0b\u5217\u7db2\u5740:\r\nhttp://goo.gl/b39POS", "additional_info": "http://www.tutorialspoint.com/python/python_gui_programming.htm\r\nhttp://docs.python-requests.org/en/latest/\r\nhttp://pygame.org/news.html\r\nhttps://docs.python.org/3/library/tokenize.html\r\nhttps://github.com/leo-labs/gTTS\r\nhttp://tkinter.unpythonic.net/wiki/tkFileDialog\r\nhttps://bitbucket.org/lazka/mutagen\r\n", "reviews": [{"comment": "- I didn't see any interesting usage of python. \r\n- Just an application of Google API. \u4e5f\u8a31\u6709\u4f7f\u7528pygame, \u4f46\u4e26\u4e0d\u662f\u5f88\u591a\u3002", "reviewer": "AlfredW", "rank": 2}, {"comment": "\u96d6\u7136\u5f88\u7c21\u55ae\uff0c\u4e0d\u904e\u5982\u679c\u914d\u5408\u5be6\u969b Demo \u7684\u8a71\u53ef\u4ee5\u770b\u7684\u51fa\u4f86 Python \u53ef\u4ee5\u5f88\u8f15\u6613\u7684\u628a\u9019\u4ef6\u4e8b\u60c5\u505a\u51fa\u4f86\uff0c\u6211\u60f3\u5c0d\u65bc\u4e00\u4e9b\u521d\u5b78\u8005\u4f86\u8aaa\u6703\u89ba\u5f97\u633a\u6709\u8da3\u7684\u3002", "reviewer": "andy", "rank": 3}, {"comment": "Interesting.", "reviewer": "stanley", "rank": 4}, {"comment": "I see the future of our world.", "reviewer": "yudalin", "rank": 5}, {"comment": "I see the potential of your project on the topic of \"Education.\" Teachers could transform their teaching materials into a \"Handicap Friendly\" way very easily even though they are not a professional programmer. I think the application that is able to make technology become a big help would be appreciated.  Through it's pity that python play a minor role in your, I still think your topic is attractive, and would be more attractive If you can provide more use-case how to combine this technique to the real life. ", "reviewer": "Yen", "rank": 4}, {"comment": "It gives an example of Python standard library \"tokenize\", and Python application in audio.", "reviewer": "apua", "rank": 4}], "id": 58, "duration": "40 mins", "title": "\u4ee5\u96f2\u7aef\u8a9e\u97f3\u5408\u6210\u6280\u8853\u70ba\u57fa\u790e\u7684\u97f3\u6587\u540c\u6b65\u6709\u8072\u66f8\u4e4b\u5efa\u7acb\u7cfb\u7d71", "decision": "Accepted", "slide_perm": "Don't publish my slide", "audience_level": "Introduction"}, {"description": "What problem do we meet?\r\n    Describe the problem we meet when we want to deploy software. \r\n    Compare with the old technique, we need a more efficient way to deploy software.\r\n\r\nWhat is Docker?\r\n    Introduce the concept behind docker. \r\n    Docker's Client/Server architecture & some simple usage\r\n    Describe how docker improve our workflow\r\n    \r\nHow to use docker?\r\n    Some simple command\r\n    Dockerfile\r\n    DockerHub\r\n\r\nDemo\r\n    Deploy a simple python web app\r\n\r\nDocker Ecosystem\r\n    Docker Machine\r\n    Docker Swarm\r\n    Docker Compose\r\n    SocketPlane \r\n    kubernetes", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "waitingkuo0527@gmail.com", "speech_type": "Regular Talk", "tags": "Docker, Web, Devops", "abstract": "Docker is one of the most popular project in these years. In this talk, I'd like to show you what is docker and how to use docker to improve our workflow. ", "additional_info": "I'm the main organizor of Docker.Taipei. I've given many talks in Docker.Taipei Meetups.\r\nhttp://www.meetup.com/Docker-Taipei/\r\n\r\nI've also given some talks about Docker in Taipei.py\r\nhttp://www.meetup.com/Taipei-py/events/218680274/\r\n\r\nI was the winner of Docker Global Hackathon and gave a talk in Docker Europe in Netherland\r\nhttp://blog.docker.com/2014/11/announcing-docker-global-hack-day-2-winners/", "reviews": [{"comment": "- Entry Level. Good for those who has no experience with dockers.\r\n- And seems it's the only one topic which is focused on docker.", "reviewer": "AlfredW", "rank": 3}, {"comment": "It seems that this talk will mainly focus on docker but less Python. Although docker is a hot topic last year, but I think there's enough entry level material on the web now. ", "reviewer": "andy", "rank": 1}, {"comment": "Look like it is about docker but less about Python", "reviewer": "apua", "rank": 1}], "id": 60, "duration": "40 mins", "title": "Docker for Python Developer", "decision": "Rejected", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "Python \u662f\u57fa\u65bc imperative \u7684\u8a9e\u8a00, \u4f46\u4ecd\u53c3\u8003 functional \u63d0\u4f9b\u4e86\u4e00\u4e9b programming \u4e0a\u7684\u652f\u63f4. \u9019\u662f\u4e00\u5927\u798f\u97f3, \u4e5f\u662f\u5f88\u597d\u7684\u6210\u9577\u65b9\u5411, \u4f46\u5f80\u5f80\u6703\u6709\u4eba\u653b\u8a10 Python \u5728 functional programming \u7684\u4e0d\u8db3.\r\n\r\nImperative programming \u4e0d\u5229\u65bc\u62bd\u8c61\u5316\u7a0b\u5f0f\u7d50\u69cb, \u9019\u88e1\u53ef\u4ee5\u8209\u51fa\u6578\u500b\u4f8b\u5b50\u4e26\u89e3\u91cb Python \u5728\u9019\u7a2e programming paradigm \u4e2d\u5bb9\u6613\u767c\u751f\u7684\u8b2c\u8aa4.\r\n\r\n\u800c\u5728 functional programming \u65b9\u9762, Python \u6703\u88ab\u6307\u8cac \"\u6c92\u6709 type checking\", \"\u6c92\u6709 tail recursion\", \"\u4e0d\u5229\u65bc optimization\", \u4e14\u4e8b\u5be6\u4e0a Python \u4e5f\u5e38\u56e0\u63d0\u4f9b\u4e86 generator / iterator \u5c31\u88ab\u8aa4\u4ee5\u70ba\u9069\u5408\u904b\u7528 lazy evaluation....\u9019\u4e9b\u554f\u984c\u5728 PEP \u6216 Python document \u5176\u5be6\u90fd\u6709\u8aaa\u660e, \u503c\u5f97\u4e00\u4e00\u6f84\u6e05.\r\n\r\n\u6700\u5f8c\u6211\u5011\u6703\u767c\u73fe Python \u59cb\u7d42\u6c92\u6709\u504f\u96e2\u521d\u8877. Python \u4ecd\u7136\u662f\u8457\u91cd\u52d5\u614b\u578b\u5225\u7684\u8a9e\u8a00, \u4ecd\u7136\u8ffd\u6c42\u5e73\u7de9\u7684\u5b78\u7fd2\u66f2\u7dda, \u55ae\u7d14\u7684\u8a9e\u6cd5, \u9ad8\u53ef\u8b80\u6027; \u6216\u8a31\u9019\u6703\u5c0d\u512a\u5316\u7522\u751f\u56f0\u96e3, \u4e0d\u904e\u76f8\u4fe1 Python \u4e00\u6a23\u53ef\u4ee5\u7576\u6210\u5b78\u7fd2\u4e0d\u540c programming paradigm \u7684\u8df3\u677f, \u6216\u8cab\u5fb9\u81a0\u6c34\u8a9e\u8a00\u7684\u7279\u6027\u8207\u5176\u4ed6\u7a0b\u5f0f\u7d50\u5408.\r\n\r\n\u672c\u6b21 talk \u5c07\u8457\u91cd\u5728 Python3 \u800c\u5c11\u8a0e\u8ad6 Python2 \u7684\u8a9e\u6cd5\u548c\u8a9e\u8a00\u7279\u6027.", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "Apua.A.Aa@gmail.com", "speech_type": "Regular Talk", "tags": "functional programming", "abstract": "\u53c3\u8003 declarative programming, \u91cd\u65b0\u5be9\u8996\u4f7f\u7528 Python \u8a9e\u8a00\u89e3\u6c7a\u554f\u984c\u6642, \u53ef\u80fd\u906d\u9047\u7684\u554f\u984c (\u4f8b\u5982\u526f\u4f5c\u7528), \u63d0\u51fa\u8a9e\u8a00\u7684\u7279\u6027\u8207\u512a\u52e2, \u8207\u5982\u4f55\u64b0\u5beb\u6bd4\u8f03\u55ae\u7d14\u5c11\u51fa\u932f. \u4e26\u65bc\u6700\u5f8c\u7e3d\u7d50 Python \u5b78\u7fd2\u512a\u52e2\u8207\u672a\u4f86\u5efa\u8b70\u5927\u5bb6\u6ce8\u610f\u7684\u65b9\u5411.", "additional_info": "Programming Paradigm:\r\n    http://en.wikipedia.org/wiki/Programming_paradigm\r\n\r\nFunctional programming with Python:\r\n    - http://anandology.com/python-practice-book/functional-programming.html\r\n    - https://thenewcircle.com/static/bookshelf/python_fundamentals_tutorial/functional_programming.html\r\n    - https://docs.python.org/3/howto/functional.html\r\n    - http://www.ibm.com/developerworks/library/l-prog/\r\n    - http://kachayev.github.io/talks/uapycon2012/#/7\r\n\r\nThinking Functionally with Haskell\r\n    http://assets.cambridge.org/97811070/87200/toc/9781107087200_toc.pdf\r\n\r\nThe Python trade-off\r\n    - http://neopythonic.blogspot.com/2009/04/tail-recursion-elimination.html\r\n    - http://stackoverflow.com/questions/1017621/why-isnt-python-very-good-for-functional-programming\r\n\r\nUsing :code:`list` is faster than :code:`tee`:\r\n    https://docs.python.org/3/library/itertools.html#itertools.tee\r\n\r\n", "reviews": [{"comment": "\u770b\u5f97\u51fa\u4f86\u8b1b\u8005\u60f3\u8981\u50b3\u9054\u4e00\u4e9b\u7406\u5ff5\uff0c\u53ea\u662f\u4e0d\u592a\u78ba\u5b9a\u662f\u54ea\u4e9b\u3002", "reviewer": "tjw", "rank": 4}, {"comment": "* The topic is sexy all the time.\r\n* But the speaker might not have clear thoughts to deliver his insight on this.", "reviewer": "drakeguan", "rank": 2}, {"comment": "This topic should be interesting,\r\nneed to talk to author to enrich his talk.", "reviewer": "stanley", "rank": 4}, {"comment": "Functional programming has been a very charming term these days. I am very interested how to code in a functional way as a python programmer. And the advantage and disadvantage of the functional code style in python would be a attractive point of your talks.", "reviewer": "Yen", "rank": 4}], "id": 27, "duration": "40 mins", "title": "....when thinking functionally with Python", "decision": "Undecided", "slide_perm": "CC-BY-NC-SA", "audience_level": "Extreme"}, {"description": "Information Extraction is task of automatically extract specific messages from large amounts of data, in real application, we can quickly obtain the related roles or time of the events from a lot of data and collect useful business intelligence.\r\n\r\nIn general, Conditional Random Fields model has good performance on information extraction task, if we want to build the CRFs model to fit our custom demand, it need to provide a corpus that prior annotated by ourself, but the annotation task usually spend a lot of time, so we need a convenient annotation tool.\r\n\r\nTherefore, this talk will introduce an easy to use annotation tool, BRAT, during this talk will give some examples such as upload the corpus, annotate the custom entities from corpus, transform the format \u2026 etc.\r\n\r\nAfter obtain the annotated corpus, the next work is pre-processing and feature generation, this talk will present how to use pandas and scikit-learn to generate the training feature, such as Part of Speech (PoS) tags, n-gram and combine them for each traning word.\r\n\r\nFinally, this talk will present how to use pyCRFsuite to binding python and CRFsuite, traning our custom Conditional Random Fields model to labeling the text data, the labeling result is like Apple/Organization, Jobs/Person. After the labeling step, we will give an example about aggregation and document clustering on these labeled text by pandas and scikit-learn.", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "sk413025@gmail.com", "speech_type": "SciPy Talk (English Only)", "tags": "machine learning, natural language processing, data analysis", "abstract": "This talk will present a named entity recognition (NER) system for extracting attributes and values, like person, company, place or time,  from various of text data. I will introduce how to combine several python tools to build this system. First, use a python written annotation tool BRAT to create a custom annotated corpus. Second, use python to link CRFsuite, training a Conditional Random Fields model to labeling our list of text data, the labeling result will be further analyzed by pandas and scikit-learn. ", "additional_info": "BRAT\r\nhttp://brat.nlplab.org/index.html\r\nCRFsuite\r\nhttp://www.chokkan.org/software/crfsuite/\r\nMy previous work\r\n1. kaggle sentiment analysis\r\nhttp://nbviewer.ipython.org/github/sk413025/ncku_sentiment/blob/master/sparse_matrix.ipynb\r\n2. pandas aggregation\r\nhttp://nbviewer.ipython.org/github/sk413025/misc/blob/master/TAAI/Untitled0.ipynb", "reviews": [{"comment": "Honestly language sentiment analysis is not of my field. Though this could be a good example of data extraction with python.", "reviewer": "yuanchao", "rank": 3}, {"comment": "It is not clear to the reviewer what subject the proposer wants to deal with.  It is good if the talk will introduce a fair amount of data-analytic Python packages as described.", "reviewer": "yungyuc", "rank": 2}, {"comment": "OK as a SciPy talk. Building toolchain for data analysis with Python is contributing topic. The abstract does not show practical problems/solutions.", "reviewer": "whosaysni", "rank": 3}], "id": 61, "duration": "40 mins", "title": "Information extraction with Python", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "Reinforcement Learning has been a lasting topic in machine learning for more than 30 years, though several approaches were invented but improvements are limited. The reason is because the learning result depends largely on feature selection, which varies a lot in different types of games. With the help of deep learning, algorithms can find hidden features without the need of constructing them manually.\r\nThe Theano library is ideal for quick prototyping of deep learning algorithms, and the Pylearn2 library is a collection of ready-to-use machine learning algorithms and datasets. With the help of these libraries, deep learning research has become much easier, we can not conduct experiments instantly without having to reimplement algorithms.", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "teweishieh@gmail.com", "speech_type": "SciPy Talk (English Only)", "tags": "theano, machine learning, reinforcement learning, artificial intelligence", "abstract": "Google Deep Mind has proposed a method of Deep Q-Learning, which utilized convolutional neural networks to enhance the process of the conventional Q-Learning algorithm. The result of this new algorithm is astonishing, it only takes raw streaming video and score output from the Atari game environment to learn a policy that can outperform some human players in various games.  In this talk I aimed to reconstruct the experiments stated in their paper using Theano and Pylearn2 (The original experiments was build with Torch7, which was written in Lua), and hopefully I can extend this algorithm to more complex strategy type games.", "additional_info": "Playing Atari with Deep Reinforcement Learning\r\nhttp://arxiv.org/pdf/1312.5602v1.pdf\r\n\r\n", "reviews": [{"comment": "Though the original paper is to demonstrate an implementation of q-learning, it's good to have the same experiment conducted with a ready-to-use python library.", "reviewer": "yuanchao", "rank": 3}, {"comment": "It will be a good introduction to the application of theano and Pylearn 2, as well as machine learning.", "reviewer": "yungyuc", "rank": 4}, {"comment": "Fits as a SciPy talk and the topic is attractive. The author's work seems to be unfinished at the moment so the performance of the talk is not visible. ", "reviewer": "whosaysni", "rank": 4}], "id": 62, "duration": "40 mins", "title": "Python and Reinforcement Learning", "decision": "Rejected", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "What is sentiment analysis?\r\nWhy do we need sentiment analysis?\r\nSome background knowledge\r\n    stem\r\n    stop words\r\n    tokenizor\r\n    lexicon\r\n    naive bayes classifier\r\nNLTK\r\n    What is NLTK?\r\n    Some simple usage for NLTK\r\n    How to use NLTK to do the sentiment analysis\r\nDemo\r\n    Ask attendees to reply something to my tweet. Let's see which is positive and which is negtive", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "waitingkuo0527@gmail.com", "speech_type": "Regular Talk", "tags": "Sentiment analysis, opinion mining, ipython, twitter, text mining", "abstract": "Sentiment analysis is useful, especially for the social media. In this talk, I'd like to introduce some background knowledge and how to use NLTK to do the sentiment analysis. Finally, i'll give a demo for the sentiment analysis for Twitter.\r\n\r\nI'll keep the theory part as easy as possible!", "additional_info": "I'm the speaker of \"Data analysis in Python\" in PyCon Apac 2014.\r\nhttps://tw.pycon.org/2014apac/en/speakers/12/\r\n\r\nWould like to introduce something more advance this time.", "reviews": [{"comment": "Many participators might find this topic interesting. Don't know whether there are any thing beyond naive bayes classifier and don't know Chinese language will be handled in this talk.", "reviewer": "tjw", "rank": 4}, {"comment": "Interesting Topic. I hope the topic will cover sentiment analysis  in Chinese", "reviewer": "andy", "rank": 4}, {"comment": "Interesting.", "reviewer": "stanley", "rank": 4}], "id": 79, "duration": "40 mins", "title": "Sentiment Analysis by NLTK", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "Long before SoftLayer was a cloud service provider, it was a group of keen developers. One day our developers set out to create the modular, scalable infrastructure services they wanted in order to develop the cloud solution of their dreams. So SoftLayer started with an API that provides precision control and now is constantly working at finding ways to put more tools at developers\u2019 fingertips.\r\n\r\nJoin us in this session as SoftLayer Experts takes the audience though SoftLayer\u2019s journey and his experiences in working on the open application programming interface (API) provides system-to-system access with more than 3,000 documented methods across 180 discrete services.\r\n \r\nBen Cheng, will join the session and talk about how Oursky is building its application on the cloud.  He will also give you advice on how to build an effective cloud backend for your application development and implementations. ", "talk_perm": "Don't record my talk", "language": "English", "author": "", "speech_type": "Regular Talk", "tags": "cloud", "abstract": "Long before SoftLayer was a cloud service provider, it was a group of keen developers. One day our developers set out to create the modular, scalable infrastructure services they wanted in order to develop the cloud solution of their dreams. So SoftLayer started with an API that provides precision control and now is constantly working at finding ways to put more tools at developers\u2019 fingertips.\r\n\r\nJoin us in this session as SoftLayer Experts takes the audience though SoftLayer\u2019s journey and his experiences in working on the open application programming interface (API) provides system-to-system access with more than 3,000 documented methods across 180 discrete services.\r\n \r\nBen Cheng, will join the session and talk about how Oursky is building its application on the cloud.  He will also give you advice on how to build an effective cloud backend for your application development and implementations. ", "additional_info": "", "reviews": [], "id": 111, "duration": "40 mins", "title": "How developers are building applications on the cloud", "decision": "Accepted", "slide_perm": "Don't publish my slide", "audience_level": "Introduction"}, {"description": "Use the SoftLayer API to provision servers, configure SSH keys, and manage nodes in a Docker managed application environment. Learn about Salt configuration management, Docker applications, and the SoftLayer command line utility. Then, build a blog server using these tools.", "talk_perm": "Don't record my talk", "language": "English", "author": "", "speech_type": "Workshop", "tags": "cloud", "abstract": "Use the SoftLayer API to provision servers, configure SSH keys, and manage nodes in a Docker managed application environment. Learn about Salt configuration management, Docker applications, and the SoftLayer command line utility. Then, build a blog server using these tools.", "additional_info": "", "reviews": [], "id": 112, "duration": "Half Day", "title": "Managing Deployments Using the SoftLayer API, Docker and Salt", "decision": "Undecided", "slide_perm": "Don't publish my slide", "audience_level": "Extreme"}, {"description": "Organizing code is not a easy thing, but there still are some principles to follow. This talk will introduce you to speaker\u2019s own secret principles and detailed examples. Wish it make our code better.", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "mosky.liu@pinkoi.com", "speech_type": "Regular Talk", "tags": "organizing, naming, spacing, ordering, practicing, better, literature programming", "abstract": "I will cover the three basic parts: 1. naming, 2. spacing, and 3. ordering.\r\n\r\nIn the first part, the naming is definitely the most important thing in coding. We have million variables, but they can be classified into two groups: a. functions and b. data. Both have their own particular rules to follow. For the function part, we have performance hint, return-value hint, etc. For the data part, we have type hint, structure hint, etc.\r\n\r\nIn the second part, the spacing is also important, but sometimes programmers just ignore it. I will discuss the spacing on line-level, paragraph-level, and section-level.\r\n\r\nIn the final part, actually most programmers even didn\u2019t think of it, but I do have some advices for how to order your code.\r\n\r\nCombine the three parts to make our code better.", "additional_info": "", "reviews": [{"comment": "* I doubt this talk does not cover enough scope for organizing codes.\r\n* The abstract looks quite intuitive and subjective.", "reviewer": "drakeguan", "rank": 2}, {"comment": "Lets conquer PEP8! Clean code and mind are very fundamental of Python. ", "reviewer": "keitheis", "rank": 4}, {"comment": "love to see this kind of issue from an experienced python developer's aspect. Would be perfect if the speaker can cover some PEP8 official guide along with his/her personal suggestions which don't explain clearly in the given abstract.", "reviewer": "jin", "rank": 3}, {"comment": "Everybody knows source code organizing is important and we have the guide line in PEP8.\r\nBut from the abstract, I didn't see any bright spot of the talk.\r\n", "reviewer": "stanley", "rank": 2}, {"comment": "I think it is a great topic,   but need more charming description", "reviewer": "tim", "rank": 3}], "id": 64, "duration": "40 mins", "title": "Organizing Code in a Better Way", "decision": "Rejected", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "gRPC is a new high performance, open source, general RPC framework that uses the HTTP/2 standard. The gRPC framework allows you to create small scalable services that fit well into a service oriented architecture. Kubernetes is a cluster manager that allows you to create services that can be scaled easily. Service oriented architecture is a key part of how many companies, like Google, operate their infrastructure to provide robust, and highly available services that operate at a consistently high level of performance for end users.\r\n\r\nIn this talk I will talk about how to use Python to create a scalable gRPC service and then how to actually manage and scale it using the Kubernetes cluster manager. I will cover the basic parts and concepts of each technology and how to use the provided tools. As I explain the concepts, I will walk through building a sample service and illustrate how to scale it and communicate with it using a simple client.\r\n\r\nI believe this talk is important because it makes use of new technologies and how Python can be used with them. With many new languages coming out, Python's future is uncertain but I think that the tools and ease of development with Python still make it a great language for server-side development.\r\n\r\nOutline:\r\n\r\n1. gRPC concepts\r\n   a. HTTP/2\r\n   b. Protocol buffers\r\n2. The Python gRPC tools and API\r\n3. Creating the Python server\r\n   a. Creating the API stubs.\r\n   b. Implementing the logic\r\n   c. Running the app server\r\n   d. Containerizing the server with Docker \r\n4. Kubernetes concepts\r\n   a. Cluster\r\n   b. Pod\r\n   c. ReplicationController\r\n   d. Service\r\n5. Running the service\r\n   a. Defining a service\r\n   b. Running the service in Kubernetes\r\n   c. Scaling up/down\r\n6. Accessing the service\r\n7. Runtime environments", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "ianlewis@google.com", "speech_type": "Regular Talk", "tags": "grpc, kubernetes", "abstract": "gRPC and Kubernetes are two new technologies that make it easy to manage robust, highly available web services that talk to each other using a fast, flexible protocol. Python is well suited to building the logic for these kind of services. Python is a flexible language that can be highly efficient when tuned properly and allows you to make use of the extensive set of Python libraries that are publicly available.\r\n\r\nIn this talk I will talk about how to combine these technologies and use Python to create a scalable gRPC service and then how to actually manage and scale it using the Kubernetes cluster manager. ", "additional_info": "gRPC homepage: http://www.grpc.io/\r\nKubernetes homepage: http://kubernetes.io/\r\n", "reviews": [{"comment": "Thanks for the enlightenment of the future of Python :)", "reviewer": "liang2", "rank": 4}, {"comment": "Cool stuff and could help Pythonist a lot..", "reviewer": "stanley", "rank": 4}, {"comment": "Sounds interesting about gRPC, HTTP2, cluster, and Python!", "reviewer": "keitheis", "rank": 4}, {"comment": "Google is our Gold Sponsor (not confirmed yet, because google is asking workshop, but we don't have capacity for workshop anymore)", "reviewer": "lucemia", "rank": 5}], "id": 65, "duration": "40 mins", "title": "Building a Scalable Python gRPC Service using Kubernetes", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "gitfs is an open-source[1] filesystem which was designed to bring the full powers of Git to everyone, no matter how little they know about versioning. A user can mount any repository and all the his changes will be automatically converted into commits. gitfs will also expose the history of the branch you\u2019re currently working on by simulating snapshots of every commit.\r\n\r\ngitfs is useful in places where you want to keep track of all your files, but at the same time you don\u2019t have the possibility of organizing everything into commits yourself. A FUSE filesystem for git repositories, with local cache.\r\n\r\nThe prerequisites for this talk are:\r\n+  Good understanding of how Git works and familiarity with the Git internals\r\n+  Basic understaning of Operating Systems concepts", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "manu@presslabs.com", "speech_type": "Regular Talk", "tags": "storage, git, git-internals, concurrency, caching, infrastructure, libgit2, pygit2", "abstract": "In this talk we will take a look at some of the crucial aspects involved in building a reliable FUSE filesystem, we will explain some of the design decisions and trade-offs that we made, the steps that we took in handling effectively the git objects (http://git-scm.com/book/en/v2/Git-Internals-Git-Objects), what testing methods we have used and we will also share the most important lessons learned while building it.", "additional_info": "[1] You can find the source here - https://github.com/PressLabs/gitfs and more details here - http://www.presslabs.com/gitfs/.", "reviews": [{"comment": "Very interesting topic with real practice and trade-off made, I'd love to see it.", "reviewer": "keitheis", "rank": 5}, {"comment": "there are lots of interesting technique  considerations on this topic. Not sure how much this talk is going to cover(what is there is a git directory inside the filesystem), but definitely a right topic.", "reviewer": "tjw", "rank": 4}, {"comment": "It definitely is an advanced topic and worth to listen.", "reviewer": "stanley", "rank": 5}, {"comment": "Interesting topic, how could I miss this session?", "reviewer": "sosorry", "rank": 5}, {"comment": "* I will give it 5 if it is based on mercurial.", "reviewer": "drakeguan", "rank": 4}, {"comment": "Interesting \uff01", "reviewer": "c3h3", "rank": 5}], "id": 66, "duration": "40 mins", "title": "GitFs - Building a Filesystem in Python", "decision": "Rejected", "slide_perm": "CC-BY-NC-SA", "audience_level": "Extreme"}, {"description": "Outline:\r\n\r\n* Introduction to Discrete Event Simulation and SimPy\r\n\r\n* What DES can do for us in IC design flow?\r\n** Another simulator? What are you talking about?\r\n** \r\n* Examples\r\n** Network Queue\r\n** CPU Bus Transaction\r\n\r\n* Concluding Remarks\r\n", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "alberthuang314@gmail.com", "speech_type": "SciPy Talk (English Only)", "tags": "IC design, SimPy, discrete-event simulation, queuing", "abstract": "More than ten years ago, researchers in network/queuing field often\r\nneed to build their own simulator from scratch. Then there comes some\r\nsimulation packages, e.g. ns-2 or its sucessor ns-3, which is built\r\nwith C++ and Python. Often, we need to build our own tool to tackle\r\nsome problems that are not fully suited into these simulators, then\r\nbuilding a simulator from scratch is often a frustrating process. The\r\nauthor has built three simulators, one in C, one in Objective-C, and\r\nfinally a module in ns-2. By this frustrating experience, the author\r\ntried to search a simulation package that is easy to use\r\nafter graduating from school, and SimPy arises from the horizon. In\r\nthis talk, the author will briefly introduce Discrete-Event Simulation\r\nand SimPy, then gives some examples on how to use SimPy to ease IC\r\ndesign problems. Hope everybody could enjoy the power of Python and SimPy!\r\n", "additional_info": "", "reviews": [{"comment": "Good for an example of simulation with python in industrial. But not sure of this is attractive to the general audience.", "reviewer": "yuanchao", "rank": 2}, {"comment": "It is good to see application and introduction to the powerful SimPy tool in the conference, but the abstract didn't draw a clear link how the tool is helping IC design process.", "reviewer": "yungyuc", "rank": 3}, {"comment": "OK as a SciPy talk. Introductory/sharing-experience talk that would rather suited to regular track/LT. ", "reviewer": "whosaysni", "rank": 3}], "id": 68, "duration": "40 mins", "title": "Using SimPy to Build In-house Tools to Tackle Down-to-earth Queuing Problems", "decision": "Rejected", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "Coding Style Guide\r\n- \u4ecb\u7d39 PEP8 \u53ca Google Python Style Guide \u6240\u5efa\u610f\u7684\u98a8\u683c\u3002\r\n- \u5206\u6790\u6bcf\u9805\u98a8\u683c\u5176\u80cc\u5f8c\u7684\u539f\u56e0\u4ee5\u53ca\u53c3\u8003\u5be6\u969b\u4f8b\u5b50\u3002\r\n- Style \u4e26\u975e syntax\uff0c\u6709\u4e9b\u60c5\u6cc1\u9084\u662f\u9700\u8981\u6253\u7834\u539f\u5247 (e.g.: Python Standard Library - logging)\u3002Syntax \u662f\u6b7b\u7684\uff0c\u800c style \u662f\u6d3b\u7684\u3002\r\n\r\n\u5de5\u5177\u7684\u4f7f\u7528\r\n- \u5982\u4f55\u5229\u7528\u7de8\u8f2f\u5668\u5e6b\u4f60\u8f49\u63db/\u6aa2\u67e5 tab\u3002\r\n- \u5229\u7528 pylint \u7b49\u5de5\u5177\u6aa2\u67e5 coding style\u3002\r\n", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "darkgerm@gmail.com", "speech_type": "Regular Talk", "tags": "coding style, PEP8", "abstract": "Beautiful is better than ugly.\r\nReadability counts.\r\n\r\n\u5982\u4f55\u5beb\u51fa\u7a0b\u5f0f\u56fa\u7136\u91cd\u8981\uff0c\u5982\u4f55\u5c07\u7a0b\u5f0f\u5beb\u7684\u6f02\u4eae\u3001\u6709\u53ef\u8b80\u6027\u3001\u6613\u7dad\u8b77\u66f4\u662f\u91cd\u8981\u3002\u4e0d\u597d\u7684\u98a8\u683c(coding style)\uff0c\u4e0d\u50c5\u5e38\u6703\u8b93\u672a\u4f86\u7684\u4f60\u770b\u4e0d\u61c2\uff0c\u4e5f\u5e38\u6703\u8b93\u4f60\u7684\u968a\u53cb\u62b1\u6028\u9023\u9023\uff0c\u751a\u81f3\u53ef\u80fd\u662f\u5f15\u8d77 bug \u7684\u91cd\u8981\u539f\u56e0\uff01\r\n\r\n\u672c\u6f14\u8b1b\u5c07\u6703\u4ee5 Python \u5b98\u65b9\u5efa\u610f\u7684\u98a8\u683c (PEP8) \u53ca Google \u5efa\u610f\u7684\u98a8\u683c (Google Python Style Guide) \u70ba\u57fa\u790e\uff0c\u4ecb\u7d39\u5982\u4f55\u5c07 code \u5beb\u7684\u66f4\u6f02\u4eae\u3001\u66f4\u5177\u53ef\u8b80\u6027\u3002\r\n", "additional_info": "PEP 8 - Style Guide for Python Code\r\nhttps://www.python.org/dev/peps/pep-0008/\r\n\r\nGoogle Python Style Guide\r\nhttps://google-styleguide.googlecode.com/svn/trunk/pyguide.html\r\n", "reviews": [{"comment": "The idea is good and beneficial for general audience, but given the talk\r\nlength, current topic lacks originality which might be better for a lightning\r\ntalk.", "reviewer": "liang2", "rank": 2}, {"comment": "It's more suit for lightning talk or workshop.", "reviewer": "stanley", "rank": 1}, {"comment": "Should be fun to see it in lightning talk.", "reviewer": "keitheis", "rank": 1}, {"comment": "I believe this might be too intuitive as a talk in an annual conference. Further, the referenced materials are way too famous. I believe most of attendants have (or will) read that once.", "reviewer": "drakeguan", "rank": 1}, {"comment": "it is very fundamental.  I think community may need this kind of talk. ", "reviewer": "tim", "rank": 3}], "id": 70, "duration": "40 mins", "title": "Writing Beautiful Code - Python Coding Style Guide", "decision": "Rejected", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "Sphinx provides autodoc feature that generate document from docstring in your python sources.\r\nThe docstring that contains description and example of the use of function written near the program, makes doc easy to update.\r\nIn addition, the output of the Sphinx will make you understand what to write in docstring. As a result, this will improve your motivation of doc writing.\r\n\r\nTo use the autodoc, you must specify python modules to automodule directive one by one. This is a tedious task, hoswever autosummary extension automate this task.\r\nIn most cases, once developers have developed the API, you only need to run the make html of Sphinx, you get a nicely formatted document.\r\n\r\nSphinx also has coverage and doctest extentions.\r\nThese support writing the documentation to work with autodoc.\r\nThis allow you to check the APIs that have not been documented or you can verify each doctest part is correct or not.\r\n\r\nIf you use such autodoc-related extensions, you can create a Sphinx API documentation in the following procedure.\r\n\r\n1. make coverage; you can get the APIs that have not been documented.\r\n2. Write docstrings that includes the doctest format how to use the API.\r\n3. make doctest; you can verify each doctest part is correct or not.\r\n4. make html; you can generate the HTML or your favorite format.\r\n\r\nIn this session, I'll explain a documentation procedure that uses with sphinx autodoc, autosummary, coverage and doctest extensions.\r\n\r\n\r\nOutline:\r\n\r\n* Self introduction (2 min)\r\n\r\n* Sphinx introduction (2 min)\r\n\r\n  * What is Sphinx?\r\n  * Sphinx examples\r\n\r\n* Have you written API docs for your code? (2 min)\r\n\r\n  * I don't know what/where should I write.\r\n  * Docstrings is needed? Are there some specific format?\r\n\r\n* Getting start Sphinx (2 min)\r\n\r\n  * How to install Sphinx\r\n  * How to start a Sphinx project\r\n\r\n* Generate API docs from your python code (5 min)\r\n\r\n  * setup autodoc extension\r\n  * write docstrings for yuor python module\r\n  * \"automodule & make html\" will generate API docs from python code\r\n  * autodoc pros & cons: docs for many modules\r\n\r\n* Listing APIs automatically (5 mins)\r\n\r\n  * setup autosummary extension\r\n  * how to use autosummary directive\r\n  * no more autodoc directive\r\n\r\n* Discovering undocumented APIs (5 min)\r\n\r\n  * setup coverage extension\r\n  * make coverage\r\n\r\n* Detect deviations of the impl and doc (5 min)\r\n\r\n  * setup doctest extension\r\n  * make doctest\r\n\r\n* Overall picture, tips, Q&A (10 min)\r\n\r\n  * Overall picture of the process\r\n  * Options for autodoc\r\n  * translate them into other langs\r\n\r\n\r\n* Target:\r\n  - Python programmer who is struggling with documentation.\r\n  - Python library author who want to generate API docs automatically.\r\n  - Python library author who want to create a clear documentation which contains python snippets.\r\n", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "shimizukawa@gmail.com", "speech_type": "Regular Talk", "tags": "sphinx, documentation, autodoc, ", "abstract": "Using the automated documentation feature of Sphinx, you can make with ease the extensive documentation of Python program.\r\nYou just write python function documents (docstrings), Sphinx organizes them into the document, can be converted to a variety of formats.\r\nIn this session, I'll explain a documentation procedure that uses with sphinx autodoc and autosummary extensions.\r\n", "additional_info": "* http://sphinx-doc.org/ext/autodoc.html\r\n* http://sphinx-doc.org/ext/autosummary.html\r\n* http://sphinx-doc.org/ext/coverage.html\r\n* http://sphinx-doc.org/ext/doctest.html\r\n", "reviews": [{"comment": "Sphinx is a sophisticated documentation tool and it is important to use the autodoc correctly. Happy to see Sphinx team to talk on this :)", "reviewer": "liang2", "rank": 4}, {"comment": "Sphinx is always a welcome topic in PyCon. Given by experienced speaker is even attractive!", "reviewer": "keitheis", "rank": 5}, {"comment": "Sphinx is a good, popular project and also worth to learn.\r\nBesides, according to the description of the proposal,\r\nthe speaker should have well prepare for the talk.\r\nI'm looking forward to the talk.", "reviewer": "stanley", "rank": 4}, {"comment": "This topic is what Sphinx user want to listen.\r\nAnd the speaker is ready. Wonderful", "reviewer": "apua", "rank": 5}], "id": 69, "duration": "40 mins", "title": "Sphinx autodoc: automated API documentation", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "I would like this presentation to be useful AFTER the conference, as well as during. I'll have the code examples on the web before the conference, and I hope the slides and video will be easily accessible after the conference is over. \r\n\r\nI would like this to be useful both to professionals who would like to start using python for easy computing, and for teachers/students who can enhance their understanding of science and engineering by doing interesting and real-world engineering problem simulations in python without a lot of coding experience.\r\n\r\nI won't go over all the examples in detail during the talk, but instead focus on the fun stuff, and how to visualize physics in blender. ", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "david.mikolas1@gmail.com", "speech_type": "SciPy Talk (English Only)", "tags": "blender, physics, engineering", "abstract": "When I first told my friends and family that I was taking some time off to learn about blender and python for scientific visualization, some of them became confused and worried, thinking I had snakes in my kitchen. In fact, I'm a scientist/engineer and I need an environment to calculate things and show the results, and these two open source packages offered everything I need!  \r\n\r\nPython has become a popular platform in physics for both professional research and teaching settings. Scipy and numpy have most of the goodies we need, and there are plenty of other libraries out there. However, depending on one's previous experience with other tools, learning to really use python \"pythonically\" can sometimes be a little bumpy. \r\n\r\nIn this talk I'll first give a quick tutorial on how to get started doing physics in python the right way - the tutorial that I *wish* I could have read in the beginning. I'll give some examples of interactive programs using the matplotlib widgets as a user interface, for a variety of engineering and physics applications. This is the International Year of Light [1] celebrating a number of optical \"birthdays\", so we'll look at some of those with Python.\r\n\r\nThen I'll show some results where I cast a complicated math/optics problem as a collection of python objects (in python, everything is an object!) to make the solution more tangible. Since blender - a rendering and animation environment with python scripting built-in - eats python objects for breakfast, one can just transfer the code into blender and make animated 3D visualization of the problem setup, calculation, and final results. \r\n", "additional_info": "[1]  www.nature.com/news/light2015-1.16846", "reviews": [{"comment": "Combining SciPy and blender for visualization is very attractive. Would be even nicer to know what physics problems are involved.", "reviewer": "yuanchao", "rank": 4}, {"comment": "Visualizing scientific computation results with animation tools combines two worlds into one.  The tricks involved should be informative.", "reviewer": "yungyuc", "rank": 4}, {"comment": "OK for SciPy talk. The content is tutorial/demonstrative one (rather than a practical science/engineering story, which is more suitable for our track).", "reviewer": "whosaysni", "rank": 3}], "id": 72, "duration": "40 mins", "title": "for physics in blender:   (or, what light looks like)", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "OpenLCDFDM is a finite difference simulation code for liquid crystal device. It can perform parallel simulations through OpenMP. \\\\\r\n\r\nLCD simulation contains three different parts of calculations. The first one is to simulate liquid crystal transition under external electric field, this transition is called Fr\u00e9edericksz transition. The simulation of Fr\u00e9edericksz transition is done by solving Poisson's equation and minimizing the Oseen-Frank free energy. The second one is to calculate polarization of light when it propagates through the liquid crystal device. Extended Jones matrix method is used to calculate polarization of light and the transmission. The last part is colorimetry calculation. It calculates human color perception by the light emitted from LCD devices.\\\\\r\n\r\nSimulation codes are written in C++ and Cython is used to provide Python interfaces, so that users can run simulations or build user interfaces through Python while no loss of performance.", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "icbm0926@gmail.com", "speech_type": "SciPy Talk (English Only)", "tags": "numerical simulation, finite-difference, optics, Cython, OpenMP", "abstract": "LCD is a mature display technology and widely adopted in consumer electronics. Being able to simulate LCD device is important to understand how it works as well as improve LCD technology. OpenLCDFDM is a program which uses finite difference method to perform LCD simulations. This talk will give introductions of how an LCD display works and the methods used in OpenLCDFDM to simulate such devices.", "additional_info": "1. Optics of Liquid Crystal Display by Pochi Yeh and Claire Gu. ISBN: 0470181761\r\n2. Fundamentals of Liquid Crystal Devices by Shin-Tson Wu and Deng-Ke Yang. ISBN: 978-0-470-03202-2\r\n3. OpenLCDFDM: https://github.com/xingularity/OpenLCDFDM", "reviews": [{"comment": "Somehow google give zero result with \"OpenLCDFDM\". The author didn't mention about if OpenLCDFDM will be release to public or just for internal use. But would be nice to know how python used in practical simulation.", "reviewer": "yuanchao", "rank": 3}, {"comment": "It is interesting to see continuum-based first-principle simulations with Python.  The abstract didn't contain information about the architecture of the software.  The combination of Cython and C++ is intriguing.", "reviewer": "yungyuc", "rank": 4}, {"comment": "Fits as a SciPy talk. Seems to be based on concrete design and extend use of Python. Would be interesting for practical Python users in engineering.", "reviewer": "whosaysni", "rank": 4}], "id": 73, "duration": "40 mins", "title": "Liquid crystal device simulation with Python", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "This presentation will explain and demo how Python could be interacted with the popular compiler infrastructure project -- LLVM, and is trying to show Python's great ability to release the productivity of programmers via integration with the underlying software.", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "hkli2013@126.com", "speech_type": "Regular Talk", "tags": "Python, LLVM ", "abstract": "1)  Analysis and comparison of the software architecture against various LLVM Python    \r\n     bindings such like the built-in one, llvmlite, llpy and llvmpy, which also includes some\r\n     samples.\r\n2)  Research of the LLDB debugger and its Python bindings, and explain how Python is       \r\n     integrated with the debugger and its application, together with an analysis of PEDA--\r\n     Python helper of the debugger.\r\n3)  Research of the design of the next generation disassembly framework \"Capstone\" --  \r\n     which is based on the LLVM MC, and will demo a simple project of a visual front-end \r\n     for Capstone that written in Python/Qt.\r\n", "additional_info": "https://www.python.org\r\nhttp://www.llvm.org\r\nhttps://github.com/numba/llvmlite\r\nhttps://github.com/o11c/llpy/\r\nhttp://www.llvmpy.org/\r\nhttp://lldb.llvm.org/\r\nhttps://github.com/longld/peda\r\nhttp://www.capstone-engine.org/\r\nhttp://blog.llvm.org/2010/04/intro-to-llvm-mc-project.html", "reviews": [{"comment": "* Can't wait to attend a talk of this topic, the mythical LLVM with Python!\r\n* \"Introduction\" level talk with this sexy topic?! I start worrying if the topic is too intuitive or tough...", "reviewer": "drakeguan", "rank": 3}, {"comment": "It looks like the geek level talk~", "reviewer": "stanley", "rank": 4}, {"comment": "* Should be an advanced topic\r\n* Connect the dots between Python, llvm, and de-compiler\r\n* Also interesting in Capstone", "reviewer": "AlfredW", "rank": 4}, {"comment": "Connecting the LLVM & Python is an exciting and very futuristic topic.", "reviewer": "keitheis", "rank": 5}], "id": 74, "duration": "40 mins", "title": "Python & LLVM", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "Our company develops and providing a mobile learning platform \u201cgoocus\u201d, which is optimized for smartphones and tablets. The server-side of the platform is developed with the Django framework of Python.\r\n\r\nSince 2013 our company have developed a mobile learning platform called \u201cgoocus pro\u201d. This time we spent about a year to refurbish the design and modeling of our service since we start creating the service design of the new \u201cgoocus\u201d in 2014.\r\n\r\nThe goal of redesign and remodeling of the service is to achieve a large-scale education and training that existing services cannot offer. That is why we aspired the sophisticated and robust backend system.\r\n\r\nDuring this process of backend engineering we put great emphasis on unit tests. They made it easy to develop a web service that stands up to large-scale use, enhancing the engineering efficiency at the same time. This presentation delivers the real case study where we utilized unit tests for our service development.", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "shunsuke_hida@me.com", "speech_type": "Lightning Talk", "tags": "Django", "abstract": "Based on the actual case of our web service development, this presentation reports how unit tests contribute to increase the engineering efficiency in the backend development of large-scale web service.", "additional_info": "", "reviews": [{"comment": "it would be a good sharing in lightning talk.", "reviewer": "stanley", "rank": 4}], "id": 75, "duration": "40 mins", "title": "The Effectiveness of Unit Tests in Django Backend Engineering of Large-scale Web Service", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "       \u5507\u8a9e\u8fa8\u8b58\u9818\u57df\u662f\u6211\u76ee\u524d\u5728\u78a9\u58eb\u73ed\u947d\u7814\u7684\u7814\u7a76\u65b9\u5411\uff0c\u6211\u5e0c\u671b\u80fd\u85c9\u7531\u9019\u6b21\u5728 PyCon \u7684\u5206\u4eab\u8b93\u5927\u5bb6\u77e5\u9053 \"\u963f! \u539f\u4f86 Python \u4e5f\u80fd\u7528\u5728\u9019! \"\uff0c\u5c31\u50cf\u6211\u7b2c\u4e00\u6b21\u53c3\u52a0 Taipei.py \u6642\u6709\u7684\u90a3\u7a2e\u5927\u958b\u773c\u754c\u7684\u9ad4\u6703\u4e00\u6a23\u3002\r\n       \u5507\u8a9e\u8fa8\u8b58\u7d50\u5408\u4e86\u8a9e\u97f3\u8fa8\u8b58\u53ca\u5f71\u50cf\u8fa8\u8b58\uff0c\u800c\u5176\u4e2d\u8a9e\u97f3\u8fa8\u8b58\u7684\u7814\u7a76\u76f8\u8f03\u65bc\u5f71\u50cf\u8fa8\u8b58\u662f\u8f03\u70ba\u8c50\u5bcc\u4e14\u5ee3\u6cdb\u7684\uff0c\u4f46\u82e5\u53ea\u5206\u6790\u8a9e\u97f3\u8a0a\u865f\u662f\u4e0d\u8db3\u4ee5\u9069\u61c9\u5404\u7a2e\u74b0\u5883\u4e0a\u7684\u8003\u9a57\uff0c\u5982\u5608\u96dc\u5730\u5340\u6216\u6536\u97f3\u4e0d\u4f73\u7684\u74b0\u5883\u4e0b\uff0c\u8a9e\u97f3\u8fa8\u8b58\u7684\u6548\u679c\u5c31\u6975\u4e0d\u6a02\u89c0\u3002\u56e0\u6b64\uff0c\u6211\u5f9e\u5f71\u50cf\u65b9\u9762\u4f86\u8457\u624b\u7814\u7a76\uff0c\u6211\u6536\u96c6\u4e86\u8a31\u591a\u9023\u7e8c\u6578\u5b57\u7684\u5f71\u50cf\u6a94\u4f5c\u70ba\u6211\u7814\u7a76\u7528\u7684\u8cc7\u6599\uff0c\u4ee5 Python' OpenCV \u53ca\u6a5f\u5668\u5b78\u7fd2\u65b9\u9762\u7684\u6280\u8853\u958b\u767c\u6f14\u7b97\u6cd5\uff0c\u8a66\u5716\u627e\u51fa\u9023\u7e8c\u6578\u5b57\u4e2d\u6bcf\u500b\u6578\u5b57\u7684\u958b\u982d\u6642\u9593\u53ca\u7d50\u675f\u6642\u9593\uff0c\u82e5\u80fd\u6e96\u78ba\u7684\u6a19\u51fa\u6bcf\u500b\u6578\u5b57\u7684\u4f4d\u7f6e\u5c0d\u5f8c\u7e8c\u7684\u8fa8\u8b58\u5c07\u63d0\u4f9b\u5f37\u5927\u4e14\u7a69\u5065\u7684\u57fa\u790e\uff0c\u9019\u662f\u6211\u5e0c\u671b\u80fd\u63d0\u4f9b\u7d66\u807d\u773e\u5011\u7684\u8cc7\u8a0a\u3002\r\n       \u5728\u6211\u7684\u5206\u4eab\u4e2d\uff0c\u6f14\u7b97\u6cd5\u7684\u90e8\u4efd\u4e26\u4e0d\u6703\u82b1\u592a\u591a\u6642\u9593\u4ecb\u7d39\uff0c\u91cd\u9ede\u6703\u653e\u5728\u7814\u7a76\u9ede\u5b50\u7684\u8d77\u6e90\u3001\u7d50\u679c\u5c55\u73fe\u53ca\u672a\u4f86\u61c9\u7528\u4e0a\uff0c\u8b93\u666e\u7f85\u5927\u773e\u5c0d\u6211\u7684\u7814\u7a76\u9818\u57df\u90fd\u80fd\u6709\u6982\u7565\u6027\u7684\u8f2a\u5ed3\u3002", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "yuchilin43@gmail.com", "speech_type": "Regular Talk", "tags": "speech recognition, lip recognition, pattern recogniton", "abstract": "       \u6211\u6240\u4ecb\u7d39\u7684\u5167\u5bb9\u5c07\u8457\u91cd\u65bc\u5507\u8a9e\u7684\u5f71\u50cf\u8fa8\u8b58\u4e0a\uff0c\u6211\u5011\u5f9e\u73fe\u5be6\u751f\u6d3b\u7684\u7d93\u9a57\u88e1\u80fd\u5f97\u77e5\uff0c\u5728\u5608\u96dc\u74b0\u5883\u4e0b\u53ea\u7531\u8072\u97f3\u4f86\u8207\u4ed6\u4eba\u6e9d\u901a\u662f\u56f0\u96e3\u4e14\u6a21\u7cca\u7684\uff0c\u4f46\u82e5\u4f60\u80fd\u540c\u6642\u770b\u8457\u5c0d\u65b9\u7684\u5507\u5f62\uff0c\u5c07\u80fd\u5927\u5e45\u63d0\u6607\u5c0d\u8a71\u7684\u54c1\u8cea\u3002\u70ba\u4e86\u5be6\u73fe\u9019\u500b\u76ee\u6a19\uff0c\u6211\u63a1\u7528 Python' OpenCV \u4f86\u5c0d\u5f71\u50cf\u505a\u5206\u6790\u8655\u7406\uff0c\u5f9e\u5f71\u50cf\u4e2d\u64f7\u53d6\u51fa\u4ee3\u8868\u6027\u7684\u7279\u5fb5\uff0c\u9032\u4e00\u6b65\u89c0\u5bdf\u9023\u7e8c\u7684\u5b57\u5143\u5728\u8f49\u63db\u6642\u662f\u5426\u5177\u6709\u76f8\u4f3c\u7684\u7279\u5fb5\u9ede\u3002\u672a\u4f86\u5c07\u7d50\u5408\u8a9e\u97f3\u8a0a\u865f\uff0c\u589e\u5f37\u8a9e\u97f3\u8fa8\u8b58\u7684\u6548\u80fd\u3002", "additional_info": "[Paper Reference]\r\n1.  Lucey, P. and Sridharan, S. Patch-based representation of visual speech. In HCSNet Workshop on the Use of Vision in Human-Computer Interaction, 2006\r\n2. G. Zhao , M. Barnard and M. Pietik&auml;inen  \"Lipreading with local spatiotemporal descriptors\",  IEEE Trans. Multimedia,  vol. 11,  no. 7,  pp.1254 -1265, 2009\r\n\r\n[OpenCV]\r\nhttps://opencv-python-tutroals.readthedocs.org/en/latest/ ", "reviews": [{"comment": "We got a few talks from either speech or vision pattern recognition, \r\nbut a talk combining both filed and built on top of practical application? Can't wait to see.", "reviewer": "liang2", "rank": 4}, {"comment": "Interesting. I'm looking forward to.", "reviewer": "stanley", "rank": 4}, {"comment": "exciting new application", "reviewer": "marr", "rank": 5}, {"comment": "I'd like to see the how lip recognition works with Python.", "reviewer": "keitheis", "rank": 4}], "id": 76, "duration": "40 mins", "title": "Python \u8b93\u4f60\u7684\u773c\u775b\u807d\u5f97\u898b", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "A. \u74b0\u5883\u8a2d\u5b9a\uff080.5 \u5c0f\u6642\uff09\r\n    1. \u4f7f\u7528 Serial + WiFi\r\n    2. \u4f7f\u7528 VNC \u548c X-Forwarding\r\nB. Raspberry Pi GPIO \u7c21\u4ecb\uff082 \u5c0f\u6642\uff09\r\n    1. \u96fb\u58d3\u3001\u96fb\u6d41\u548c\u96fb\u963b\r\n    2. \u6578\u4f4d/\u985e\u6bd4 x \u8f38\u5165/\u8f38\u51fa\r\nC. \u99ac\u9054\u7c21\u4ecb \uff081 \u5c0f\u6642\uff09\r\n    1. \u76f4\u6d41\u99ac\u9054\u4ecb\u7d39\r\n    2. \u7528 Raspberry Pi \u63a7\u5236\u76f4\u6d41\u99ac\u9054\r\nD. \u9060\u7aef\u63a7\u5236\u4f7f\u7528\u7121\u7dda\u7db2\u8def\u3001\u85cd\u7259\u8207\u7d05\u5916\u7dda 3.5 \u5c0f\u6642)\r\n    1. \u85cd\u7259\u539f\u7406\r\n    2. \u7d05\u5916\u7dda\u539f\u7406", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "sorry702@gmail.com", "speech_type": "Workshop", "tags": "Raspberry Pi, Python, Remote Car, GPIO", "abstract": "\u672c\u6b21\u5de5\u4f5c\u574a\u6703\u4ecb\u7d39\u5982\u4f55\u4f7f\u7528 Raspberry Pi \u505a\u9059\u63a7\u8eca\uff0c\u5305\u62ec\u7121\u7dda\u7db2\u8def\u3001\u85cd\u7259\u8207\u7d05\u5916\u7dda", "additional_info": "", "reviews": [{"comment": "Hands down.", "reviewer": "marr", "rank": 5}, {"comment": "Maker topic always interests people.", "reviewer": "stanley", "rank": 5}, {"comment": "Super cool, can't wait to get both hands dirty.", "reviewer": "liang2", "rank": 5}, {"comment": "\u671f\u5f85\u6210\u54c1~", "reviewer": "Yen", "rank": 5}], "id": 77, "duration": "Whole Day", "title": "Raspberry Pi Remote Car + Python \u5de5\u4f5c\u574a", "decision": "Rejected", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "It's 6th years of PyCON APAC since 2010, hosted in Singapore, Tokyo and Taipei. Nowaday, in 2015, number of local PyCONs in Asia Pacific increased to 10. It's a good opportunity for PyCON organisers and teams to meet in Taipei, to discuss the future development of PyCON APAC, and meet with old and new PyCON friends in Asia Pacific. \r\n\r\nSammy Fung, organiser of PyCON HK and committee members at other Asia open source conference/summit will host a session, and invites past PyCON APAC organisers and PyCON organisers in Asia Pacific to meet and discuss the future development of PyCON and python community in the Asia Pacific.", "talk_perm": "Don't record my talk", "language": "English", "author": "sammy@sammy.hk", "speech_type": "Regular Talk", "tags": "pycon, apac", "abstract": "It's 6th years of PyCON APAC since 2010, hosted in Singapore, Tokyo and Taipei. Nowaday, in 2015, number of local PyCONs in Asia Pacific increased to 10. It's a good opportunity for PyCON organisers and teams to meet in Taipei, to discuss the future development of PyCON APAC, and meet with old and new PyCON friends in Asia Pacific. ", "additional_info": "- PyCON HK organiser (website: http://2015.pycon.hk)\r\n- Member, Program Committee, COSCUP 2013: http://coscup.org\r\n- Member, GNOME Asia Committee (organised GNOME Asia Summit in HK, Seoul, Beijing and Depok this year) since 2012: http://gnome.asia\r\n- Mozilla Representative and Mozilla HK Community Liaison.\r\n- Others.\r\n", "reviews": [{"comment": "Good to see the momentum in APAC community is growing.", "reviewer": "liang2", "rank": 4}, {"comment": "We should always have this kind of mindset to keep APAC community growing.", "reviewer": "stanley", "rank": 4}, {"comment": "It's an important topic we care very much. :)", "reviewer": "keitheis", "rank": 5}, {"comment": "A must-have topic for a conference.", "reviewer": "jin", "rank": 5}, {"comment": "If it is just a talk, I think it is better to be a lightning talk.\r\nMaybe it will run with more conversation with audience? If not, I think 40min is too long for this topic, even if \"the future of PyConAPAC\" is a worthy talk.", "reviewer": "apua", "rank": 2}], "id": 78, "duration": "40 mins", "title": "Future Development of PyCON in Asia Pacific", "decision": "Accepted", "slide_perm": "Don't publish my slide", "audience_level": "Introduction"}, {"description": "Prerequisites:\r\n\u4e00\u53f0\u80fd\u4e0a\u7db2\u7684\u96fb\u8166\r\n\u57fa\u790epython\u8a9e\u6cd5\u8a8d\u8b58\r\n\r\nOutline:\r\n\r\n## \u5c0f\u6642\u4e00\u3001\u722c\u87f2\u7a7f\u65b0\u8863\r\n    - talk: introduction\r\n        - \u7db2\u9801\u8cc7\u6599\u5448\u73fe\u7684\u5f62\u5f0f\r\n    - lab: Facebook Graph API\r\n        - \u62c6\u89e3\u5167\u5bb9\u53d6\u5f97\u60f3\u8981\u7684\u8cc7\u6599\r\n        - \u4eca\u5e74\u6211\u88ab\u6309\u4e86\u591a\u5c11\u8b9a??\r\n\r\n## \u5c0f\u6642\u4e8c\u3001\u722c\u87f2\u809a\u5b50\u9913\r\n    - talk: \r\n        - handling requests (GET, POST)\r\n        - Parsing Tools (BeautifulSoup4, pyquery, lxml, pandas, re)\r\n    - lab:  Yahoo news and PTT\r\n\r\n## \u5c0f\u6642\u4e09\u3001\u722c\u87f2\u53bb\u8993\u98df\r\n    - talk\r\n        - Parser Skills (Encoding, Table, csv, json, xml, and some bad data)\r\n        - database(SQLite)\r\n    - lab:\r\n        - \u81fa\u7063\u8b49\u5238\u4ea4\u6613\u6240\r\n\r\n## \u5c0f\u6642\u56db\u3001\u722c\u87f2\u53bb\u8003\u8a66\r\n    - talk\r\n        - Web Drivers (selenium, phantomjs)\r\n    - lab: \r\n        - \u61f6\u4eba\u81ea\u52d5\u5316\u8a02\u7968 or \u4e0b\u55ae\r\n\r\n## \u5c0f\u6642\u4e94\u3001\u722c\u87f2\u6316\u5730\u9053\r\n    - talk\r\n        - Advanced Connector Skill (TOKEN, COOKIE)\r\n    - lab: \r\n        - \u61f6\u4eba\u81ea\u52d5\u5316 (\u9ad8\u901f) \u8a02\u7968 or \u4e0b\u55ae\r\n\r\n## \u5c0f\u6642\u516d\u3001\u81ea\u5df1\u7684\u722c\u87f2\u81ea\u5df1\u5beb\r\n    - Final Project:\r\n        - \u64f7\u53d6\u7576\u65e5PTT\u516b\u5366\u7248\u524d\u4e09\u5927\u6230\u6587\r\n        - Coursera \u81ea\u52d5\u52a0\u5165\u201d\u7576\u524d\u6c92\u6709\u73ed\u6b21\u201d\u7684\u8ab2\u7a0b\r\n        - \u81ea\u5df1\u63d0\u51fa\u722c\u87f2idea\u4f86\u5be6\u73fe\r\n", "talk_perm": "Don't record my talk", "language": "Mandarin", "author": "adrianliaw2000@gmail.com", "speech_type": "Tutorial", "tags": "crawler, web", "abstract": "\u300c\u73fe\u5728\u544a\u8a34\u6211\uff0c\u6211\u662f\u4e00\u500b\u4eba\uff0c\u9084\u662f\u4e00\u96bb\u722c\u87f2\u5462\uff1f\u300d\r\n\r\n\u7db2\u8def\u722c\u87f2\u7a0b\u5f0f\u662f\u6a21\u4eff\u4eba\u985e\u884c\u70ba\u81ea\u52d5\u9020\u8a2a\u7db2\u7ad9\u4e26\u64f7\u53d6\u7db2\u7ad9\u8a0a\u606f\u7684\u7a0b\u5f0f\uff0c\u5177\u6709\u6975\u9ad8\u5546\u696d\u61c9\u7528\u50f9\u503c\u3002\u672c\u6559\u5b78\u6d3b\u52d5\u900f\u904e\u52d5\u624b\u5be6\u4f5c\uff0c\u8b93\u60a8\u5177\u6709\u7db2\u8def\u722c\u87f2\u7a0b\u5f0f\u7684\u57fa\u672c\u6982\u5ff5\u8207\u5be6\u6230\u80fd\u529b\u3002\u60a8\u53ef\u4ee5\u5f9e\u53d6\u5f97\u65b0\u805e\u3001PTT\u6230\u6587\u3001\u793e\u7fa4\u7db2\u7ad9\u5167\u5bb9\u64f7\u53d6\u3001\u61f6\u4eba\u8a02\u7968\u7b49\u5404\u7a2e\u7bc4\u4f8b\u4e2d\uff0c\u5b78\u5230\u5f81\u670d\u5e38\u898b\u7db2\u9801\u7684\u722c\u87f2\u6280\u8853\u3002", "additional_info": "public crawler tutorial by c3h3:\r\nhttp://nbviewer.ipython.org/github/c3h3/nccu-crawler-courses-201411/tree/master/\r\n\r\nWeb Scraping with Python: A Comprehensive Guide to Data Collection Solutions http://www.amazon.com/Web-Scraping-Python-Comprehensive-Collection/dp/1491910291", "reviews": [{"comment": "Practical and Appealing. It really is a whole day workshop, for Python, Web / Networking basics is prerequisite. Good to see the materials seem well prepared already.", "reviewer": "marr", "rank": 5}, {"comment": "\u6e05\u695a\u4e14\u660e\u78ba\u7684\u5927\u7db1, \u8f14\u4ee5\u9069\u5408\u7684 lab\u3002\u76f8\u4fe1\u5982\u679c\u6bcf\u4e00\u6bb5\u7684\u7df4\u7fd2\u90fd\u80fd\u5be6\u505a\u51fa\u4f86, \u4e00\u5b9a\u6703\u6709\u5f88\u8c50\u5bcc\u7684\u6536\u7a6b\u3002", "reviewer": "sosorry", "rank": 5}], "id": 54, "duration": "Whole Day", "title": "\u6a21\u4eff\u904a\u6232 \u7528\u722c\u87f2\u985e\u5b78\u722c\u87f2", "decision": "Accepted", "slide_perm": "Don't publish my slide", "audience_level": "Introduction"}, {"description": "**Improve Your Testing with Pytest and Mock**\r\n\r\n- Why Pytest?\r\n- Installation\r\n- Our First Test\r\n- Testing Exceptions\r\n- Context-Sensitive Comparisons\r\n- Classic xUnit Setup / Teardown\r\n- Pytest Fixtures\r\n- Verifying Calls with Mock\r\n- Stubbing Return Values\r\n- Monkeypatching\r\n- Pytest Plugins\r\n- Time For Questions", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "gabe@avantbard.com", "speech_type": "Regular Talk", "tags": "testing, mocking, tdd", "abstract": "Testing code with Pytest is an absolute pleasure. Less boilerplate makes your test more concise and its fixtures system helps you share setup code while still keeping your tests clear and understandable. I'll tell you all about how to get basic unit testing done, and I'll show you how to use Voidspace's Mock library to test collaborations between your objects, too.", "additional_info": "I gave a version of this talk at the Singapore Python meetup on March 26th, 2015.  It seemed to be well-received, and I'd love to share a version of this talk at PyCon SG, too! =-)\r\n\r\nThere's a video of my talk from the meetup here: https://www.youtube.com/watch?v=k99HSHQDsi4\r\n\r\nEstimated talk time: 35 minutes.  \r\nIntended audience: folks new to testing, or people with experience with unittest who are interested in seeing what Pytest has to offer.", "reviews": [{"comment": "Pros\r\n* Basic Level in using PyTest, \r\n* Covering most of PyTest features\r\n* Joined this talk before (in Singapore), his explanation was clear.\r\n\r\nCons\r\n* Audiences should be familiar with Python and experienced in Python Web Development.\r\n* Lack of usage scenario.", "reviewer": "AlfredW", "rank": 3}, {"comment": "Just compared his talk (from Youtube) and another one (from Live/Youtube).\r\nI'll more prefer the second one.\r\nIn the mean time, due to avoid having similar talk in the same conference,\r\nI just lower the rank of this talk.", "reviewer": "stanley", "rank": 2}, {"comment": "The lecture looks quire well prepared.", "reviewer": "drakeguan", "rank": 3}, {"comment": "Testing is an important and basic topic, and it seems the speaker has prepared.\r\nBut the \"Audience level\" may not be \"introduction\"", "reviewer": "apua", "rank": 4}], "id": 81, "duration": "40 mins", "title": "Improve your testing with Pytest and Mock", "decision": "Rejected", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "\u529f\u80fd\u9762\u9700\u6c42\r\n- \u76f8\u4f9d\u6027\u9ad8: \u9700\u8981\u8907\u96dc requirement\r\n- \u81ea\u52d5\u8fa8\u5225\u5de5\u4f5c\u5fc5\u9808\u5faa\u5e8f\u57f7\u884c\u6216\u662f\u53ef\u5e73\u884c (corountine) \r\n- \u4f7f\u7528 functional \u7684\u65b9\u5f0f\u907f\u514d\u91cd\u8907\u57f7\u884c\r\n- \u9700\u8981\u7fa4\u96c6\u7684\u65b9\u5f0f\u4f86 allocate \u8cc7\u6e90\uff0c\u4e26\u4e14\u57f7\u884c\uff0c\u52d5\u614b\u8abf\u6574\r\n- repo \u5354\u540c\u4f5c\u696d\uff0c\u4f7f\u7528 docker\r\n- Environment \u4e7e\u6de8\uff0c\u4e26\u4e14\u53ef\u4ee5\u8207 CI, CD \u6574\u5408\r\n- \u9664\u4e86 coding \u4ee5\u5916\u7684\u6771\u897f\u90fd\u6574\u5408\u5728\u4e00\u8d77\u4e26\u4e14\u81ea\u52d5\u5316\r\n- \u7ba1\u7406\u65b9\u4fbf\u7684\u5716\u6027\u5316\u4ecb\u9762\r\n- \u5f48\u6027\u7684\u4e8b\u4ef6\u89f8\u767c (HookEvent, Cron)\r\n\r\n\u76ee\u9304:\r\n1. Why we create Task Manager (George)\r\n2. [Past] Compare to other framework\r\n3. [Future] How we design Task Manager\r\n    3.1 Container based task management \r\n    3.2 Continues Integration -> Continues Deploy -> Continues Execution?\r\n4. Task Manger Design Principle \r\n5. Sample Usage and Demo", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "lucemia@gmail.com", "speech_type": "Regular Talk", "tags": "django, web, task, docker", "abstract": "\u96a8\u8457\u529f\u80fd\u589e\u52a0\uff0c\u5728\u8cc7\u6599\u8655\u7406\u6642\u9700\u8981\u727d\u6d89\u7684\u670d\u52d9\u8d8a\u4f86\u8d8a\u591a, \u76f8\u4e92\u4e4b\u9593\u7684\u95dc\u4fc2\u8d8a\u4f86\u8d8a\u8907\u96dc, \u70ba\u4e86\u89e3\u6c7a\u6bcf\u5929\u71df\u904b\u9700\u8981\u8655\u7406\u7684\u8cc7\u6599\uff0c\u670d\u52d9\uff0c\u6d41\u7a0b\u554f\u984c\uff0c\u914d\u5408 docker \u89e3\u6c7a\u65b9\u6848\uff0c\u51fa\u73fe\u80fd\u89e3\u6c7a\u6389\u539f\u672c\u7684\u9650\u5236\u7684\u53ef\u80fd\u6027\uff0c\u624d\u6703\u81ea\u5e79\u9019\u500b\u958b\u6e90\u7684\u5c08\u6848\uff0e", "additional_info": "Will give talk with George together :)", "reviews": [{"comment": "I doubt it was a sponsor talk.", "reviewer": "stanley", "rank": 5}, {"comment": "Seems interesting on how a startup creates a solution to deal their daily routine. I expected a fun and clear talk.", "reviewer": "keitheis", "rank": 4}, {"comment": "\u7d93\u904e\u5be6\u969b\u9a57\u8b49\u904e\u53ef\u884c\u7684\u5206\u4eab\u53ea\u80fd\u7d66\u63a8\u4e86\u3002 \u5e0c\u671b\u80fd\u4ecb\u7d39\u6f14\u9032\u7684\u5fc3\u8def\u6b77\u7a0b\uff0c\u8b93\u807d\u773e\u80fd\u4ee5\u6b77\u53f2\u501f\u93e1\u6709\u66f4\u591a\u7684\u6536\u7a6b\u3002", "reviewer": "sosorry", "rank": 4}], "id": 80, "duration": "40 mins", "title": "Tagtoo Task Manager", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "Present a number of interesting projects that are highly relevant to creating stories with Python. Describe what's great about using Python to create both fictions and nonfictions. Stir conversations about programming in creative writing. ", "talk_perm": "Don't record my talk", "language": "English", "author": "yahsinhuangtw@gmail.com", "speech_type": "Regular Talk", "tags": "Creative Writing, Fictions, Non-fictions, Literature, Python", "abstract": "This talk aims to encourage fiction and nonfiction writers to explore new approaches to writing. We will discuss about the successful projects and the challenges associated with crafting stories with Python. Finally, we will talk about how programming is changing the way we read and write.", "additional_info": "Virtual Muse: Experiments in Computer Poetry by Charles Hartman\r\nIntroduction to Electronic Literature: a freeware guide\r\nBird, Klein and Loper. Natural Language Processing with Python\r\nBorsuk, A. The Upright Script: Words in Space and on the Page\r\nMontfort, N. On Reading", "reviews": [{"comment": "*  Story sharing\r\n*  Know more about python in another aspect.", "reviewer": "AlfredW", "rank": 2}, {"comment": "I can get the idea from the reference, but no more information.", "reviewer": "sosorry", "rank": 2}, {"comment": "A little bit wondering what this talk might become eventually.", "reviewer": "drakeguan", "rank": 4}, {"comment": "The author didn't provide enough information to judge his talk.\r\nIn personally, I'm so curious about how the talk would be represented at the end.", "reviewer": "stanley", "rank": 3}], "id": 82, "duration": "40 mins", "title": "Creating Stories with Python", "decision": "Rejected", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "The flow of talk may go like this,\r\n1. Introduce concept of OpenCL\r\n- What's OpenCL\r\n- How can we get benefit from it\r\n\r\n2. Introduce PyOpenCL and basic usage\r\n- OpenCL + Python\r\n- A look to its API\r\n\r\n3. Kernel-mapper\r\n- The idea and why we're doing this. Basically, if you want to use PyOpenCL, you might also need to get familiar with numpy / pyopencl.tools / pyopencl.array, and the data/class are kind of confusing ...\r\n- How we make it simpler than original PyOpenCL in certain usage case. We're trying to define rules (in JSON format) to automatically generate kernel.c/kernel.h for OpenCL usage. And a python file will be generated for python programmer to use. In this case, someone who are familiar with opencl kernel programming can do his job without any experienc in python, and python programmer can wired up the execution logic without knowing how to write opencl kernel.      They are linked by data structures that defined in the JSON.\r\n \r\n4. Demo\r\n- The idea is to demostrate the performance improvement for certain computation in CPU / GPU. \r\n", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "kilik.kuo@gmail.com", "speech_type": "Regular Talk", "tags": "PyOpenCL, GPU, Performance", "abstract": "We'd like to provide a simpler way for people to utilize GPU power via PyOpenCL.\r\nAlso provide a more clearer line to separate tasks easily for people we're good at OpenCL kernel programming & python programming. ", "additional_info": "Wiki - https://github.com/PyOCL/kernel-mapper/wiki/What-is-Kernel-Mapper\r\nCode - https://github.com/PyOCL/kernel-mapper\r\nSlide (Work In Progress) - http://goo.gl/qmy0y7\r\n\r\nThere're 2 authors contributing to this project.  John Hu / Kilik Kuo,\r\nKilik Kuo will be the speaker, but I'm wondering if it's ok to put both authors in handbook once this proposal has been selected ?\r\n", "reviews": [{"comment": "* OK of originality.  The purpose of project is like an \" Interface Wrapper and Generator \", such techs are widely used in SWIG or other frameworks. This one is for OpenCL.\r\n\r\n* It is complicated to map structures and build kernel mapping through pyopencl. You need to study lot of documents to make it correctly. Hope this project could ease the pain of current scenario.\r\n\r\n", "reviewer": "AlfredW", "rank": 4}, {"comment": "My kudo to Kilik Kuo and his given talks I attended. OpenCL is also an interesting topic.", "reviewer": "keitheis", "rank": 5}, {"comment": "An Interesting and challenging topic. ", "reviewer": "yudalin", "rank": 5}], "id": 48, "duration": "40 mins", "title": "Kernel-mapper (Tool to simplify the use of PyOpenCL)", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "\u76ee\u6a19\u807d\u773e\uff1a\u662f\u5df2\u7d93\u6709\u958b\u767c\u67b6\u8a2d\u7db2\u7ad9\u7684\u7d93\u9a57\uff0c\u4f46\u662f\u537b\u6c92\u6709\u5efa\u7f6e\u904e\u80fd\u4e58\u8f09c10k\u4ee5\u4e0a\u670d\u52d9\r\n\r\n\u80cc\u666f\u77e5\u8b58\uff1a\u81f3\u5c11\u4e00\u5957\u4ee5\u4e0a\u7684Python Web Framework (Django, Pyramid, Flask, and etc)\uff0c\u5c0d\u65bcStandard Unix\u67b6\u69cb\u8207\u96f2\u7aef\u670d\u52d9\u6709\u57fa\u672c\u8a8d\u77e5\r\n\r\n\u4e3b\u8981\u662f\u4ee5\u89c0\u5ff5\u8207\u5be6\u969b\u7bc4\u4f8b\u4ecb\u7d39\uff0c\u7d66\u4e88\u807d\u773e\u4e00\u4e9b\u555f\u767c\u8207\u8d77\u982d\uff0c\u4e26\u4e14\u6307\u5f15\u4e00\u4e9b\u5f8c\u7e8c\u53ef\u4ee5\u6df1\u5165\u7684\u65b9\u5411", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "theonlin@gogolook.com", "speech_type": "Regular Talk", "tags": "web, architecture, cloud platfrom", "abstract": "\u7576\u6211\u5011\u958b\u767c\u597d\u7db2\u7ad9\u4e4b\u5f8c\uff0c\u4e5f\u9806\u5229\u4e0a\u7dda\u4e86\u4e4b\u5f8c\uff0c\u96a8\u8457\u4f7f\u7528\u8005\u7684\u4eba\u6578\u4e0d\u505c\u7684\u4e0a\u5347\uff0c\u6f38\u6f38\u4e00\u53f0\u4e3b\u6a5f\u9010\u6f38\u518d\u4e5f\u8ca0\u64d4\u4e0d\u8d77\u7d93\u5e38\u6027\u7684\u4f7f\u7528\u8005\u6d41\u91cf\uff0c\u672c\u8b70\u7a0b\u5c07\u6703\u4ecb\u7d39\u5404\u7a2e\u4e0d\u540c\u5c64\u9762\u7684\u6280\u5de7\u8207\u89c0\u5ff5\uff0c\u5354\u52a9\u7db2\u7ad9\u63d0\u9ad8\u670d\u52d9\u627f\u8f09\u91cf\uff0c\u5305\u542b\u4e86\u9801\u9762Cache\u7684\u6a5f\u5236\uff0c\u5584\u7528\u975e\u540c\u6b65\u8a0a\u606f\u4f47\u5217\uff0c\u8abf\u6574\u55ae\u4e00\u4f3a\u670d\u5668\u7684\u7cfb\u7d71\u67b6\u69cb\uff0c\u5230\u5229\u7528\u6700\u70ba\u5148\u9032\u7684\u96f2\u7aef\u670d\u52d9\uff0c\u5efa\u7f6e\u670d\u52d9\u53e2\u96c6\u3002", "additional_info": "", "reviews": [{"comment": "* Sort of fundamental but not-easy-to-master topic. There should be always a demand for this topic.", "reviewer": "drakeguan", "rank": 3}, {"comment": "This topic shouldn't be introductory I guess.", "reviewer": "liang2", "rank": 3}, {"comment": "An pragmatic subject and not easy master. Kind of short description here.", "reviewer": "keitheis", "rank": 3}, {"comment": "How to scale up the system? It's a difficult question to answer. There must be some people suffering about this kind of issue everyday.\r\nFor me, it's good to hear that the speaker would take this challenge to share the scaling experience to audience.\r\n", "reviewer": "stanley", "rank": 4}, {"comment": "Your talk would be very closely related to one of the main focus in Pycon 2015, because we have several cloud-computing service company as our sponsor. I think the application of the cloud service would be popular in our event. ", "reviewer": "Yen", "rank": 4}, {"comment": "Look like the speaker has clear goal and knows what he will introduce. I think it will be a rich talk.\r\nIn addition, it is a very useful topic and there is not many talk about it this year, so I think it is worthy.", "reviewer": "apua", "rank": 5}], "id": 89, "duration": "40 mins", "title": "How to scale up your Web Apps/Sites written by Python?", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "Agenda:\r\n  - \u4e00\u822c\u570b\u4e2d\u751f\u5b78\u5beb\u7a0b\u5f0f\r\n  - \u6211\u70ba\u4ec0\u9ebc\u5b78\u5beb\u7a0b\u5f0f\r\n  - \u8e0f\u51fa\u5beb\u7a0b\u5f0f\u7684\u7b2c\u4e00\u6b65\r\n  - MOOC\r\n  - \u5728\u5bb6\u81ea\u5b78\u7684\u570b\u4e09\r\n  - 15\u6b72\u4ee5\u4e0a\u672a\u6eff16\u6b72\u53d7\u50f1\u5f9e\u4e8b\u5de5\u4f5c\u8005\uff0c\u4fc2\u70ba\u7ae5\u5de5\u3002\r\n  - \u7b49\u7b49\u6211\u9084\u6c92\u6eff15\u6b72\u554a\r\n  - \u7e3d\u7d50", "talk_perm": "Don't record my talk", "language": "Mandarin", "author": "adrianliaw2000@gmail.com", "speech_type": "Regular Talk", "tags": "education", "abstract": "\u6211\u76ee\u524d\u5c31\u8b80\u570b\u4e2d\u4e09\u5e74\u7d1a\uff0c\u6211\u5f9e\u5341\u4e8c\u6b72\u6642\u958b\u59cb\u5b78\u7fd2Python\uff0c\u9019\u5834talk\u6211\u60f3\u5206\u4eab\u4e00\u4e9b\u9019\u6bb5\u6642\u9593\u81ea\u5b78\u7684\u7d93\u9a57\uff0c\u4ee5\u53ca\u70ba\u4ec0\u9ebc\u80fd\u5920\u6bd4\u5176\u4ed6\u5b78\u5beb\u7a0b\u5f0f\u7684\u570b\u4e2d\u751f\u7a81\u51fa\u3002", "additional_info": "\u4e0d\u8981\u518d\u8aaa\u96c7\u7528\u7ae5\u5de5\u4e86 \u6211\u4e0d\u662f\u7ae5\u5de5 http://bola.gov.taipei/ct.asp?xItem=43585057&ctNode=63848&mp=116003", "reviews": [{"comment": "\u6311\u6230\u8b1b\u8005\u5e74\u7d00\u4e0b\u9650\u8a18\u9304", "reviewer": "marr", "rank": 4}, {"comment": "The learning experience is very important and one of my most interested issue. And the self-teach & Python is my favorite.", "reviewer": "keitheis", "rank": 5}, {"comment": "\u6211\u5011\u5c0d\u65bc\u71b1\u8840\u7684\u9752\u5e74\u90fd\u61c9\u8a72\u7d66\u4e88\u9f13\u52f5\uff0c\u8b93\u4ed6\u5011\u6709\u66f4\u591a\u6a5f\u6703\u53ef\u4ee5\u7df4\u7fd2\u3002", "reviewer": "sosorry", "rank": 4}, {"comment": "\u521d\u751f\u4e4b\u72a2\u4e0d\u754f\u864e\u3002\"\u70ba\u4ec0\u9ebc\u80fd\u5920\u6bd4\u5176\u4ed6\u5b78\u5beb\u7a0b\u5f0f\u7684\u570b\u4e2d\u751f\u7a81\u51fa\"\u9019\u53e5\u8a71\u5f88\u5438\u5f15\u4eba\u554a!", "reviewer": "jin", "rank": 4}, {"comment": "\u7ae5\u5de5 :D", "reviewer": "sponsor", "rank": 5}, {"comment": "It would be insane to see this child presenting on the stage.", "reviewer": "drakeguan", "rank": 5}, {"comment": "It will be a good sharing from junior high student.\r\nBut it seems more suitable for lightning talk.", "reviewer": "stanley", "rank": 2}], "id": 88, "duration": "40 mins", "title": "\u570b\u4e2d\u6253\u62cd \u81ea\u5b78\u7d93\u9a57\u8ac7", "decision": "Undecided", "slide_perm": "Don't publish my slide", "audience_level": "Introduction"}, {"description": "This talk would be more like case studies about equity portfolio construction.\r\n\r\nI would share some experience/example...\r\n\r\n(1) what are the most common mistakes when building a equity portfolio? \r\nOne of them is overfitting.\r\n\r\n(2)  what would happen if you run the overfitting model? \r\nDefinitely you will loss money.\r\n\r\n(3) how to examine whether your portfolio is overfitting? \r\nYou have to run some test in order to make sure that your portfolio is safe from the threat of overfiting. I would give some solution by using Monte Carlo simulation, bootstrapping, and some test statistics borrowed from some academic papers. \r\n\r\n(4) What are the useful Toolkit in Python?\r\nI would use lots of data analysis packages, including ipython, numpy, scipy, and pandas,  and some visualization tool like matplotlib and seaborn.\r\n\r\n\r\nWhat I expect to bring to the audience might be...\r\n(1) Always keep asking yourself whether the result is overfiting or not. Without doing so, you would get into a trouble!\r\n(2) Share my experience how Python works in the field of quantitative finance.\r\n\r\n\r\n", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "yen.chiayi@gmail.com", "speech_type": "Regular Talk", "tags": "portfolio, quantitative finance, overfitting", "abstract": "You never know how to build a successful portfolio that always gives you significant return, but you definitely should know what would make you build a model that is doomed to be a failure. \r\n\r\nOverfitting is the most common one. In the brief talk, I would like to share some experience how to avoid overfitting. At least in some ways.\r\n\r\nThe examples would be shown in Python toolkit like ipython, pandas, numpy, matplotlib, and seaborn.", "additional_info": "", "reviews": [{"comment": "* ipython! matplotlib! How could we miss this stuff!", "reviewer": "drakeguan", "rank": 5}, {"comment": "It seems very interesting, especially while losing money.", "reviewer": "keitheis", "rank": 5}, {"comment": "We could never reject the topic for earning money.", "reviewer": "stanley", "rank": 4}, {"comment": "Nice sharing!", "reviewer": "c3h3", "rank": 5}, {"comment": "- Good, I need this.", "reviewer": "AlfredW", "rank": 5}], "id": 91, "duration": "40 mins", "title": "Millions way to avoid overfitting when building a portfolio ", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "\u4e0d\u8ad6\u662f\u5728\u5b78\u7fd2\u4efb\u4f55\u7684\u4e8b\u7269\u6642\uff0c\u300c\u89c0\u5bdf\u76f4\u89ba\u300d\u4ee5\u53ca\u300c\u5be6\u4f5c\u6280\u8853\u300d\u90fd\u662f\u6700\u91cd\u8981\u7684\u5169\u5927\u584a\u3002\u53ea\u6709\u6df1\u523b\u7684\u76f4\u89ba\uff0c\u624d\u53ef\u4ee5\u99d5\u99ad\u85dd\u8853\u822c\u7684\u5be6\u4f5c\u6280\u8853\uff1b\u540c\u6a23\u7684\uff0c\u4e5f\u53ea\u6709\u5728\u900f\u5fb9\u4e86\u89e3\u300c\u5404\u7a2e\u5be6\u4f5c\u6280\u8853\u7684\u7f3a\u9ede\u8207\u9650\u5236\u300d\u6642\uff0c\u624d\u80fd\u5728\u8a31\u591a\u7684\u78b0\u649e\u8207\u632b\u6298\u7684\u7d93\u9a57\u4e2d\uff0c\u7fe0\u7df4\u51fa\u6df1\u523b\u7684\u76f4\u89ba\u8207\u89c0\u5bdf\u529b\u3002\r\n\r\n\u540c\u6a23\u7684\uff0c\u5728\u8cc7\u6599\u5206\u6790\u7684\u5404\u500b\u9818\u57df\u4e2d\uff0c\u300c\u6280\u8853\u300d\u8207\u300c\u76f4\u89ba\u300d\u4e5f\u5e38\u5e38\u662f\u76f8\u8f14\u76f8\u6210\u7684\uff0c\u5fc5\u9808\u4e00\u8d77\u5b78\u7fd2\uff0c\u624d\u80fd\u5920\u6df1\u5165\u800c\u6dfa\u51fa\uff01\u56e0\u6b64\uff0c\u8b1b\u8005\u7279\u5225\u8a2d\u8a08\u7684\u4e00\u5957\u8ab2\u7a0b\uff0c\u53ef\u4ee5\u8b93\u5927\u5bb6 (\u751a\u81f3\u662f\u6c92\u4f5c\u904e\u4efb\u4f55\u8cc7\u6599\u5206\u6790\u7684\u4eba)\uff0c\u90fd\u53ef\u4ee5\u904b\u7528\u6700\u65b9\u4fbf\u7684\u6280\u8853\u8207\u5de5\u5177\uff0c\u5728\u6700\u5c11\u7684\u64cd\u4f5c\u969c\u7919\u4e4b\u4e0b\uff0c\u9ad4\u9a57\u8cc7\u6599\u5206\u6790\u4e2d\u6700\u91cd\u8981\u7684\u300c\u6280\u8853\u300d\u8207\u300c\u76f4\u89ba\u300d\u3002\r\n\r\n\u6559\u5b78\u7684\u904e\u7a0b\uff0c\u5c07\u63a1\u53d6\u4e00\u500b\u77ed\u6f14\u8b1b\uff0c\u642d\u914d\u4e00\u500b\u9577\u64cd\u4f5c\u7684\u4ea4\u66ff\u65b9\u5f0f\u9032\u884c\u3002\u5728\u6bcf\u4e00\u500b\u4e3b\u984c\u7684\u524d\u884c\u77ed\u6f14\u8b1b\u4e2d\uff0c\u8b1b\u8005\u5c07\u6703\u4ecb\u7d39\u8a72\u4e3b\u984c\u4e2d\uff0c\u6700\u91cd\u8981\u7684\u300c\u89c0\u5bdf\u76f4\u89ba\u300d\u8207\u300c\u601d\u8003\u54f2\u5b78\u300d\uff0c\u8b93\u5927\u5bb6\u53ef\u4ee5\u9810\u5148\u300c\u8a8d\u8b58\u554f\u984c\u300d\u3001\u300c\u601d\u8003\u554f\u984c\u300d\u3001\u300c\u4e86\u89e3\u554f\u984c\u300d\u3001\u6216\u751a\u81f3\u300c\u63db\u500b\u65b9\u5f0f\u770b\u554f\u984c\u300d\ufe4d \uff08\u9019\u90e8\u4efd\u7684\u8ab2\u7a0b\uff0c\u4e3b\u8981\u8457\u91cd\u65bc\u300c\u76f4\u89ba\u8207\u89c0\u5ff5\u7684\u5efa\u7acb\u300d\u8207\u300c\u5275\u610f\u7684\u767c\u60f3\u8207\u601d\u8003\u300d\u3002\uff09\r\n\r\n\u800c\u5176\u5f8c\u6240\u63a5\u7684\u64cd\u4f5c\u6642\u6bb5\uff0c\u5247\u662f\u8b93\u5927\u5bb6\u53ef\u4ee5\u8df3\u812b\u300c\u6191\u7a7a\u60f3\u50cf\u300d\uff0c\u66f4\u9032\u4e00\u6b65\u7684\u300c\u52d5\u624b\u53bb\u611f\u89ba\u8cc7\u6599\u300d\u3001\u300c\u548c\u8cc7\u6599\u4e92\u52d5\u300d\u3001\u300c\u6316\u6398\u554f\u984c\u80cc\u5f8c\u7684\u89e3\u7b54\u300d\u3001\u4e26\u4e14\u300c\u611f\u89ba\u89e3\u7b54\u80cc\u5f8c\u7684\u554f\u984c\u300d\ufe4d\uff08\u9019\u90e8\u4efd\u7684\u8ab2\u7a0b\uff0c\u4e3b\u8981\u8457\u91cd\u65bc\u300c\u5be6\u969b\u7684\u64cd\u4f5c\u4e26\u5206\u6790\u8cc7\u6599\u300d\u8207\u300c\u611f\u89ba\u5404\u7a2e\u65b9\u6cd5\u7684\u4fb7\u9650\u8207\u969c\u7919\u300d\u3002\uff09\r\n\r\n\r\nTimeline :\r\n[3hrs] Probability Modeling\r\n** What is Probability ?\r\nProbability is in your mind ! \r\nHow to guess the probability ?  \r\nWhat is the information behind evidences ?\r\nWhat is a fair coin ?\r\nWhy need Probability Modeling ?\r\nWhat is the difference between Probability Modeling and other methods? \r\n\r\n** Problems in Infinite Dimensional Vector Space\r\nProblems in NLP\r\nProblems in Lottery\r\nProblems in Stocks\r\nProblems in Audio Mining and Computer Vision\r\nProblems in Recommendation System\r\n\r\n\r\n** Hands-on Probability Modeling with Lottery, Stock and PTT Data\r\n\u7121\u6575\u7684 Join Probability\r\n\u50cf\u5fae\u5206\u822c\u7684 Conditional Probability\r\nGroupBy \u8207 Join Probability\r\n\u5169\u7a2e\u4e0d\u540c\u7684 DataFrame\uff1a\r\nStates Table\r\nPivot Table\r\nPivot Table \u8207 Conditional Probability\r\n\r\n** Hands-on Language Modeling\r\nN-Gram Models\r\nModel Smoothing\r\nbackoff models\r\nconstruct new Probability Model from old Probability Models\r\n\r\n** Hands-on Advanced Probability Models\r\nGraphical Models\r\nConditional Random Fields\r\nSturcture Learning Models (\u4e0d\u4e00\u5b9a\u6709\u6642\u9593\u8b1b\u5230)\r\nMarkov Random Fields (\u4e0d\u4e00\u5b9a\u6709\u6642\u9593\u8b1b\u5230)\r\n\r\n\r\n[3hrs] Learning From Text Data\r\n\r\n** Basic Concept of Text Mining\r\nword segmentation\r\nTF-IDF\r\nTerm-Document Matrix\r\nDocument Similarity\r\n\r\n** Streaming Processing\r\niterator and generator\r\ndata processing with redis\r\nunknown word extraction \r\nevent detection\r\n\r\n** Indexing and Retrieval\r\nLatent Semantic Indexing (SVD)\r\nEvent Clustering\r\nSimilarity Queries\r\n", "talk_perm": "Don't record my talk", "language": "Mandarin", "author": "c3h3.tw@gmail.com", "speech_type": "Workshop", "tags": "NLP, Text Mining, CRF, Streaming Data Mining, Probability Modeling, Language Modeling", "abstract": "\u672c\u8ab2\u7a0b\u5c07\u900f\u7531\u4e00\u9023\u4e32\u7684\u5be6\u4f5c\u7df4\u7fd2\uff0c\u5e36\u9818\u807d\u773e\u5b78\u7fd2 Probability Modeling \u548c Text Mining \u7684\u5404\u7a2e\u6280\u5de7\uff01\r\n\r\n\u5728\u8ab2\u7a0b\u4e2d\uff0c\u4f60\u5c07\u6703\u5b78\u5230\uff1a\r\n(1) \u5982\u4f55\u8a2d\u8a08\uff0c\u898f\u5283\uff0c\u4e26\u5efa\u69cb\u4e00\u500b\u6a5f\u7387\u6a21\u578b (\u4ee5\u7c21\u6613\u7684\u6a02\u900f\u4e0b\u6ce8\u6a21\u578b\u70ba\u4f8b)\r\n(2) Text Mining \u548c Language Modeling \u7684\u5404\u7a2e\u6280\u8853\r\n(3) \u6587\u672c\u5206\u6790\u6280\u5de7 (\u4ee5 PTT \u6216 Facebook \u7b49\u8ad6\u58c7\u6587\u7ae0\u70ba\u4f8b)\r\n(4) streaming \u6587\u672c\u5206\u6790\uff0c\u5982\u4f55\u52d5\u614b\u62bd\u53d6\u65b0\u8a5e\uff0c\u52d5\u614b\u89c0\u5bdf\u71b1\u9580\u95dc\u9375\u5b57\u8a5e (\u53ef\u80fd\u6703\u642d\u914d elasticsearch)\r\n(5) \u6587\u672c\u7684\u5206\u985e\u8207\u5206\u7fa4\u554f\u984c\uff0c\u5982\u4f55\u89e3\u6c7a\uff1f\u4ee5\u53ca\u5982\u4f55\u52a0\u901f\uff1f\r\n\r\n\r\n\u672c\u8ab2\u7a0b\u6709\u5169\u4f4d\u8b1b\u5e2b\uff1a\r\n\u5f35\u5bb6\u9f4a\uff0c\u9673\u5609\u8473\r\n\r\n", "additional_info": "http://pycontw.kktix.cc/events/play-data", "reviews": [{"comment": "definitely", "reviewer": "marr", "rank": 5}, {"comment": "It has the well design workshop and has clear learning path. It's definitely worth to be recommended for all level of Pythonists to join the party.", "reviewer": "stanley", "rank": 5}, {"comment": "good workshop topic.", "reviewer": "tjw", "rank": 5}, {"comment": "\u6e05\u695a\u7684\u4ecb\u7d39\uff0c\u76f8\u4fe1\u9019\u500b\u5de5\u4f5c\u574a\u53ef\u4ee5\u5b78\u7fd2\u5230\u8a31\u591a\u6771\u897f\u3002", "reviewer": "sosorry", "rank": 5}, {"comment": "pretty intense course design, good for both beginners and advanced learners.", "reviewer": "jin", "rank": 4}, {"comment": "This topic is truly useful for the project I am working on!", "reviewer": "yudalin", "rank": 5}], "id": 98, "duration": "Whole Day", "title": "Play Probability Modeling and Text Mining", "decision": "Accepted", "slide_perm": "Don't publish my slide", "audience_level": "Introduction"}, {"description": "In the talk, I'm going to run through many common examples in this manner:\r\n- What are we trying to solve? (In real examples from our daily job)\r\n- What are the problems derived if we solve the problem intuitively? (The beginners' way)\r\n- How can we apply design patterns to avoid those derived problems and make our code simple and flexible.\r\n\r\n", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "sushi@zenblip.com", "speech_type": "Regular Talk", "tags": "Idiom, Pattern", "abstract": "The Python community has learned a lot about how to use the language with good practices, and instead of telling you what each of the pattern's definition and philosophy are, this talk is going to give you a series of examples and good ways to solve the problems that I wish I knew when I was a beginner.", "additional_info": "http://legacy.python.org/workshops/1997-10/proceedings/savikko.html\r\nhttp://ivory.idyll.org/articles/advanced-swc/\r\nhttps://www.youtube.com/watch?v=Er5K_nR5lDQ\r\nhttps://github.com/faif/python-patterns", "reviews": [{"comment": "* It's always great to see the talk about suggested pythonic way to solve things!\r\n* The references are good.", "reviewer": "drakeguan", "rank": 4}, {"comment": "Every conference should has this kind of talk to encourage people to understand language more deeply.", "reviewer": "stanley", "rank": 3}, {"comment": "Good to see talk about design pattern and best practice from one's experience.", "reviewer": "liang2", "rank": 3}, {"comment": "a great topic for python developer and future pythonista.", "reviewer": "jin", "rank": 4}, {"comment": "Great topic. community needs the talk. ", "reviewer": "tim", "rank": 3}], "id": 96, "duration": "40 mins", "title": "Useful Idioms and Patterns in Practice", "decision": "Rejected", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "I'm in charge of content platform for video streaming service built in KKBOX. One of our task is to process media files on AWS before they get streamed. The processing is a workflow of several asynchronous/synchronous tasks on cloud. The idea of render farm management in VFX and animation industries are borrowed here to build a job (workflow) dispatching system. I will share how we make use of AWS SWF to build the system, the idea and benefits of job script and some real usages of it on processing for video and/or audio stream services.", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "drake.guan@gmail.com", "speech_type": "Regular Talk", "tags": "cloud computing, AWS, SWF, workflow", "abstract": "One of advantages about cloud computing is potentially huge-scale resources for your task. And it's especially beneficial to data driven process with heavy computing. In this talk, the idea of job script to orchestrate the execution of workflows across multiple computing nodes is introduced. An implementation based on AWS SWF (Simple Workflow) is described with examples of processing for music streaming and video streaming in KKBOX.", "additional_info": "* http://aws.amazon.com/swf/\r\n* https://github.com/spotify/luigi", "reviews": [{"comment": "Architecture Design and Experience Sharing of a real system. I am interesting in this. \r\n", "reviewer": "AlfredW", "rank": 3}, {"comment": "\u8b1b\u984c\u5f88\u597d\uff0c\u76f8\u4fe1\u4e00\u5b9a\u80fd\u6709\u5f88\u591a\u5be6\u52d9\u7d93\u9a57\u53ef\u4ee5\u5206\u4eab\u3002", "reviewer": "sosorry", "rank": 4}, {"comment": "We must could learn how to deal with big scale data on KKBOX.", "reviewer": "stanley", "rank": 4}], "id": 92, "duration": "40 mins", "title": "Orchestrating the execution of workflows for media streaming service and even more", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Extreme"}, {"description": "This talk is about how python is used in cloud computing as well as while configuring cloud infrastructure. It also gives brief about tools and technologies/libraries can be used for number of tasks while cloud development/execution. Developers and all python lovers are the perfect audience for this talk. They will get the brief about reliable stack of python based tools used in cloud development and also will be sharing the experience with python.", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "boom.shukla@gmail.com", "speech_type": "Regular Talk", "tags": "python, cloud computing, programming", "abstract": "Python in cloud. \r\nKind of services build with python.\r\nPython based tools used in deployment and configuration management for the cloud.\r\nFor every python lovers - How to create a python friendly cloud infrastructure with great reliable combination of many stable tools.\r\nStability.\r\nExperience sharing. ", "additional_info": "I recently presented my talk over python in PyGuj [ a python user group in Gujarat] in a kick start event. The agenda was sharing the best practices over python and also the personal experience on it. Moreover, I also shared the python's usage over cloud infrastructure and building cloud services through it.\r\n", "reviews": [{"comment": "* The topic is quite sexy.\r\n* But the provided abstract and description are not that clear, but just some adjacent terms.", "reviewer": "drakeguan", "rank": 3}, {"comment": "Sounds interesting.", "reviewer": "stanley", "rank": 4}, {"comment": "Kind of intro talk and not sure what lessons in it.", "reviewer": "keitheis", "rank": 2}, {"comment": "Since \"cloud\" is a big idea, I can see any exactly description above, so I think the goal of this talk is not clear.", "reviewer": "apua", "rank": 2}, {"comment": "Your talk would be very closely related to one of the main focus in Pycon 2015, because we have several cloud-computing service company as our sponsor. I think the application of the cloud service would be popular in our event. The more the better.", "reviewer": "Yen", "rank": 4}], "id": 93, "duration": "40 mins", "title": "Python for Cloud Services and Infrastructure Management", "decision": "Rejected", "slide_perm": "CC-BY-NC-SA", "audience_level": "Extreme"}, {"description": "We will present the concept of building, back-testing, and managing our fund of fund portfolio.", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "b95042@gmail.com", "speech_type": "Regular Talk", "tags": "financial, portfolio, management", "abstract": "Here we introduce how to use the python specific modules to build portfolio about fund of fund in real life. ", "additional_info": "", "reviews": [{"comment": "Too lack of detail, especially when related talks are available.", "reviewer": "liang2", "rank": 1}, {"comment": "Surprisingly in-complete submission.", "reviewer": "drakeguan", "rank": 1}, {"comment": "It's seldom to hear this kind of topic but it's so pity that lacking more detail information of talk and hard to understand what he will say.\r\n\r\n== from author's email, Benson Ho <b95042@gmail.com> ==\r\n\u60a8\u597d\r\n\u62b1\u6b49\u6253\u64fe\r\n\u7531\u65bc\u516c\u53f8\u8fd1\u671f\u6709\u4e8b\uff0c\u81ea\u89ba\u7121\u6cd5\u6e96\u5099\u5148\u524d\u65bc\u8cb4\u55ae\u4f4d\u6240\u63d0\u4e4bproposal \uff1aCC-BY-NC-SA\r\n\u5e0c\u671b\u80fd\u5e6b\u6211\u53d6\u6d88\u6b64\u6b21\u63d0\u6848\r\n\u5c0d\u65bc\u60a8\u7684\u4e0d\u4fbf\r\n\u6df1\u8868\u62b1\u6b49\r\n== from author's email ==", "reviewer": "stanley", "rank": 1}, {"comment": "I think it will be a wonderful lightning talk but regular talk.", "reviewer": "apua", "rank": 0}], "id": 94, "duration": "40 mins", "title": "Fund of fund management in python", "decision": "Rejected", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "This talk will be delivered by \u80e1\u5d07\u5049 and \u65b9\u9298\u6bc5. They are web programmers collaborating with designers or applying available online theme designs in projects. Hopefully both designers and programmers will benefit from this talk.", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "marr.tw@gmail.com", "speech_type": "Regular Talk", "tags": "Web, Front-end, Collaboration", "abstract": "Designers are trained and think differently from programmers. In general, designers work with static HTML while programmers work on codes and frameworks. Often, they hardly collaborate without bumping into each other.\r\n\r\nFor example, Django themes are flexible, but only for programmers. They are not designer friendly. Django templates hate designers who can't code. They need a better way to collaborate among projects, to maximize their productivity.\r\n\r\nDiazo is a smart approach to theming a website. It offers an interface between designers and developers, this brings separation of concerns, and helps to eliminate the gap. While Diazo is a technology developed by the Plone community, it can also work with various web frameworks and deploy with WSGI/Apache/Nginx. In this talk, we will showcase how Diazo works in real world, and the possibility to build a new ecosystem among web developers.", "additional_info": "Some existing demo references:\r\nhttp://www.babywith.me/\r\nhttp://www.mydoctor.tw/\r\nhttp://pypi.python.org/pypi/django_diazo", "reviews": [{"comment": "Sounds interesting.", "reviewer": "stanley", "rank": 4}, {"comment": "* A talk by a developer and a designer, hmm...!\r\n* I think we can expect something beautiful and inspiring in this talk then.", "reviewer": "drakeguan", "rank": 5}, {"comment": "always loved to see this kind of talk that connects people from different discipline, enabling pycon to reach broad audience.", "reviewer": "jin", "rank": 4}, {"comment": "I think this talk will be very worthy, since there will be two related talk in 40min\r\n", "reviewer": "apua", "rank": 5}], "id": 95, "duration": "40 mins", "title": "\u5de5\u7a0b\u5e2b\u6c92\u544a\u8a34\u8a2d\u8a08\u5e2b\u7684\u4e8b / Happy Together: Designer and Programmer", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "\u5229\u7528Python\u7684\u5206\u6790\u5de5\u5177\uff0c\u6574\u7406\u4ecb\u7d39\u4e26\u505a\u7c21\u55ae\u793a\u7bc4\uff0c\u8457\u91cd\u5728\u5df2\u6709\u7814\u7a76\u8b49\u660e\u53ef\u884c\uff0c\u6216\u96d6\u672a\u666e\u53ca\u4f46\u61c9\u5c0d\u81e8\u5e8a\u8f03\u6709\u5e6b\u52a9\u7684\u9805\u76ee\u4e0a\uff0c\u807d\u773e\u61c9\u53ef\u5b78\u7fd2\u5c0d\u624b\u4e0a\u8cc7\u6599\u505a\u7c21\u6613\u5206\u6790\r\n\r\n\u5fc3\u5f8b\uff1a\u5224\u65b7\u904b\u52d5\u5f37\u5ea6\u3001\u5fc3\u8df3\u8b8a\u7570\u7387\r\n\u8840\u58d3\uff1a\u9ad8/\u4f4e\u3001\u9577\u671f\u8b8a\u5316\uff08\u5b63\u7bc0\uff09\r\n\u8840\u7cd6\uff1a\u98ef\u524d\u3001\u98ef\u5f8c\r\n\u6d3b\u52d5\u8a08\uff1a\u7761\u7720\u5206\u6790\u3001\u6d3b\u52d5\u8fa8\u5225\r\n\r\n\u5165\u9580\u96e3\u5ea6\uff0c\u4e0d\u9700\u7279\u6b8a\u80cc\u666f\u77e5\u8b58", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "bright.moe@gmail.com", "speech_type": "SciPy Talk (English Only)", "tags": "healthcare, medicine, data analysis", "abstract": "The market of \"Wearables\" is growing fast. Data generated from fitness bands, mobile phones, and other wearable devices increases every day. However, can doctors really use these information to diagnose diseases, prevent injuries, or promote health?\r\nIn this talk, I will apply analytic tools in Python on blood pressure, blood sugar, heart rate, and data from actimeter (accelerometer), trying to bridge the gap between clinical practice and modern gadgets.", "additional_info": "", "reviews": [{"comment": "All keywords are hot topics nowadays. Looking forward to see how deep the talk gonna to cover.", "reviewer": "yuanchao", "rank": 4}, {"comment": "Data analytics for medical research is a practical subject.  The review expect the audience can transfer the lessons learnt to other applications with ease.", "reviewer": "yungyuc", "rank": 3}, {"comment": "Fits as a SciPy talk and timely topic. However the abstract lacks methods/results/discussions to evaluate how the talk contrubutes to our audience. Better to redirect to Workshop or LT.", "reviewer": "whosaysni", "rank": 3}], "id": 97, "duration": "40 mins", "title": "Data Analysis in Wearable Technologies", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "Agilearning is a content network of data science learning resources. \r\n\r\nIn the past 5 months, we developed a platform for people to share their great tutorials. Learners can watch videos and slides and play around with the codes and scripts, without struggling to set up the environment. \r\n\r\nSo far, Agilearning has received great responses from local community users and already acquired hundreds of online users.  We also have a paying customer from commercial bank and news companies to learn data mining and text mining skills.\r\n\r\nAgilearning project initially started as a small project to complete at Docker Global Hack Day in November 2014. It was awarded as Taipei's first place project. \r\n", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "chihchengliang@gmail.com", "speech_type": "Lightning Talk", "tags": "online learning, data science, docker", "abstract": "Ever want to play Sudoku using computer vision? Ever want to learn machine learning skills with readily available coding environment? These now can be all done on your browser. With simple clicks, you can learn data science on the fly. Come and embrace the awesomeness of Agilearning!", "additional_info": "http://agilearning.io/", "reviews": [{"comment": "It's very suitable for lightning talk. Audience will have fun.", "reviewer": "stanley", "rank": 5}, {"comment": "interesting topic. ", "reviewer": "tjw", "rank": 5}, {"comment": "Very exciting topic.", "reviewer": "keitheis", "rank": 5}, {"comment": "Read the description twice and try to match it with the abstract, worrying that this talk could be two topics have a little in common; it appears as a personal geek project from the abstract part, yet looks like a company advertisement for the description. Well, good to see both in a  lighting talk.", "reviewer": "jin", "rank": 3}, {"comment": "", "reviewer": "yudalin", "rank": 0}], "id": 100, "duration": "40 mins", "title": "Learning machine learning Python agilely", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "\u672c\u8eab\u662fPython\u91cd\u5ea6\u611b\u597d\u8005\uff0c\u4f46\u5728\u7814\u7a76\u4e0a\uff0c\u537b\u5f85\u5728C/C++\u7576\u9053\u7684\u96fb\u5b50\u8a2d\u8a08\u81ea\u52d5\u5316(EDA)\u9818\u57df\uff0c\u9019\u500btalk\u6211\u4e3b\u8981\u60f3\u5206\u4eab\u7684\u662f\uff1a\u6211\u5728\u7814\u7a76\u6240\u4e43\u81f3\u5de5\u4f5c\u671f\u9593\uff0c\u5982\u4f55\u76e1\u53ef\u80fd\u5730\u904b\u7528Python\u5728EDA\u7684\u7814\u7a76\u4e0a\uff0c\u9019\u6bd4\u8f03\u5c6c\u65bc\u4e00\u500b\u7d93\u9a57\u7684\u5206\u4eab\uff0c\u7576\u7136\u6703\u6709\u5c11\u6578\u6bd4\u8f03\u5c08\u696d\u7684\u77e5\u8b58\u548c\u5de5\u5177\u4ecb\u7d39\uff0c\u800c\u76ee\u524d\u7684\u69cb\u60f3\u5c07\u6db5\u84cb\u4e0b\u5217\u5e7e\u500b\u4e3b\u984c\uff08\u540c\u6642\u4e5f\u662f\u9019\u6bb5\u671f\u9593\u7684\u4e00\u4e9b\u6210\u679c\uff09\uff1a\r\n\r\n1. \u5229\u7528Python\u64b0\u5bebscript\u4ee5\u5e6b\u52a9\u5be6\u9a57\u9032\u884c\r\n    * \u5982\u4f55\u904b\u7528\u7c21\u55ae\u7684Python\u5e6b\u52a9\u5b8c\u6210flow automation\u6216\u64b0\u5bebparser\u548cconverter\r\n    * \u540c\u6642\u5be6\u505a\u4e86\u4e00\u500b\u5c0ftool\uff0dscript-king\r\n2. multiset constraint solving\uff08\u591a\u91cd\u96c6\u7d04\u675f\u6c42\u89e3\uff09\r\n    * \u9019\u4e3b\u8981\u662f\u6211\u7684\u7562\u696d\u78a9\u58eb\u8ad6\u6587\uff0c\u63d0\u51fa\u4e86\u4e00\u7a2e\u65b0\u7684constraint\u7cfb\u7d71\uff0c\u53ef\u4ee5\u6c42\u89e3subset-sum    \r\n      problem, bin-packing problem, knapsack problem, PBC ... \r\n    * \u7528Python\u5be6\u505a\u4e86\u4e00\u500b\u6c42\u89e3\u5668\uff0c\u540c\u6642\u9019\u4e5f\u662f\u4e00\u500bPython\u5957\u4ef6\r\n3. Symmetry encoding (\u5c0d\u7a31\u6027\u7de8\u78bc)\r\n    * \u5728EDA\u9818\u57df\u4e2d\uff0c\u591a\u503c\u5c64\u6b21\u7684\u8a2d\u8a08\u662f\u76f4\u89ba\u4e14\u5feb\u901f\u7684\uff0c\u4f46\u7de8\u78bc\u52e2\u5fc5\u6210\u70ba\u91cd\u8981\u8b70\u984c\uff0c\u9019\u500b\u7814\u7a76  \r\n      \u4e3b\u8981\u63a2\u8a0e\u5982\u4f55\u5728\u7de8\u78bc\u4e2d\u8ffd\u6c42\u6700\u5927\u5c0d\u7a31\u6027\r\n    * \u7528Python\u5be6\u505a\u4e86\u4e00\u500b\u7de8\u78bc\u5668\uff0c\u76ee\u524d\u652f\u63f4\u4e09\u7a2e\u591a\u503c\u51fd\u6578\u7de8\u78bc\uff0c\u7576\u7136\u5305\u542b\u5c0d\u7a31\u6027\u7de8\u78bc\r\n4. \u96fb\u8def\u5206\u6790\u6a21\u64ec\u5668 - minickt\r\n    * \u4e3b\u8981\u662f\u53c3\u52a0\u4e16\u754c\u7a4d\u9ad4\u96fb\u8def\u96fb\u8166\u8f14\u52a9\u7af6\u8cfd\u6642\uff0c\u5be6\u505a\u4f86\u5206\u6790\u96fb\u8def\u7684\u5de5\u5177\uff08\u4f7f\u7528Python\u5beb\r\n      \u6210\uff09\uff0c\u53ef\u4ee5\u5c0dGate-level\u7684\u96fb\u8def\uff0c\u9032\u884c\u5206\u6790\u3001\u6a21\u64ec\u3001\u64cd\u4f5c\u548c\u5c11\u8a31\u7684\u6b63\u898f\u9a57\u8b49\r\n\r\n\u91dd\u5c0d\u6bcf\u500b\u4e3b\u984c\u6703\u5206\u6210\u5e7e\u500b\u90e8\u5206\u4ecb\u7d39\uff1a\r\n1. \u7814\u7a76\u52d5\u6a5f\r\n2. \u7814\u7a76\u7c21\u4ecb\r\n3. \u5982\u4f55\u4f7f\u7528Python\u4f86\u5e6b\u52a9\u7814\u7a76\r\n4. \u6210\u679c\u8207\u5de5\u5177\u5c55\u793a\r\n\r\n\u9810\u8a2d\u76ee\u6a19\u7fa4\u773e\uff1a\r\n1. \u60f3\u8f15\u9b06\u807d\u7d93\u9a57\u8ac7\u7684\u6703\u773e\r\n2. \u60f3\u4e86\u89e3\u5982\u4f55\u5229\u7528Python\u52a0\u901f\u548c\u5e6b\u52a9\u7814\u7a76\u7684\u670b\u53cb\r\n3. EDA\u6216CAD\u9818\u57df\u7684\u670b\u53cb\r\n4. \u7814\u7a76\u6f14\u7b97\u6cd5\u7684\u670b\u53cb", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "dokelung@gmail.com", "speech_type": "Regular Talk", "tags": "EDA, CAD, algorithm", "abstract": "EDA\u9818\u57df\u4e00\u76f4\u662fC/C++\u7684\u5929\u4e0b\uff0c\u5f9e\u696d\u754c\u5230\u5b78\u754c\uff0c\u7121\u4e00\u4f8b\u5916\u3002\r\n\u4e14\u770b\u4e00\u500b\u71b1\u611bPython\u7684\u5c0f\u5b50\u5982\u4f55\u7121\u6240\u4e0d\u7528\u5176\u53ca\u5730\u4f7f\u7528Python\uff0c\u751a\u81f3\u53cd\u5ba2\u70ba\u4e3b\uff0c\u95d6\u51fa\u4e00\u7247\u5929\u4e0b\u3002\r\n\u9019\u5834\u6f14\u8b1b\u4e2d\uff0c\u4f60\u5c07\u6703\u770b\u5230\u4e00\u500b\u5c0d\u65bcPython\u75f4\u8b0e\u7684\u4eba\uff0c\u5206\u4eab\u4ed6\u5728EDA\u9818\u57df\u4e2d\u5805\u6301\u5730\u4f7f\u7528Python\u596e\u9b25\u7684\u7d93\u9a57\u548c\u6210\u679c\u3002\r\n\u5982\u679c\u60a8\u662fEDA\u7684\u540c\u884c\uff0c\u60a8\u53ef\u4ee5\u4f86\u770b\u770b\u4ed6\u662f\u5982\u4f55\u7528Python\u5beb\u51fa\u4e00\u500b\u7c21\u55ae\u4f46\u662f\u597d\u7528\u7684\u96fb\u8def\u5206\u6790\u5de5\u5177\uff0c\u4e5f\u53ef\u4ee5\u4f86\u770b\u770b\u5c0d\u7a31\u6027\u7de8\u78bc\u5982\u4f55\u5c0d\u96fb\u8def\u9032\u884c\u7279\u6027\u4e0a\u7684\u512a\u5316\u3002\r\n\u5982\u679c\u60a8\u662f\u559c\u6b61\u6f14\u7b97\u6cd5\u7684\u670b\u53cb\uff0c\u60a8\u53ef\u4ee5\u4f86\u770b\u770b\u9664\u4e86\u7dda\u6027\u898f\u5283\u4e4b\u5916\uff0c\u9084\u6709\u54ea\u4e00\u7a2e\u65b0\u7684\u6a21\u578b\u5316\u65b9\u5f0f\u53ef\u4ee5\u6c42\u89e3K-\u5206\u5272\u554f\u984c\u3001\u80cc\u5305\u554f\u984c\u3001\u88dd\u7bb1\u554f\u984c\u3001\u865b\u64ec\u5e03\u6797\u898f\u5283\u7b49\uff0c\u540c\u6642\u9084\u6709\u4e00\u500b\u73fe\u6210\u7684Python\u5957\u4ef6\u53ef\u4ee5\u99ac\u4e0a\u4f7f\u7528\uff01\r\n\u5982\u679c\u60a8\u60f3\u8981\u4e86\u89e3\u5982\u4f55\u4f7f\u7528Python\u4f86\u64b0\u5bebscript\u5e6b\u52a9\u52a0\u901f\u60a8\u7684\u5be6\u9a57\uff0c\u4e00\u5b9a\u8981\u4f86\u4e86\u89e3\u4e00\u4e0bscript-king\u9019\u500b\u5de5\u5177\u3002\r\n\u7576\u7136\uff0c\u5982\u679c\u60a8\u53ea\u662f\u4e00\u500b\u559c\u611bPython\u7684\u670b\u53cb\uff0c\u4e5f\u5341\u5206\u6b61\u8fce\u4f86\u4ea4\u4ea4\u670b\u53cb\uff0c\u76f8\u4e92\u4ea4\u6d41\u3002", "additional_info": "[ my paper ]\r\nsymmetry encoding : http://alcom.ee.ntu.edu.tw/publications/iccad13-symm.pdf\r\nmultiset constraint solving : http://handle.ncl.edu.tw/11296/ndltd/68703891060081946284\r\n\r\n[ my github ]\r\nminickt : https://github.com/dokelung/minickt\r\nscript-king : https://github.com/dokelung/script-king\r\n\r\n[ personal page ]\r\nhttp://dokelung-blog.logdown.com/pages/about-me", "reviews": [{"comment": "Well-written description and a topic that might interests friends in relative industrial fields.", "reviewer": "liang2", "rank": 3}, {"comment": "Awesome!", "reviewer": "marr", "rank": 5}, {"comment": "Sounds interesting.", "reviewer": "stanley", "rank": 4}, {"comment": "EDA sounds so interesting, with Python!", "reviewer": "keitheis", "rank": 5}, {"comment": " \u9019\u7a2e\u7406\u8ad6\u8207\u5be6\u969b\u7d50\u5408\u7684\u8b1b\u984c\u6b63\u662f\u6211\u5011\u9700\u8981\u7684\u3002", "reviewer": "sosorry", "rank": 5}, {"comment": "Attractive and interesting topic.\r\n", "reviewer": "jin", "rank": 4}, {"comment": "Really a great topic for the maker trend.", "reviewer": "yudalin", "rank": 4}], "id": 102, "duration": "40 mins", "title": "Python\u8207\u96fb\u5b50\u8a2d\u8a08\u81ea\u52d5\u5316\uff1a\u7528\u611b\u8207\u5805\u6301\u5be6\u73fe\u5c08\u696d", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "Outline:\r\n  - What's PyCuber\r\n  - Rubik's Cube Notation\r\n  - The architecture of Rubik's Cube algorithm in PyCuber\r\n  - The things we want\r\n  - Implementing object's magic functions\r\n  - reverse, mirror, optimise\r\n  - Summarise", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "adrianliaw2000@gmail.com", "speech_type": "Regular Talk", "tags": "PyCuber, Rubik's Cube", "abstract": "PyCuber is a Python package for dealing with Rubik's Cubes, which also contains a built-in solver. Behind these, the implementation of Rubik's Cube's algorithms (formulae) are really important, it provides several useful functions like reverse, mirror, optimise, this talk will cover all these stuffs.", "additional_info": "http://github.com/adrianliaw/PyCuber", "reviews": [{"comment": "The topic is interesting. After reading some given source code, it *did* implement the solver with some magic function. And I think the experience worth sharing.", "reviewer": "liang2", "rank": 4}, {"comment": "It definitely worth to spend the time and listen it.", "reviewer": "stanley", "rank": 4}, {"comment": "I think the topic and speaker is so much fun. I'd love to see it there.", "reviewer": "keitheis", "rank": 3}, {"comment": "What I like about this presentation is that it is the author explaining  his own project, this usually comes with enthusiasm and inspirations. ", "reviewer": "tjw", "rank": 5}, {"comment": "cool", "reviewer": "jin", "rank": 4}, {"comment": "He will be the youngest and coolest speaker in PyCon TW.", "reviewer": "sponsor", "rank": 5}, {"comment": "It's a good package ! nice sharing !", "reviewer": "c3h3", "rank": 5}, {"comment": "Interesting for a Rubik's Cubes dump likes me. I have never solved Rubik's Cubes since I was born.", "reviewer": "yudalin", "rank": 4}], "id": 99, "duration": "40 mins", "title": "The Implementation of Rubik's Cube Formula in PyCuber", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "\u6f14\u8b1b\u7684\u5927\u7db1\u5982\u4e0b\uff1a\r\n\r\n- \u4ecb\u7d39 HDF5 \u7279\u8272\r\n- \u4ecb\u7d39 h5py\uff08\u76f4\u63a5\u5be6\u4f5c HDF5 API\uff09\u7528 Python \u64cd\u4f5c HDF5 \u8cc7\u6599\r\n- \u4ecb\u7d39 PyTables \uff08\u652f\u63f4\u4e00\u4e9b sorting\u3001index \u7b49\u67e5\u8a62\u529f\u80fd\uff09\r\n- \u70ba\u4ec0\u9ebc\u4e0d\u7528\u5167\u5efa\u7684 pickle\uff1f\r\n- \u70ba\u4ec0\u9ebc\u4e0d\u7528 Database Ex MongoDB\u3001SQLite\u3001PostegreSQL\uff1f\r\n- \u60c5\u5883\uff1aHDF5 X pandas\uff0c\u53ef\u80fd\u662f\u591a\u6578\u4eba\u6700\u6703\u7528\u5230\u7684\u60c5\u5883\r\n  \u3000\u3000\u3000\u4f7f\u7528 PyTables\uff0c\u4e26\u8b1b\u89e3\u4f7f\u7528 h5py \u7684\u56f0\u96e3\u9ede\r\n- \u60c5\u5883\uff1aHDF5 X numpy\uff0c\u5c0d\u5927\u578b\u77e9\u9663\u8a08\u7b97\r\n  \u3000\u3000\u3000\u5728\u8a08\u7b97\u5927\u578b\u5f71\u50cf\uff08\u8d85\u904e\u4e00\u5104\u50cf\u7d20\uff09\u4e2d\u5340\u57df\u7279\u5fb5\uff0c\u4f7f\u7528 HDF5 \u964d\u4f4e\u8a18\u61b6\u9ad4\u4f7f\u7528\u91cf\uff0c\r\n\u3000\u3000\u3000  \u4f7f\u5f97\u5e73\u884c\u5316\u8b8a\u70ba\u53ef\u80fd\u3002\u5c0d\u591a\u5f35\u5716\u8a08\u7b97\u6642\u5728 16 cores \u4e0a\u6a5f\u5668\u80fd\u9054\u5230 10 \u500d\u7684\u6548\u80fd\u63d0\u6607\u3002\r\n- \u60c5\u5883\uff1aHDF5 X deep learning\uff0c\u8ffd\u8e64\u6a21\u578b\u5b78\u7fd2\u8a18\u9304\r\n  \u3000\u3000\u3000Deep Learning \u662f\u8907\u96dc\u7684\u985e\u795e\u7d93\u7db2\u8def\uff0c\u53ef\u4ee5\u5b78\u7fd2\u7684\u53c3\u6578\u5e38\u5728\u5341\u842c\u5230\u767e\u842c\u91cf\u7d1a\uff0c\r\n\u3000\u3000\u3000  \u800c\u5e38\u898b\u4f7f\u7528 gradient decent \u5b78\u7fd2\uff0c\u900f\u904e\u8fed\u4ee3\u7684\u65b9\u5f0f\u66f4\u65b0\u53c3\u6578\u3002\r\n\u3000\u3000\u3000  \u8981\u8ffd\u8e64\u9019\u9ebc\u591a\u53c3\u6578\u5c31\u53ef\u4ee5\u4f7f\u7528 HDF5 \u8a18\u9304\u3002\r\n\r\n\u70ba\u4ec0\u9ebc\u7cfb\u5217\u4e4b\u6240\u4ee5\u6703\u6311 pickle \u8207 database \u6709\u4ee5\u4e0b\u7684\u539f\u56e0\uff1apickle \u597d\u8655\u5728\u65bc hashable\r\nPython \u7269\u4ef6\u90fd\u80fd\u76f4\u63a5\u8f49\uff0c\u4e5f\u662f\u5be6\u52d9\u4e0a\u6700\u591a\u4eba\u7528\u7684\uff0c\u4f46\u5b83\u7684\u8a2d\u8a08\u4e26\u4e0d\u662f\u70ba\u4e86\u5feb\u901f\u5b58\u53d6\u5927\u578b\u8cc7\r\n\u6599\uff0c\u6545\u5728\u4e00\u4e9b\u8907\u96dc\u7684\u7d50\u69cb\uff0c\u6216\u8cc7\u6599\u5927\u5c0f\u5728 GB \u7d1a\u4ee5\u4e0a\u5c31\u6703\u6709\u554f\u984c\u3002Database \u662f\u6700\u591a\u4f7f\u7528\u8005\r\n\u60f3\u554f\u984c\uff0c\u9019\u90e8\u4efd\u7db2\u8def\u4e0a\u4e5f\u6c92\u6709\u4ec0\u9ebc\u6bd4\u8f03\uff08\u56e0\u70ba\u61c9\u7528\u5dee\u5f88\u591a\uff09\u4f46\u5728\u9019\u500b\u8b1b\u984c\u5c31\u6703\u7528\u5be6\u969b\u7684\r\nbenchmark \u4f86\u8209\u4f8b\u7a76\u7adf\u5dee\u7570\u6709\u591a\u660e\u986f\uff0c\u63d0\u4f9b\u807d\u773e\u5728\u672a\u4f86\u898f\u5283\u5206\u6790\u6642\u7684\u53c3\u8003\u3002", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "ccwang002@gmail.com", "speech_type": "Regular Talk", "tags": "HDF5, Numpy", "abstract": "HDF5 \u662f\u4e00\u500b\u7528\u4f86\u5b58\u53d6\u6578\u64da\u7684\u51fd\u5f0f\u5eab\uff0cMatlab \u7684\u5132\u5b58\u683c\u5f0f (.mat) \u5373\u57fa\u65bc\u8a72\u683c\u5f0f\u8a2d\u8a08\u3002\u76f8\u8f03\u65bc\u591a\u6578\u4eba\u719f\u6089\u7684 Database\uff0cHDF5 \u7684\u529f\u80fd\u66f4\u70ba\u55ae\u7d14\uff0c\u5b83\u53ea\u8ca0\u8cac\u505a\u597d\u8b80\u53d6\u3001 \u5132\u5b58\u8cc7\u6599\u800c\u4e26\u4e0d\u63d0\u4f9b Query\u3001Join \u7b49\u64cd\u4f5c\uff0c\u4f46\u4e5f\u56e0\u6b64\u5728 I/O \u8868\u73fe\u4e0a\u66f4\u70ba\u51fa\u8272\u3002\u5e38\u898b\u7684\u61c9\u7528\u70ba sensor\u3001\u5be6\u9a57\u6578\u64da\u8a18\u9304\u8207\u50b3\u8f38\u3001\u5927\u77e9\u9663\u7684\u64cd\u4f5c\u7b49\u3002HDF5 \u5728 Python \u7684\u63a5\u53e3\u5be6\u4f5c\u4e3b\u8981\u6709 PyTables \u53ca h5py\uff0c\u5169\u8005\u91dd\u5c0d\u4e0d\u540c\u7684\u4f7f\u7528\u60c5\u5883\u6709\u4e0d\u540c\u7684\u8a2d\u8a08\u3002\r\n\r\n\u5728\u672c talk \u4e2d\uff0c\u6703\u5148\u4ecb\u7d39 HDF5 \u683c\u5f0f\u8207\u7279\u8272\uff0c\u5728 Python \u4e2d\u5982\u4f55\u7528 PyTables\u3001h5py \u5b58\u53d6 \u8207\u7570\u540c\uff0c\u4ee5\u53ca\u8207\u4e3b\u6d41\u8cc7\u6599\u5eab\u3001pickle \u7269\u4ef6\u4e32\u6d41\u5316\u7684\u6bd4\u8f03\u3002\u6700\u5f8c\u793a\u7bc4 HDF5 \u5982\u4f55\u6709\u6548\u7684\u5b8c\u6210 \u4ee5\u4e0b\u5e7e\u500b\u60c5\u5883\u4e2d\u7684\u554f\u984c\uff1a\u5b58\u53d6 pandas DataFrame \u7269\u4ef6\u3001\u5728\u5927\u578b\u77e9\u9663\u9032\u884c\u5340\u57df\u8a08\u7b97\u3001\u8ffd\u8e64 Deep Learning \u5b78\u7fd2\u8a18\u9304\u3002\r\n", "additional_info": "- HDF5 \u3001h5py \u6559\u5b78\u53c3\u8003 Andrew Collette, Python and HDF5, Oreilly \u4e00\u66f8\r\n- PyTables \u53c3\u8003\u5b98\u7db2\u4ecb\u7d39\r\n- \u4f7f\u7528\u60c5\u5883\u70ba\u81ea\u8eab\u7d93\u9a57\u5206\u4eab", "reviews": [{"comment": "* I have to admit that this is the most descriptive description and abstract I have ever reviewed in this conference!\r\n* We all know that one way to tell the great programmer and normal one is how he/she handle tasks, what algorithms get used, and, of course, what data structure are applied. This is the talk about data structure!\r\n* Deep learning!? No kidding!", "reviewer": "drakeguan", "rank": 5}, {"comment": "hopefully the speaker would also give a talk like this in a scipy track.", "reviewer": "jin", "rank": 5}, {"comment": "Interesting\uff01HDF5 rocks\uff01", "reviewer": "c3h3", "rank": 5}, {"comment": "Sounds powerful and attractive.", "reviewer": "yudalin", "rank": 5}], "id": 24, "duration": "40 mins", "title": "Python HDF5 Use Case", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "A python version of my previous [R meetup talk](http://www.meetup.com/Taiwan-R/events/218910632/), and tend to give more hands-on baseball data analysis.\r\nA Taiwan branch of [Baseball Hack Day](http://www.baseballhackday.com/) is my goal.\r\n\r\np.s. Back to the future 2015 and Cubs WIN!!!!!", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "summit.suen@gmail.com", "speech_type": "Regular Talk", "tags": "#datascience, #sabermetrics, #baseball", "abstract": "Have you ever notice that how many numbers had been collected and recorded during a sports game? Not only practice makes perfect; for modern sports players, numbers plays an even important role in improving their performance. This talk will bring a brief introduction of sports data analysis to you, and hands-on practice. \r\n- Introduction to Sabermetrics / Mathletics / Money ball\r\n- Play baseball data (not only R, now with python)\r\n- A simple practice: Let's explore MLB/CPBL data! ", "additional_info": "http://suensummit.github.io/playBall/MLDM_20150105.html\r\nhttp://youtu.be/PjC2Q8f6CMs\r\nhttp://suensummit.github.io/playBallDeeper/", "reviews": [{"comment": "* I don't see any reason we should say no to this proposal after checking the reference: http://www.meetup.com/Taiwan-R/events/218910632/", "reviewer": "drakeguan", "rank": 4}, {"comment": "It combines data science and sport to become an Interesting topic. It's worth to pay our time on it.", "reviewer": "stanley", "rank": 4}, {"comment": "I saw a perfect marriage of  python and R in this topic, how could i say no to it.", "reviewer": "jin", "rank": 4}, {"comment": "What's the excitement that R and Python can bring in PyCon 2015? Let's check it out!", "reviewer": "yudalin", "rank": 5}], "id": 103, "duration": "40 mins", "title": "Play Data, Play Ball!", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "This talk will provide a tutorial for the GDB Python API, a discussion of the theory of operation of source level debuggers for compiled language and will contain many examples drawing from experience debugging programs across C/C++ and Python boundaries and answering frequently asked questions regarding GDB scripting problems on StackOverflow[1].\r\n\r\nThe techniques presented will be applicable both for debugging server software running in the cloud and for bare-metal deep embedded development on what we now lovingly call the internet of things.\r\n", "talk_perm": "CC-BY-NC-SA", "language": "English", "author": "scottt.tw@gmail.com", "speech_type": "Regular Talk", "tags": "GDB, DWAF, embedded", "abstract": "Target Audience: Developers that use both C/C++ and Python\r\n\r\nPython is the scripting language of choice for GDB but debugger scripting and programmatic debugging is underutilized in general because not enough developers are both GDB power users and familiar with Python. This talk aims to remedy that.\r\n\r\n", "additional_info": "* The GDB Python API : https://sourceware.org/gdb/onlinedocs/gdb/Python-API.html#Python-API\r\n\r\n* StackOverflow Questions tagged as \"gdb\" that the speaker had answered:  http://stackoverflow.com/search?tab=votes&q=user%3a676030%20%5bgdb%5d", "reviews": [{"comment": "I expect this kind of talk should be extreme level would attract more people. ", "reviewer": "stanley", "rank": 5}, {"comment": "The topic is interesting and might help shorten the gap of using gdb for python debugging. \r\n", "reviewer": "tjw", "rank": 4}, {"comment": "Great context but too hard for the beginners.", "reviewer": "yudalin", "rank": 3}, {"comment": "Every engineer needs the knowledge ", "reviewer": "tim", "rank": 5}], "id": 104, "duration": "40 mins", "title": "Programmatic Debugging with GDB and Python", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "test11", "talk_perm": "Don't record my talk", "language": "English", "author": "daikeren+program@gmail.com", "speech_type": "Regular Talk", "tags": "test, test", "abstract": "test", "additional_info": "", "reviews": [{"comment": "Review test of wenlien1001.\r\nupdate from 3 to 2.\r\nupdate from 2 to 5. Error, rank should be between 3 and -3.\r\nupdate from 2 to 0.\r\nupdate comments, score from 5 to 4.", "reviewer": "wenlien1001", "rank": 4}, {"comment": "Review test by Stanley.\r\nUpdate Score from 0 to 5. Error\r\nUpdate Comment only. Successfully", "reviewer": "stanley", "rank": 5}, {"comment": "Review Test of yuda\r\n\r\nupdate the comment. \r\n\r\n", "reviewer": "yudalin", "rank": 3}, {"comment": "Review test\r\n\r\nEDIT: change comment.", "reviewer": "liang2", "rank": 0}, {"comment": "A test comment: The best test proposal ever. But let's see if I can change the rank.", "reviewer": "marr", "rank": 5}, {"comment": "Test the review system.", "reviewer": "AlfredW", "rank": 0}, {"comment": "Review the test \r\nNo comment(EDIT?)", "reviewer": "sosorry", "rank": 3}], "id": 106, "duration": "40 mins", "title": "test", "decision": "Rejected", "slide_perm": "Don't publish my slide", "audience_level": "Introduction"}, {"description": "\u5927\u7db1\u5982\u4e0b\uff1a\r\n\r\n* \u7c21\u4ecb LaTeX \u6392\u7248\r\n\r\n* LaTeX \u7684\u5b57\u578b\r\n\r\n* \u4e2d\u6587\u5b57\u578b\u7de8\u78bc\r\n\r\n* \u8b93 LaTeX \u652f\u63f4\u4e2d\u6587\r\n** \u76f4\u63a5\u8b80\u53d6 Unicode: XeLaTeX\r\n** \u7d66\u4e2d\u6587\u7a7f\u5c0f\u978b Fitting Chinese Characters into LaTeX\r\n** cwTeX\r\n\r\n* \u70ba\u4ec0\u9ebc\u9019\u500b\u6642\u4ee3\u9084\u662f\u8981\u5beb LaTeX \u4e2d\u6587\u524d\u7f6e\u8655\u7406\u5668\uff1f\r\n\r\n* pycwtex \u67b6\u69cb\r\n\r\n\r\n* \u7d50\u8a9e\r\n", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "alberthuang314@gmail.com", "speech_type": "Lightning Talk", "tags": "latex,unicode", "abstract": "\u4ee5\u5f80 LaTeX \u7684\u4e2d\u6587\u524d\u7f6e\u8655\u7406\u5668\u70ba\u4e86\u8ffd\u6c42\u6548\u7387\uff0c\u90fd\u662f\u7528 C \u8a9e\u8a00\u6240\u64b0\u5beb\u7684\uff0c\u4f46\u662f C\r\n\u8a9e\u8a00\u8655\u7406\u5b57\u4e32\u76f8\u7576\u75db\u82e6\uff1b\u76f8\u5c0d\u65bc C \u8a9e\u8a00\uff0cPython \u8655\u7406\u5b57\u4e32\u7684\u80fd\u529b\u975e\u5e38\u5f37\u5927\u8207\u65b9\r\n\u4fbf\uff0c\u540c\u6642\u7531\u65bc\u8fd1\u5e74\u4f86\u96fb\u8166\u901f\u5ea6\u7684\u6f14\u9032\uff0c\u8b93 Python \u7684\u8655\u7406\u901f\u5ea6\u52a0\u5feb\u5230\u80fd\u5920\u63a5\u53d7\u7684\r\n\u7a0b\u5ea6\u3002\u8b1b\u8005\u71b1\u611b cwTeX \u9019\u500b LaTeX \u4e2d\u6587\u524d\u7f6e\u8655\u7406\u7cfb\u7d71\u6240\u6392\u7248\u51fa\u4f86\u7684\u9ad8\u54c1\u8cea\uff0c\u4e5f\r\n\u71b1\u611b Python \u7684\u65b9\u4fbf\u6027\uff0c\u56e0\u6b64\u4f7f\u7528 cwTeX \u516c\u958b\u7684\u6a94\u6848\u7d50\u69cb\u5beb\u6210\u4e86 pycwtex \u9019\u500b\r\n\u8edf\u9ad4\u5c08\u6848\u4ee5\u652f\u63f4 LaTeX \u6392\u7248 Unicode \u4e2d\u6587\uff0c\u8b93\u4f7f\u7528\u8005\u6709\u66f4\u591a\u4e2d\u6587 Unicode\r\nLaTeX \u7684\u9078\u64c7\u3002\u5728\u9019\u500b\u8b1b\u984c\u4e2d\uff0c\u8b1b\u8005\u6703\u7c21\u4ecb LaTeX \u6392\u7248\u7cfb\u7d71\u4ee5\u53ca\u5176\u5b57\u578b\u7d50\u69cb\uff0c\r\n\u5982\u4f55\u8b93 LaTeX \u7528\u524d\u7f6e\u8655\u7406\u7684\u65b9\u5f0f\u652f\u63f4 Unicode(\u6216\u662f Big5)\uff0c\u4e26\u4e14\u4ecb\u7d39 pycwtex\r\n\u5167\u90e8\u7684\u67b6\u69cb\uff0c\u7aed\u8aa0\u6b61\u8fce\u5927\u5bb6\u4f86\u4f7f\u7528\uff01\r\n", "additional_info": "Language is not decided yet, could be in English or Mandarin. ", "reviews": [{"comment": "Not sure, but variety is good.", "reviewer": "tjw", "rank": 4}, {"comment": "It should be fine for lightning talk.", "reviewer": "stanley", "rank": 4}], "id": 33, "duration": "40 mins", "title": "Preprocessing Chinese Characters for LaTeX: pycwtex", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "** Navigation, Searching, Recommendation\r\nWhat is Recommendation? and the problems behind it? \r\nIn the era, there is no recommendation system ... (YAHOO, GOOGLE, FACEBOOK)\r\nFrom business intuition to user behavior orientation\r\nStatic, Passive, Aggressive \r\n\r\n** Where might be a recommendation system in a website !\r\n\r\n** The four important questions behind system: \r\nRecommendate What?\r\nTo Who?\r\nHow ?\r\nHow to evaluate ?\r\n\r\n** Math behind system --- Brief Introduction to Machine Learning \r\nThe Procesure of Mathematical Modeling of Real World\r\nData to Vector ? \r\nTypical Problems in Machine Learning\r\nSupervised Learning\r\nUnsupervised Learning\r\nSemi-supervised Learning\r\n\r\n** Math behind system --- Navigation, Searching, Recommendation\r\nContent-Based Clustering (hierarchical navigators)\r\nPage-Rank \r\nUser-Item (Matrix Completion)\r\nSVD\r\nAlternating Least Square & Tensor Completion\r\n\r\n** Math behind system --- Problems and bottlenecks \r\nThe Hypothesises in above systems\r\nStatic Hypothesis\r\nHypothesis in clustering\r\nHypothesis in classification\r\nupdating rate versus computational complexity\r\nlearning rate versus real-time interactive\r\n\r\n** From Engineering View of Point", "talk_perm": "Don't record my talk", "language": "English", "author": "c3h3.tw@gmail.com", "speech_type": "Regular Talk", "tags": "recommendation system, numpy, pandas, scikit learn", "abstract": "In this talk, I will sharing some of my experiences about building a news recommendation system with text mining tools and web tools in python echosystem. Moreover, I will also share some important concepts, questions and experiences about \"how to design and build a recommendation system with tools in python echosystem.\" \r\n\r\nBesides, every recommendation system would meet large scale data mining problem. In this talk, I will also share some experience about dealing with large scale modeling problem with python. ", "additional_info": "", "reviews": [{"comment": "I think the speaker can give a really good presentation on this topic. But material selection, organization, and time control is really important for this type of talk.", "reviewer": "tjw", "rank": 5}, {"comment": "attractive at the first sight, and was left behind reading through description. maybe i am not the \"focused audience\" for this talk, i mean, can not really tell what it's trying to sell/share.", "reviewer": "jin", "rank": 2}, {"comment": "Recommandation system is the trend for the modern web services. ", "reviewer": "yudalin", "rank": 4}, {"comment": "Machine learning is hot in couple of years and always attracts people. But the content of talk is too wide and hard to believe it could be described well in every single part and the man who is familiar with this part will think the topic is too easy. Suggest to pick up the specific domain and let this talk could be extreme level talk.", "reviewer": "stanley", "rank": 5}], "id": 101, "duration": "40 mins", "title": "How to build a recommendation system with python", "decision": "Accepted", "slide_perm": "Don't publish my slide", "audience_level": "Introduction"}, {"description": "\u4ecb\u7d39\uff1a\r\n       \u904b\u7528\u96f2\u7aef\u8a9e\u97f3\u5408\u6210\u6280\u8853(Text-to-speech Technology,TTS)\uff0c\u8af8\u5982 Google Translate\u3001iSpeech\u7b49\u7b49\uff0c\u5efa\u7acb\u4e00\u5957\u80fd\u5920\u5f9e\u4e00\u6bb5\u9577\u7bc7\u6587\u7ae0\u53d6\u5f97\u97f3\u6587\u540c\u6b65(Speech-Text Synchronization)\u7684\u6280\u8853\uff0c\u4e26\u4e14\u904b\u7528\u6b64\u6280\u8853\u53d6\u5f97\u7684\u97f3\u6587\u540c\u6b65\u6709\u8072\u66f8\u7684Timed-text\u6a94\u6848\uff0c\u57fa\u65bc\u96fb\u8166\u8f14\u52a9\u8a9e\u8a00\u5b78\u7fd2(Computer-assisted Language Learning ,CALL)\u4e4b\u76ee\u7684\uff0c\u4ee5\u6b64Timed-text\u6a94\u6848\u88fd\u4f5c\u4e00\u5957\u57fa\u790e\u7684\u6709\u8072\u66f8\u5b78\u7fd2\u7cfb\u7d71\u3002\r\n\r\n\r\n\u7814\u7a76\u80cc\u666f\u8207\u52d5\u6a5f\uff1a\r\n     \u96a8\u8457\u5730\u7403\u6751\u8da8\u52e2\u7684\u4f86\u81e8\uff0c\u64c1\u6709\u591a\u7a2e\u7684\u8a9e\u8a00\u80fd\u529b\u6210\u70ba\u7af6\u722d\u529b\u7684\u4e00\u7a2e\u6307\u6a19\uff0c\u5728\u807d\u529b(listening)\u53ca\u53e3\u8aaa(speaking)\u4e0a\u7684\u8868\u9054\u80fd\u529b\u7336\u662f\uff0c\u56e0\u6b64\u5982\u4f55\u57f9\u990a\u8a9e\u8a00\u7684\u80fd\u529b\uff0c\u6f38\u6f38\u7684\u53d7\u5230\u91cd\u8996\u3002\r\n\r\n     \u6578\u4f4d\u6559\u6750\u5728\u96fb\u8166\u8207\u7db2\u8def\u666e\u904d\u4e26\u5927\u91cf\u4f7f\u7528\u4e4b\u4e0b\uff0c\u5df2\u9010\u6f38\u5f62\u6210\u4e00\u7a2e\u8da8\u52e2\uff0c\u904b\u7528\u96fb\u8166\u53ca\u7db2\u8def\u79d1\u6280\u8f14\u52a9\u7684\u8a9e\u8a00\u6559\u5b78\u5ee3\u53d7\u6ce8\u610f\uff0c\u300c\u96fb\u8166\u8f14\u52a9\u8a9e\u8a00\u5b78\u7fd2\u300d (Computer-assisted language learning , CALL )\uff0c\u6210\u70ba\u4e00\u9805\u71b1\u9580\u7684\u7814\u7a76\u4e3b\u984c\u3002\r\n\r\n\u76ee\u7684\uff1a\r\n      \u70ba\u9054CALL\u4e4b\u76ee\u7684\uff0c\u5e0c\u671b\u80fd\u5c07\u96f2\u7aef\u8a9e\u97f3\u5408\u6210\u6280\u8853\u548c\u97f3\u6587\u540c\u6b65\u6709\u8072\u66f8\u7d50\u5408\uff0c\u88fd\u4f5c\u4e00\u5957\u8f14\u52a9\u8a9e\u8a00\u5b78\u7fd2\u7684\u7cfb\u7d71\u3002\r\n", "talk_perm": "Don't record my talk", "language": "Mandarin", "author": "j79916@hotmail.com", "speech_type": "Regular Talk", "tags": "Speech-Text Alignment,Text-to-speech,Computer-assisted Language Learning", "abstract": "\u904b\u7528\u96f2\u7aef\u8a9e\u97f3\u5408\u6210\u6280\u8853(Text-to-speech Technology,TTS)\u7d50\u5408\u97f3\u6587\u540c\u6b65\u6280\u8853(Speech-Text Synchronization)\uff0c\u5efa\u7acb\u4e00\u5957\u80fd\u5920\u5f9e\u4e00\u6bb5\u9577\u7bc7\u6587\u7ae0\u53d6\u5f97\u97f3\u6587\u540c\u6b65\u6709\u8072\u66f8\u7684Timed-text\u6a94\u6848\u7684\u65b9\u6cd5\uff0c\u4e26\u57fa\u65bc\u96fb\u8166\u8f14\u52a9\u8a9e\u8a00\u5b78\u7fd2(Computer-assisted Language Learning ,CALL)\u4e4b\u76ee\u7684\uff0c\u5e0c\u671b\u4ee5\u6b64\u88fd\u4f5c\u4e00\u5957\u8f14\u52a9\u8a9e\u8a00\u5b78\u7fd2\u7684\u7cfb\u7d71\u3002\u5927\u6982\u6709\u4ee5\u4e0b\u6b65\u9a5f(1)Text Spliter \u2500 \u5c07\u539f\u59cb\u6587\u7ae0\u5207\u5272\u6210Sentence-level Text\uff0c\u4f7f\u5176\u9577\u5ea6\u80fd\u5920\u8b93Google TTS\u63a5\u53d7(2)Upload to Google translate \u2500 \u5229\u7528Python Standard Library \u7684urllib\u6a21\u7d44\uff0c\u5c07\u5b57\u4e32\u4ea4\u7d66Google TTS(3)Download TTS Audio file \u2500 \u7528binary\u7684\u65b9\u5f0f\u5c07Google TTS\u56de\u50b3\u7684\u5167\u5bb9\u5132\u5b58\u70baMP3(4)Timed-text file Converter \u2500 \u5c07Sentence-level Text\u9032\u4e00\u6b65\u9ecf\u4e0a\u6642\u9593\u6a19\u7c64\uff0c\u88fd\u4f5c\u6210SBV\u6a94(5)Audio Converter \u2500 \u5229\u7528FFmpeg\u5c07MP3\u6a94\u8f49\u6210WAV\u6a94(6)CguAlign \u2500 \u5c07WAV\u6a94\u548cSBV\u6a94\u4f5c\u81ea\u52d5\u5207\u97f3\uff0c\u4f7f\u7522\u751fWord-level Text\u7684SBV\u6a94(7)Website Presentation \u2500 \u7528javascript\u88fd\u4f5c\u7c21\u55ae\u7684\u7db2\u9801\u80fd\u5920\u6d41\u89bdWord-level\u97f3\u6587\u540c\u6b65\u7684\u6587\u7ae0\u3002", "additional_info": "[1] \u9ec3\u5049\u6770\uff0c\u8a9e\u97f3\u8fa8\u8b58\u4e4b\u97f3\u6587\u5c0d\u9f4a\u6280\u8853\u61c9\u7528\u65bc\u97f3\u6587\u540c\u6b65\u6709\u8072\u97f3\u4e4b\u5efa\u7acb\uff0c\u9577\u5e9a\u5927\u5b78\uff0c\u6c11\u570b101\u5e74\r\nhttps://drive.google.com/file/d/0ByPRx5aruSFcRnVMc3E0aTljZWM/view?usp=sharing\r\n[2]Google Translate https://cloud.google.com/translate/docs\r\n[3]Google \u7684\u8a9e\u97f3\u5408\u6210 API \u4e4b\u4f7f\u7528 (\u4f5c\u8005\uff1a\u9673\u937e\u8aa0)\r\nhttp://programmermagazine.github.io/201309/htm/article2.html\r\n[4]FFmpeg https://www.ffmpeg.org/\r\n[5]Python http://www.python.org/.org/", "reviews": [{"comment": "* Touching different field is the major reason I scored this proposal 5.", "reviewer": "drakeguan", "rank": 5}, {"comment": "Although the topic is not strong related to Python,\r\nbut good to hear the different kind of topic in PyCon.", "reviewer": "stanley", "rank": 4}, {"comment": "It is less about Python, even if it is a special topic.", "reviewer": "apua", "rank": 2}], "id": 34, "duration": "40 mins", "title": "\u96f2\u7aef\u8a9e\u97f3\u5408\u6210\u6280\u8853\u61c9\u7528\u65bc\u9577\u7bc7\u6587\u7ae0\u97f3\u6587\u540c\u6b65\u6709\u8072\u66f8\u4e4b\u5efa\u7acb", "decision": "Undecided", "slide_perm": "Don't publish my slide", "audience_level": "Introduction"}, {"description": "\u6bcf\u500b\u5beb\u7a0b\u5f0f\u7684\u4eba\u90fd\u6709\u500b\u5beb\u904a\u6232\u7684\u5922\u60f3\u3002\r\n\r\n\u5e0c\u671b\u85c9\u9019\u6b21 PyCon \u7684\u6a5f\u6703\uff0c\u628a\u4e00\u4e9b\u88fd\u4f5c\u904a\u6232\u7684\u5fc3\u5f97\u8ddf\u65b9\u6cd5\u50b3\u9054\u7d66\u4e00\u4e9b\u5beb\u7a0b\u5f0f\u7684\u521d\u5b78\u8005\u3002\r\n\r\n\u9019\u6b21 WorkShop \u6703\u5e36\u8457\u5927\u5bb6\u5206\u6790\u4ee5\u4e0b\u9019\u4e9b\u904a\u6232:\r\n\r\n* \u8caa\u98df\u86c7\r\n* \u7279\u8a13 99\r\n* \u8e29\u5730\u96f7\r\n* \u731c\u6578\u5b57 (\u96fb\u8166\u731c\u4f60\u7684\u6578\u5b57\uff0c\u4e0d\u662f\u73a9\u5bb6\u731c\u96fb\u8166\u5594)\r\n\r\n\u9084\u6703\u5e36\u5927\u5bb6\u8a66\u8a66\u770b\u4f7f\u7528 Kivy, \u4f86\u88fd\u4f5c\u9ad8\u4e92\u52d5\u6027\u7684\u904a\u6232\u3002\r\n\r\n\r\n\r\n\u672c\u6b21 WorkShop \u8a08\u756b\u5206\u6210\u5169\u500b\u968e\u6bb5\r\n\r\n\u7b2c\u4e00\u500b\u968e\u6bb5\u6703\u5728\u5ba2\u524d\u806f\u7d61\u53c3\u52a0\u8005\uff0c\u78ba\u8a8d\u74b0\u5883\u5df2\u7d93\u88dd\u597d\u3002\r\n\r\n\u7b2c\u4e8c\u500b\u968e\u6bb5\u662f\u5c31\u662f\u8ab2\u7a0b\u7576\u65e5\uff0c\u4e00\u65e9\u6211\u5011\u5c31\u958b\u59cb\u4e0a\u8ab2\u5beb\u7a0b\u5f0f\u3002\r\n\r\n\u9019\u6b21\u8ab2\u7a0b\u9810\u671f\u53c3\u52a0\u8005\u6703\u4f7f\u7528  Python, \u4e26\u4e14\u5c0d\u65bc\u5e7e\u4f55\u5ea7\u6a19\u7684\u6578\u5b78\u904b\u7b97\u6709\u57fa\u790e(\u570b\u9ad8\u4e2d\u7a0b\u5ea6\u53ef)\r\n\r\n\u6bd4\u5982\u8aaa\u5ea7\u6a19\u76f8\u52a0\uff0c\u659c\u7387\u7b49\u7b49\u7684\u5b9a\u7fa9\u6709\u4e86\u89e3\u3002\r\n\r\n\u6700\u5f8c\u5e0c\u671b\u4e0a\u5b8c\u8ab2\u4ee5\u5f8c\u5927\u5bb6\u90fd\u53ef\u4ee5\u62ff\u8d77 PyGame, \u5beb\u51fa\u7c21\u6613\u7684\u4e92\u52d5\u7a0b\u5f0f\u3002\r\n\r\n\r\n\r\n\r\n\r\n\r\n\u8b1b\u8005\u4ecb\u7d39\uff1a\r\n\r\n* Taipei.py organizer\r\n* 2012 \u5e74\u53c3\u8207 Evernote \u99ed\u5ba2\u677e\u7af6\u8cfd,\u69ae\u7372\u53f0\u7063\u5340\u51a0\u8ecd\r\n* 2014 \u767e\u5ea6\u958b\u653e\u96f2 Hackathon\uff0c\u7372\u5f97\u6700\u6709\u6f5b\u529b\u734e\r\n* PyCon APAC 2014 Chairman\r\n\r\n\r\n\r\n\r\n ", "talk_perm": "Don't record my talk", "language": "Mandarin", "author": "tim.yellow@gmail.com", "speech_type": "Workshop", "tags": "pygame", "abstract": "\u4ecb\u7d39 PyGame \r\n\u4ecb\u7d39\u88fd\u4f5c\u904a\u6232\u6642\u9700\u8981\u7684\u67b6\u69cb\r\n\u4ecb\u7d39\u5404\u5f0f\u904a\u6232\u9700\u8981\u7684\u6f14\u7b97\u6cd5", "additional_info": "http://www.pygame.org/news.html", "reviews": [{"comment": "\u5b78\u54e1\u53ef\u4ee5\u8caa\u5fc3\u5b78\u5230\u66f4\u591a\u7bc4\u4f8b\u55ce?", "reviewer": "marr", "rank": 5}, {"comment": "\u975e\u5e38\u8caa\u5fc3\u5730\u60f3\u53c3\u52a0 Tim \u7684\u6559\u5b78\u3002", "reviewer": "keitheis", "rank": 5}, {"comment": "\u6211\u559c\u6b61\u8b1b\u8005\u7684\u98a8\u683c\uff0c\u4f46\u6b64\u984c\u6750\u53ef\u80fd\u6bd4\u8f03\u9069\u5408 tutorial \u3002", "reviewer": "tjw", "rank": 4}, {"comment": "Interesting\uff01", "reviewer": "c3h3", "rank": 5}], "id": 11, "duration": "Whole Day", "title": "\u5982\u4f55\u7528 PyGame \u6253\u9020\u8caa\u98df\u86c7 ", "decision": "Accepted", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}, {"description": "\u795e\u7d93\u7db2\u8def\u6f14\u7b97\u6cd5\u4f7f\u7528\u5012\u50b3\u905e\u6f14\u7b97\u6cd5\uff0c\u4fee\u6539\u81eaNeil Schemenauer\u524d\u8f29\u7684\u6f14\u7b97\u6cd5\u7a0b\u5f0f\u4f86\u7576\u4f5c\u672c\u8fa8\u8b58\u7a0b\u5f0f\u4e4b\u4e3b\u8981\u6f14\u7b97\u6cd5\u3002\r\n\u4ee5\u6b64\u6f14\u7b97\u6cd5\u548c\u81ea\u5df1\u5efa\u7acb\u6578\u5f35\u8c93\u54aa\u5716\u7247\u4f86\u7576\u4f5c\u8a13\u7df4\u4ee5\u53ca\u6e2c\u8a66\u7528\u7684\u6a23\u672c\u8cc7\u6599\u3002\u8c93\u54aa\u5716\u7247\u8a2d\u5b9a\u70ba10x10\u50cf\u7d20\uff0c\u4f86\u53d6\u51fa10\u500b\u7279\u5fb5\u503c\uff0c\u6240\u4ee5\u5efa\u7acb\u4ee510\u500b\u8f38\u5165\u795e\u7d93\u5143\u3002\u8fa8\u8b58\u4e94\u7a2e\u8c93\u6240\u4ee5\u5efa\u7acb5\u500b\u8f38\u51fa\u795e\u7d93\u5143\u3002\u96b1\u85cf\u5c64\u53d68\u500b\u795e\u7d93\u5143\u3002\u5efa\u7acb\u4ee5\u4e0a\u4e09\u5c64\u7684\u591a\u5c64\u795e\u7d93\u7db2\u8def\u3002\r\n\u7db2\u8def\u6703\u628a\u8a13\u7df4\u6a23\u672c\u8b80\u5165\u7db2\u8def\u4f86\u53cd\u8986\u8a13\u7df4\u7db2\u8def\uff0c\u8a13\u7df42000\u6b21\u4ee5\u5f8c\u518d\u4ee5\u6e2c\u9a57\u6a23\u672c\u4f86\u6e2c\u8a66\u7db2\u8def\u7684\u8fa8\u8b58\u7a0b\u5ea6\u3002\r\n\r\n\u66f4\u8a73\u7d30\u7684\u7a0b\u5f0f\u4ecb\u7d39\u53ef\u4ee5\u53c3\u8003\u6211\u7684\u90e8\u843d\u683c\u6587\u7ae0:\r\nhttp://jeng29028.blogspot.tw/2015/01/pattern-recognition-final-report.html", "talk_perm": "CC-BY-NC-SA", "language": "Mandarin", "author": "jeng2604@gmail.com", "speech_type": "Lightning Talk", "tags": "neural network", "abstract": "\u904b\u7528\u985e\u795e\u7d93\u7db2\u8def\u4e4b\u7406\u8ad6\uff0c\u5be6\u4f5c\u51fa\u4e00\u500b\u8fa8\u8b58\u7a0b\u5f0f\u3002\u80fd\u5920\u8fa8\u8b58\u4e00\u5f35\u672a\u77e5\u7684\u8c93\u54aa\u5716\u7247\u7136\u5f8c\u544a\u8a34\u4f7f\u7528\u8005\u9019\u96bb\u8c93\u54aa\u7684\u54c1\u7a2e\u70ba\u4f55\u3002\r\n\u8a2d\u8a08\u5169\u7a2e\u65b9\u6cd5\u4f86\u6bd4\u8f03\u8fa8\u8b58\u5ea6\u7684\u9ad8\u4f4e\uff0c\u5206\u5225\u662f\u4ee5\u8c93\u982d\u8fa8\u8b58\u548c\u4ee5\u5206\u6210\u4e09\u90e8\u4f4d(\u5de6\u8033\u3001\u53f3\u8033\u3001\u81c9)\u4f86\u8fa8\u8b58\u518d\u52a0\u4ee5\u6574\u5408\u3002\u9810\u671f\u4f7f\u7528\u4e09\u90e8\u4f4d\u8fa8\u8b58\u6703\u6bd4\u4f7f\u7528\u8c93\u982d\u8fa8\u8b58\u7684\u8fa8\u8b58\u7387\u9084\u8981\u9ad8\u3002\r\n\u6700\u5f8c\u5be6\u969b\u6e2c\u8a66\u7684\u7d50\u679c\u5982\u4e0b:\u54c1\u7a2e\u8a2d\u5b9a\u70ba\u4e94\u7a2e\u8c93\uff0c70\u5f35\u8a13\u7df4\u6a23\u672c\u820740\u5f35\u6e2c\u8a66\u6a23\u672c\u4e2d\uff0c\u4f7f\u7528\u8c93\u982d\u8fa8\u8b58\u7684\u6b63\u78ba\u7387\u70ba40%\uff1b\u800c\u4f7f\u7528\u4e09\u90e8\u5206\u8fa8\u8b58\u7684\u6b63\u78ba\u7387\u70ba52.5%\u3002\u5982\u679c\u662f\u4e94\u7a2e\u54c1\u7a2e\u96a8\u4fbf\u731c\uff0c\u6b63\u78ba\u7387\u70ba20%\uff0c\u53ef\u898b\u4f7f\u7528\u6b64\u7406\u8ad6\u5efa\u7f6e\u51fa\u4f86\u7684\u8fa8\u8b58\u7a0b\u5f0f\u4f7f\u5f97\u96fb\u8166\u6709\u4e00\u5b9a\u7a0b\u5ea6\u7684\u667a\u6167\u4f86\u8fa8\u8b58\u4e94\u7a2e\u8c93\u54aa\u5716\u7247\u7684\u54c1\u7a2e\u3002\r\n", "additional_info": "\u6f14\u7b97\u6cd5\u7a0b\u5f0f\u539f\u4f5c\u8005: Neil Schemenauer <nas@arctrix.com>\r\n\u8c93\u54aa\u5716\u7247\u53d6\u81ea\u65bc\u7db2\u8def", "reviews": [{"comment": "His abstract and description are written in detail, so I'll try make my\r\nfeedback as solid as I could. Using neural network in Python on vision\r\nrecognition is definitely interesting, however I'd like to see a more general\r\ncomparison and exploration, so audience can actually \"learn\" the concept of\r\nneural network and a general experience of the Python implementation after the\r\ntalk, so they could play with these take-home messages themselves.\r\n\r\nFor example, say normal NN models are trained based on backward propagation,\r\nit is good to explain how the backprop works in Python. Numpy may be heavily\r\nused, and there exists some trick for efficient Numpy matrix computation.\r\nAlso, it would be a lot easier to create new models (classifiers) if the code\r\nfor each neural layer is well modularized. Some popular Python NN libraries\r\nare available, they worth comparison (if one wants to) too. One may wish to\r\nleverage the computing power of GPU once the NN structure gets deeper and\r\nlarger. Explaining these general concepts could help audience jump into\r\nthe beautiful and fascinating machine learning world.\r\n\r\nOn the other hand, there leaves some technical stuff to be desired in his NN\r\nstructure design judging from a modern NN view. Firstly, the input size is\r\nway too small, using 10-by-10 pixel reduces the real world complexity too much.\r\nEven the MNIST hand written digit recognition dataset has higher input\r\ndimension. This also poses a limiting upper bound for accuracy. Secondly the\r\nmodel is too simple, most people call this a two-layer (or one hidden layer)\r\nneural network instead of three, where first layer usually doesn't count\r\n(since one \"train\" the input layer). He should try deeper neural network and\r\nvisualizing the weights learnt by the classifier. Current development of\r\nvisual NN heavily relies on the idea of convolutional neural network (CNN)\r\nwhich is biologically inspired so one could actually \"visualize\" those weights\r\nas colorful filters. We are not talking about the giant corporation-like\r\nImageNet CNN model with 10+ hidden layers and requires few days to train. One\r\nsimple CNN layer plus the fully connected layer would boost the performance\r\nsignificantly and brings a lot of insight that decades of research finally\r\nachieve and brings up a frenzy of the CNN era, which he should definitely try\r\nit in a 40min talk. Lastly, why 5 types of cats and why not crawl more cats\r\nfrom the internet? I think by supplying keyword to Flickr one could able to\r\ncreate a clean and large dataset (at least more than a hundred). Let alone the\r\n*evil* data augmentation process that utilizes cropping, color transformation\r\nfor creating more data to alleviate the over-fitting.\r\n\r\nBased on the above reason, the talk could be more constructive and\r\ninteresting. I believe he is absolutely capable of a successful talk, the last\r\nthing he misses is simply letting the imagination go wild.", "reviewer": "liang2", "rank": 2}, {"comment": "\u8a8d\u540c liang2 \u7684\u610f\u898b\u3002NN \u662f\u975e\u5e38\u597d\u7528\u7684\u5de5\u5177\uff0c\u4f46\u6700\u5927\u554f\u984c\u4e5f\u662f\u5176\u9ed1\u7bb1\u4f5c\u696d\u3002\u5982\u679c\u53ea\u662f\u4f7f\u7528\u67d0\u7a2e\u6a21\u578b\u4f86\u89e3\u6c7a\u7279\u5b9a\u554f\u984c\uff0c\u4f46\u7f3a\u4e4f\u66f4\u6df1\u5165\u7684\u8aaa\u660e\u8207\u6bd4\u8f03\uff0c\u5f88\u5bb9\u6613\u8b93\u4eba\u89ba\u7684\u7d50\u679c\u53ea\u662f tune \u51fa\u4f86\u3002", "reviewer": "sosorry", "rank": 3}, {"comment": "\u4e3b\u8981\u7684\u50f9\u503c\u5728\u57fa\u790e\u6559\u5b78\u3001\u5c55\u793a\u9019\u65b9\u9762\u3002", "reviewer": "tjw", "rank": 3}], "id": 29, "duration": "40 mins", "title": "\u4ee5\u5012\u50b3\u905e\u985e\u795e\u7d93\u7db2\u8def\u8fa8\u8b58\u8c93\u54aa\u5716\u7247", "decision": "Rejected", "slide_perm": "CC-BY-NC-SA", "audience_level": "Introduction"}]